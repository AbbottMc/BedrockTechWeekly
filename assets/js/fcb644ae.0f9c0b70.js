"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[28806],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(r),m=i,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,a(a({ref:t},c),{},{components:r})):n.createElement(f,a({ref:t},c))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[d]="string"==typeof e?e:i,a[1]=p;for(var s=2;s<o;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},85722:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var n=r(87462),i=(r(67294),r(3905));const o={id:"ClipboardWriteOptions",title:"Interface: ClipboardWriteOptions",sidebar_label:"ClipboardWriteOptions",sidebar_position:0,custom_edit_url:null},a=void 0,p={unversionedId:"sapi/preview/server-editor/interfaces/ClipboardWriteOptions",id:"sapi/preview/server-editor/interfaces/ClipboardWriteOptions",title:"Interface: ClipboardWriteOptions",description:"Interface used to specify the options when a clipboard item",source:"@site/docs/sapi/preview/server-editor/interfaces/ClipboardWriteOptions.md",sourceDirName:"sapi/preview/server-editor/interfaces",slug:"/sapi/preview/server-editor/interfaces/ClipboardWriteOptions",permalink:"/docs/sapi/preview/server-editor/interfaces/ClipboardWriteOptions",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"ClipboardWriteOptions",title:"Interface: ClipboardWriteOptions",sidebar_label:"ClipboardWriteOptions",sidebar_position:0,custom_edit_url:null},sidebar:"sapiPreviewSidebar",previous:{title:"BuiltInUIManager",permalink:"/docs/sapi/preview/server-editor/interfaces/BuiltInUIManager"},next:{title:"CursorProperties",permalink:"/docs/sapi/preview/server-editor/interfaces/CursorProperties"}},l={},s=[{value:"Properties",id:"properties",level:2},{value:"anchor",id:"anchor",level:3},{value:"mirror",id:"mirror",level:3},{value:"offset",id:"offset",level:3},{value:"rotation",id:"rotation",level:3}],c={toc:s};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Interface used to specify the options when a clipboard item\nis being written to the world"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"anchor"},"anchor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"anchor"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Vector3")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.kt)("p",null,"The anchor is a unit vector representation of the side or\ncorner of the Clipboard Item to be written to the world.\n",(0,i.kt)("inlineCode",{parentName:"p"},"{0, 0, 0}")," represents the center of the Clipboard item,\n",(0,i.kt)("inlineCode",{parentName:"p"},"{0, 1, 0}")," represents the top, ",(0,i.kt)("inlineCode",{parentName:"p"},"{-1, -1, -1}")," represents\nthe bottom/back/left corner, etc\nThe anchor is used in conjunction with the item size to\ndetermine the object relative anchor point where the object\nwill be applied in the world.\nValues for the X/Y/Z components should be within the range\n",(0,i.kt)("inlineCode",{parentName:"p"},"(-1 <= X/Y/Z <=1)")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"mirror"},"mirror"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"mirror"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"StructureMirrorAxis")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.kt)("p",null,"An enum which represents the axis (or combination of axis')\nalong which the item should be mirrored"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"X"),(0,i.kt)("li",{parentName:"ul"},"Z"),(0,i.kt)("li",{parentName:"ul"},"XZ")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"offset"},"offset"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"offset"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Vector3")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.kt)("p",null,"A position offset which should be applied to the paste\nlocation while the clipboard item is being written"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rotation"},"rotation"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"rotation"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"StructureRotation")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.kt)("p",null,"An enum representing the rotation around the Y-Axis which\nshould be applied while the clipboard item is being written"))}d.isMDXComponent=!0}}]);