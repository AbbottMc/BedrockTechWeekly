"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[81958],{8945:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>h});var r=i(74848),s=i(28453);const l={},t=void 0,a={id:"changelog_source/preview/1.19.80.21/gameplay",title:"gameplay",description:"Experimental Features",source:"@site/docs/changelog_source/preview/1.19.80.21/gameplay.mdx",sourceDirName:"changelog_source/preview/1.19.80.21",slug:"/changelog_source/preview/1.19.80.21/gameplay",permalink:"/docs/changelog_source/preview/1.19.80.21/gameplay",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.19.80.21/gameplay.mdx",tags:[],version:"current",frontMatter:{}},o={},h=[{value:"<strong>Experimental Features</strong>",id:"experimental-features",level:2},{value:"<strong>Armor Trims</strong>",id:"armor-trims",level:3},{value:"<strong>Blocks</strong>",id:"blocks",level:3},{value:"<strong>Archaeology feature set:</strong>",id:"archaeology-feature-set",level:4},{value:"<strong>Mobs</strong>",id:"mobs",level:3},{value:"<strong>Netherite Equipment</strong>",id:"netherite-equipment",level:3},{value:"<strong>Smithing Templates</strong>",id:"smithing-templates",level:3},{value:"<strong>Features and Bug Fixes</strong>",id:"features-and-bug-fixes",level:2},{value:"<strong>Accessibility Features</strong>",id:"accessibility-features",level:3},{value:"<strong>Blocks</strong>",id:"blocks-1",level:3},{value:"<strong>Gameplay</strong>",id:"gameplay",level:3},{value:"<strong>Graphical</strong>",id:"graphical",level:3},{value:"<strong>User Interface</strong>",id:"user-interface",level:3},{value:"<strong>Vanilla Parity</strong>",id:"vanilla-parity",level:3},{value:"<strong>Villagers</strong>",id:"villagers",level:4}];function c(e){const n={a:"a",h2:"h2",h3:"h3",h4:"h4",li:"li",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"experimental-features",children:(0,r.jsx)(n.strong,{children:"Experimental Features"})}),"\n",(0,r.jsx)(n.h3,{id:"armor-trims",children:(0,r.jsx)(n.strong,{children:"Armor Trims"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"You can now visually customize your armor with a variety of unique trims at the Smithing Table"}),"\n",(0,r.jsxs)(n.li,{children:["Armor Trims are purely visual with no gameplay benefits, and can only be applied to Helmets, Chestplates, Leggings, and Boots","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"All trim patterns are visually the same on an armor's item icon, but the color will still change based on the trim material"}),"\n",(0,r.jsx)(n.li,{children:"To check which trim pattern a piece of armor has, you can hover over it in the inventory"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Armor Trim Smithing Templates can be found all throughout the world, and each of the following structures contain their own unique Smithing Template:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Pillager Outpost","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Sentry Armor Trim"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Desert Pyramid","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Dune Armor Trim"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Shipwreck","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Coast Armor Trim"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Jungle Temple","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Wild Armor Trim"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Ocean Monument","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Tide Armor Trim"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Ancient City","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ward Armor Trim"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Woodland Mansion","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Vex Armor Trim"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Nether Fortress","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Rib Armor Trim"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Bastion Remnant","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Snout Armor Trim"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Stronghold","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Eye Armor Trim"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["End City","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Spire Armor Trim"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Smithing Templates are found in Chests in their respective structure, except for the Ocean Monument. Instead of finding it in Chests, Elder Guardians sometimes drop a Smithing Template when defeated"}),"\n",(0,r.jsx)(n.li,{children:"Some Armor Trim Smithing Templates are rarer than others, so be on the lookout for them to impress your friends!"}),"\n",(0,r.jsxs)(n.li,{children:["An Armor Trim has two properties: a pattern and a material","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The pattern is defined by the Smithing Template used to apply the trim, and represents the visual pattern of the trim"}),"\n",(0,r.jsx)(n.li,{children:"The material is defined by what ingredient you used to apply the trim, and represents the color of the trim"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["The viable ingredients you can use to define the color of your Armor Trim are the following:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Iron"}),"\n",(0,r.jsx)(n.li,{children:"Copper"}),"\n",(0,r.jsx)(n.li,{children:"Gold"}),"\n",(0,r.jsx)(n.li,{children:"Lapis"}),"\n",(0,r.jsx)(n.li,{children:"Emerald"}),"\n",(0,r.jsx)(n.li,{children:"Diamond"}),"\n",(0,r.jsx)(n.li,{children:"Netherite"}),"\n",(0,r.jsx)(n.li,{children:"Redstone"}),"\n",(0,r.jsx)(n.li,{children:"Amethyst"}),"\n",(0,r.jsx)(n.li,{children:"Quartz"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"blocks",children:(0,r.jsx)(n.strong,{children:"Blocks"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The Piglin Head Block's ears now flap when the wearer is Riding a vehicle"}),"\n",(0,r.jsxs)(n.li,{children:["Cherry Stripped Wood can now be crafted from Cherry Stripped Log (",(0,r.jsx)(n.a,{href:"https://bugs.mojang.com/browse/MCPE-168053",children:"MCPE-168053"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Updated Cherry Leaves & Cherry Sign textures (",(0,r.jsx)(n.a,{href:"https://bugs.mojang.com/browse/MCPE-168059",children:"MCPE-168059"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"archaeology-feature-set",children:(0,r.jsx)(n.strong,{children:"Archaeology feature set:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Added the Suspicious Gravel block"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"mobs",children:(0,r.jsx)(n.strong,{children:"Mobs"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Frogs born in the Cherry Grove biome are now the temperate variant instead of the cold variant (",(0,r.jsx)(n.a,{href:"https://bugs.mojang.com/browse/MCPE-168083",children:"MCPE-168083"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"netherite-equipment",children:(0,r.jsx)(n.strong,{children:"Netherite Equipment"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Netherite equipment crafting now also requires a Netherite Upgrade Smithing Template"}),"\n",(0,r.jsx)(n.li,{children:"Netherite Upgrade Smithing Templates can be found randomly in all Bastion Remnant chests, and there is a guarantee of 2 in every Treasure Room Bastion Remnant"}),"\n",(0,r.jsxs)(n.li,{children:["This change was made for a variety of reasons:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Increases the time players utilize Diamond equipment before Netherite"}),"\n",(0,r.jsx)(n.li,{children:"Make Netherite equipment a more significant achievement in the game's progression"}),"\n",(0,r.jsx)(n.li,{children:"Adapts Netherite more naturally into the new Smithing Table crafting system"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"smithing-templates",children:(0,r.jsx)(n.strong,{children:"Smithing Templates"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Smithing Tables have been redesigned into a workstation for physical equipment upgrades and modifications"}),"\n",(0,r.jsx)(n.li,{children:"Alongside slots for combining a piece of equipment and materials, there is now a required slot for an item type called Smithing Templates"}),"\n",(0,r.jsxs)(n.li,{children:["Smithing Templates define what type of upgrade you will be making to equipment","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"It specifies both what type of items you can upgrade, and which ingredients are valid to customize the upgrade"}),"\n",(0,r.jsx)(n.li,{children:"There are currently two categories of Smithing Templates: Armor Trim and Netherite Upgrade"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Smithing Templates are consumed when used to upgrade an item in the Smithing Table"}),"\n",(0,r.jsx)(n.li,{children:"You can craft a copy of a Smithing Template in the Crafting Table with 7 Diamonds + 1 block of material that the template is made out of + 1 Smithing Template, which will output 2 of the same Smithing Template"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"features-and-bug-fixes",children:(0,r.jsx)(n.strong,{children:"Features and Bug Fixes"})}),"\n",(0,r.jsx)(n.h3,{id:"accessibility-features",children:(0,r.jsx)(n.strong,{children:"Accessibility Features"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Potions no longer have an enchantment glint due to it obscuring the color of the potion contents"}),"\n",(0,r.jsx)(n.li,{children:"Potions have had their colors adjusted to make them more distinguishable from each other"}),"\n",(0,r.jsx)(n.li,{children:"Decreased the default visibility of the glint on enchanted items, which can now be modified in the Accessibility Settings"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"blocks-1",children:(0,r.jsx)(n.strong,{children:"Blocks"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'"fence" block is now split into unique names, "oak_fence", "acacia_fence", "birch_fence", "dark_oak_fence", "jungle_fence", and "spruce_fence"'}),"\n",(0,r.jsx)(n.li,{children:'Commands will still work with "fence", but only new fence name will be suggested in the command prompt'}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"gameplay",children:(0,r.jsx)(n.strong,{children:"Gameplay"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Fixed experience orb position desync after teleport (",(0,r.jsx)(n.a,{href:"https://bugs.mojang.com/browse/MCPE-59584",children:"MCPE-59584"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Going into lava in third person view no longer causes the camera to turn black (",(0,r.jsx)(n.a,{href:"https://bugs.mojang.com/browse/MCPE-166861",children:"MCPE-166861"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Fixed an issue where players load incorrect data when loading a local game after connecting to a server or Realm (",(0,r.jsx)(n.a,{href:"https://bugs.mojang.com/browse/MCPE-164765",children:"MCPE-164765"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Fixed an issue where the player camera height was incorrect with or without the sneak toggle (",(0,r.jsx)(n.a,{href:"https://bugs.mojang.com/browse/MCPE-167559",children:"MCPE-167559"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"graphical",children:(0,r.jsx)(n.strong,{children:"Graphical"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"LevelChunks no longer flicker in The End dimension when Clientside Chunk Generation is enabled"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"user-interface",children:(0,r.jsx)(n.strong,{children:"User Interface"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Corrected toggle navigation in Edit World menu while using gamepad or keyboard that were previously skipped"}),"\n",(0,r.jsx)(n.li,{children:"Updated designs for sign in and sign up screens in preview"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"vanilla-parity",children:(0,r.jsx)(n.strong,{children:"Vanilla Parity"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Search bar in Creative inventory screen is now automatically selected while using a keyboard"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"villagers",children:(0,r.jsx)(n.strong,{children:"Villagers"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Villagers will now wake up in a valid position and will not phase though blocks (",(0,r.jsx)(n.a,{href:"https://bugs.mojang.com/browse/MCPE-142544",children:"MCPE-142544"}),")"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var r=i(96540);const s={},l=r.createContext(s);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);