"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[34040],{43569:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var s=o(74848),n=o(28453);const t={},i="Interface: CursorProperties",c={id:"sapi/preview/server-editor/interfaces/CursorProperties",title:"Interface: CursorProperties",description:"The CursorProperties interface is used to describe the",source:"@site/docs/sapi/preview/server-editor/interfaces/CursorProperties.md",sourceDirName:"sapi/preview/server-editor/interfaces",slug:"/sapi/preview/server-editor/interfaces/CursorProperties",permalink:"/docs/sapi/preview/server-editor/interfaces/CursorProperties",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/sapi/preview/server-editor/interfaces/CursorProperties.md",tags:[],version:"current",frontMatter:{},sidebar:"sapiPreviewSidebar",previous:{title:"ClipboardWriteOptions",permalink:"/docs/sapi/preview/server-editor/interfaces/ClipboardWriteOptions"},next:{title:"CustomWidgetCreateOptions",permalink:"/docs/sapi/preview/server-editor/interfaces/CustomWidgetCreateOptions"}},d={},l=[{value:"Properties",id:"properties",level:2},{value:"controlMode?",id:"controlmode",level:3},{value:"Remarks",id:"remarks",level:4},{value:"fixedModeDistance?",id:"fixedmodedistance",level:3},{value:"Remarks",id:"remarks-1",level:4},{value:"outlineColor?",id:"outlinecolor",level:3},{value:"Remarks",id:"remarks-2",level:4},{value:"projectThroughLiquid?",id:"projectthroughliquid",level:3},{value:"targetMode?",id:"targetmode",level:3},{value:"Remarks",id:"remarks-3",level:4},{value:"visible?",id:"visible",level:3},{value:"Remarks",id:"remarks-4",level:4}];function a(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"interface-cursorproperties",children:"Interface: CursorProperties"}),"\n",(0,s.jsx)(r.p,{children:"The CursorProperties interface is used to describe the\nproperties of the Editor 3D block cursor construct.\nThe 3D block cursor can be queried to retrieve the current\nproperties, and the same property class can be used to set\nthe current properties of the cursor.\nThis interface is generally used at the activation stage of\nthe active tool to set up the color, visibility and input\nproperties of the 3D block cursor"}),"\n",(0,s.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(r.h3,{id:"controlmode",children:"controlMode?"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"optional"})," ",(0,s.jsx)(r.strong,{children:"controlMode"}),": ",(0,s.jsx)(r.a,{href:"/docs/sapi/preview/server-editor/enumerations/CursorControlMode",children:(0,s.jsx)(r.code,{children:"CursorControlMode"})})]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"remarks",children:"Remarks"}),"\n",(0,s.jsx)(r.p,{children:"Enum representing the cursor control mode"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Fixed Mode locks the cursor to a position which is <X>\nblocks offset from the current player position. The cursor\nis camera relative, so it will always appear <X> blocks\nahead of the players feet"}),"\n",(0,s.jsx)(r.li,{children:"Keyboard Mode puts the cursor under direct control of the\nAPI, and ignores any mouse input.  The cursor can only be\nmoved around using the moveBy method"}),"\n",(0,s.jsx)(r.li,{children:"KeyboardAndMouse mode puts the cursor under a shared\ncontrol of onMouseMove and keyboard input.  Any mouse\nmovement events will set the cursor to the position of the\nmouse/world raycast.  This can be modified using the moveBy\nmethod, but any subsequent mouse events will reset the\nposition back to where the raycast intersection occurs"}),"\n",(0,s.jsx)(r.li,{children:"Mouse mode puts the cursor under control of mouse move\nevents, and moveBy method will be ignored"}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"fixedmodedistance",children:"fixedModeDistance?"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"optional"})," ",(0,s.jsx)(r.strong,{children:"fixedModeDistance"}),": ",(0,s.jsx)(r.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"remarks-1",children:"Remarks"}),"\n",(0,s.jsxs)(r.p,{children:["The fixed distance from the players feet at which the cursor\nis attached, relative to camera direction.\nThis is only used when [controlMode] is set to ",(0,s.jsx)(r.code,{children:"Fixed"})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"outlinecolor",children:"outlineColor?"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"optional"})," ",(0,s.jsx)(r.strong,{children:"outlineColor"}),": ",(0,s.jsx)(r.code,{children:"RGBA"})]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"remarks-2",children:"Remarks"}),"\n",(0,s.jsx)(r.p,{children:"A [Color] Property representing the color of the block\ncursor object outline"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"projectthroughliquid",children:"projectThroughLiquid?"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"optional"})," ",(0,s.jsx)(r.strong,{children:"projectThroughLiquid"}),": ",(0,s.jsx)(r.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"targetmode",children:"targetMode?"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"optional"})," ",(0,s.jsx)(r.strong,{children:"targetMode"}),": ",(0,s.jsx)(r.a,{href:"/docs/sapi/preview/server-editor/enumerations/CursorTargetMode",children:(0,s.jsx)(r.code,{children:"CursorTargetMode"})})]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"remarks-3",children:"Remarks"}),"\n",(0,s.jsx)(r.p,{children:"An enum representing the cursor target mode"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Block Mode records the block position of the mouse/world\nraycast intersection"}),"\n",(0,s.jsx)(r.li,{children:"Face Mode records the block position of the block adjacent\nto the mouse/world raycast intersection, according to the\nface of the collision point of the selected block"}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"visible",children:"visible?"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"optional"})," ",(0,s.jsx)(r.strong,{children:"visible"}),": ",(0,s.jsx)(r.code,{children:"boolean"})]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"remarks-4",children:"Remarks"}),"\n",(0,s.jsx)(r.p,{children:"Boolean flag controlling the visibility of the 3D block\ncursor"})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,r,o)=>{o.d(r,{R:()=>i,x:()=>c});var s=o(96540);const n={},t=s.createContext(n);function i(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);