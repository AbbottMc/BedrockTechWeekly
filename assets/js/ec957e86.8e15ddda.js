"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[68755],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>d});var r=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},y="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),y=s(n),u=o,d=y["".concat(p,".").concat(u)]||y[u]||g[u]||i;return n?r.createElement(d,a(a({ref:t},c),{},{components:n})):r.createElement(d,a({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[y]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8474:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(58168),o=(n(96540),n(15680));const i={id:"TeleportOptions",title:"Interface: TeleportOptions",sidebar_label:"TeleportOptions",sidebar_position:0,custom_edit_url:null},a=void 0,l={unversionedId:"sapi/stable/server/interfaces/TeleportOptions",id:"sapi/stable/server/interfaces/TeleportOptions",title:"Interface: TeleportOptions",description:"Contains additional options for teleporting an entity.",source:"@site/docs/sapi/stable/server/interfaces/TeleportOptions.md",sourceDirName:"sapi/stable/server/interfaces",slug:"/sapi/stable/server/interfaces/TeleportOptions",permalink:"/docs/sapi/stable/server/interfaces/TeleportOptions",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"TeleportOptions",title:"Interface: TeleportOptions",sidebar_label:"TeleportOptions",sidebar_position:0,custom_edit_url:null},sidebar:"sapiStableSidebar",previous:{title:"StructurePlaceOptions",permalink:"/docs/sapi/stable/server/interfaces/StructurePlaceOptions"},next:{title:"TitleDisplayOptions",permalink:"/docs/sapi/stable/server/interfaces/TitleDisplayOptions"}},p={},s=[{value:"Properties",id:"properties",level:2},{value:"checkForBlocks",id:"checkforblocks",level:3},{value:"dimension",id:"dimension",level:3},{value:"facingLocation",id:"facinglocation",level:3},{value:"keepVelocity",id:"keepvelocity",level:3},{value:"rotation",id:"rotation",level:3}],c={toc:s},y="wrapper";function g(e){let{components:t,...n}=e;return(0,o.yg)(y,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Contains additional options for teleporting an entity."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},(0,o.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,o.yg)("p",null,"teleportMovement.ts"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"import { world, system } from '@minecraft/server';\n\nconst overworld = world.getDimension('overworld');\nconst targetLocation = { x: 0, y: 0, z: 0 };\n\nconst pig = overworld.spawnEntity('minecraft:pig', targetLocation);\n\nlet inc = 1;\nconst runId = system.runInterval(() => {\n    pig.teleport(\n        { x: targetLocation.x + inc / 4, y: targetLocation.y + inc / 4, z: targetLocation.z + inc / 4 },\n        {\n            facingLocation: targetLocation,\n        },\n    );\n\n    if (inc > 100) {\n        system.clearRun(runId);\n    }\n    inc++;\n}, 4);\n")),(0,o.yg)("h2",{id:"properties"},"Properties"),(0,o.yg)("h3",{id:"checkforblocks"},"checkForBlocks"),(0,o.yg)("p",null,"\u2022 ",(0,o.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.yg)("strong",{parentName:"p"},"checkForBlocks"),": ",(0,o.yg)("inlineCode",{parentName:"p"},"boolean")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},(0,o.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,o.yg)("p",null,"Whether to check whether blocks will block the entity after\nteleport."),(0,o.yg)("hr",null),(0,o.yg)("h3",{id:"dimension"},"dimension"),(0,o.yg)("p",null,"\u2022 ",(0,o.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.yg)("strong",{parentName:"p"},"dimension"),": ",(0,o.yg)("a",{parentName:"p",href:"/docs/sapi/stable/server/classes/Dimension"},(0,o.yg)("inlineCode",{parentName:"a"},"Dimension"))),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},(0,o.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,o.yg)("p",null,"Dimension to potentially move the entity to.  If not\nspecified, the entity is teleported within the dimension\nthat they reside."),(0,o.yg)("hr",null),(0,o.yg)("h3",{id:"facinglocation"},"facingLocation"),(0,o.yg)("p",null,"\u2022 ",(0,o.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.yg)("strong",{parentName:"p"},"facingLocation"),": ",(0,o.yg)("a",{parentName:"p",href:"/docs/sapi/stable/server/interfaces/Vector3"},(0,o.yg)("inlineCode",{parentName:"a"},"Vector3"))),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},(0,o.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,o.yg)("p",null,"Location that the entity should be facing after teleport."),(0,o.yg)("hr",null),(0,o.yg)("h3",{id:"keepvelocity"},"keepVelocity"),(0,o.yg)("p",null,"\u2022 ",(0,o.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.yg)("strong",{parentName:"p"},"keepVelocity"),": ",(0,o.yg)("inlineCode",{parentName:"p"},"boolean")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},(0,o.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,o.yg)("p",null,"Whether to retain the entities velocity after teleport."),(0,o.yg)("hr",null),(0,o.yg)("h3",{id:"rotation"},"rotation"),(0,o.yg)("p",null,"\u2022 ",(0,o.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.yg)("strong",{parentName:"p"},"rotation"),": ",(0,o.yg)("a",{parentName:"p",href:"/docs/sapi/stable/server/interfaces/Vector2"},(0,o.yg)("inlineCode",{parentName:"a"},"Vector2"))),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},(0,o.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,o.yg)("p",null,"Rotation of the entity after teleport."))}g.isMDXComponent=!0}}]);