"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[37621],{38008:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>o});var r=s(74848),l=s(28453);const i={},t="Class: FluidContainer",a={id:"sapi/stable/server/classes/FluidContainer",title:"Class: FluidContainer",description:"Represents constants related to fluid containers.",source:"@site/docs/sapi/stable/server/classes/FluidContainer.md",sourceDirName:"sapi/stable/server/classes",slug:"/sapi/stable/server/classes/FluidContainer",permalink:"/docs/sapi/stable/server/classes/FluidContainer",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/sapi/stable/server/classes/FluidContainer.md",tags:[],version:"current",frontMatter:{},sidebar:"sapiStableSidebar",previous:{title:"FilterGroup",permalink:"/docs/sapi/stable/server/classes/FilterGroup"},next:{title:"GameRuleChangeAfterEvent",permalink:"/docs/sapi/stable/server/classes/GameRuleChangeAfterEvent"}},c={},o=[{value:"Constructors",id:"constructors",level:2},{value:"new FluidContainer()",id:"new-fluidcontainer",level:3},{value:"Returns",id:"returns",level:4},{value:"Properties",id:"properties",level:2},{value:"maxFillLevel",id:"maxfilllevel",level:3},{value:"Remarks",id:"remarks",level:4},{value:"minFillLevel",id:"minfilllevel",level:3},{value:"Remarks",id:"remarks-1",level:4}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"class-fluidcontainer",children:"Class: FluidContainer"}),"\n",(0,r.jsx)(n.p,{children:"Represents constants related to fluid containers."}),"\n",(0,r.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,r.jsx)(n.h3,{id:"new-fluidcontainer",children:"new FluidContainer()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"private"})," ",(0,r.jsx)(n.strong,{children:"new FluidContainer"}),"(): ",(0,r.jsx)(n.a,{href:"/docs/sapi/stable/server/classes/FluidContainer",children:(0,r.jsx)(n.code,{children:"FluidContainer"})})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/sapi/stable/server/classes/FluidContainer",children:(0,r.jsx)(n.code,{children:"FluidContainer"})})}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.h3,{id:"maxfilllevel",children:"maxFillLevel"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.strong,{children:"maxFillLevel"}),": ",(0,r.jsx)(n.code,{children:"6"})," = ",(0,r.jsx)(n.code,{children:"6"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"remarks",children:"Remarks"}),"\n",(0,r.jsx)(n.p,{children:"Constant that represents the maximum fill level of a fluid\ncontainer."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"minfilllevel",children:"minFillLevel"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"static"})," ",(0,r.jsx)(n.code,{children:"readonly"})," ",(0,r.jsx)(n.strong,{children:"minFillLevel"}),": ",(0,r.jsx)(n.code,{children:"0"})," = ",(0,r.jsx)(n.code,{children:"0"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"remarks-1",children:"Remarks"}),"\n",(0,r.jsx)(n.p,{children:"Constant that represents the minimum fill level of a fluid\ncontainer."})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var r=s(96540);const l={},i=r.createContext(l);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);