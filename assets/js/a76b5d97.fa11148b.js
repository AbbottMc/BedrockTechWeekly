"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[56616],{60087:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>s,metadata:()=>d,toc:()=>o});var i=t(74848),r=t(28453);const s={},l=void 0,d={id:"changelog_source/preview/1.20/10/20/tech_sapi_exp",title:"tech_sapi_exp",description:"-   Dynamic properties can now optionally have default values",source:"@site/docs/changelog_source/preview/1.20/10/20/tech_sapi_exp.md",sourceDirName:"changelog_source/preview/1.20/10/20",slug:"/changelog_source/preview/1.20/10/20/tech_sapi_exp",permalink:"/docs/changelog_source/preview/1.20/10/20/tech_sapi_exp",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.20/10/20/tech_sapi_exp.md",tags:[],version:"current",frontMatter:{}},c={},o=[];function h(e){const n={em:"em",li:"li",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dynamic properties can now optionally have default values"}),"\n",(0,i.jsxs)(n.li,{children:["Increased Dynamic Property registration limits:\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Actors: ~1KB -> 128KB"}),"\n",(0,i.jsx)(n.li,{children:"World: ~10KB -> 1MB"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["ScreenDisplay\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Removed\xa0",(0,i.jsx)(n.em,{children:"clearTitle()"}),"- Use ",(0,i.jsx)(n.em,{children:"setTitle"})," with an empty string to clear the title"]}),"\n",(0,i.jsxs)(n.li,{children:["Updated\xa0_fadeInSeconds, staySeconds, fadeOutSeconds_to\xa0",(0,i.jsx)(n.em,{children:"fadeInDuration, stayDuration, fadeOutDuration"}),"\xa0on TitleDisplayOptions (seconds to ticks)"]}),"\n",(0,i.jsxs)(n.li,{children:["Updated ",(0,i.jsx)(n.em,{children:"setTitle"})," to reset the times per each new title"]}),"\n",(0,i.jsxs)(n.li,{children:["Added ",(0,i.jsx)(n.em,{children:"RawMessage"})," support for ",(0,i.jsx)(n.em,{children:"setTitle"}),", ",(0,i.jsx)(n.em,{children:"updateSubtitle"}),", and ",(0,i.jsx)(n.em,{children:"setActionBar"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Entity additions\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Added read-only property\xa0",(0,i.jsx)(n.em,{children:"isGliding"}),"- Returns whether the player is gliding with Elytra"]}),"\n",(0,i.jsxs)(n.li,{children:["Added read-only property\xa0",(0,i.jsx)(n.em,{children:"isJumping"}),"- Returns whether the player is using the jump action"]}),"\n",(0,i.jsxs)(n.li,{children:["Added read-only property\xa0",(0,i.jsx)(n.em,{children:"isFlying"}),"- Returns whether the player is flying (e.g. Creative or Spectator mode)"]}),"\n",(0,i.jsxs)(n.li,{children:["Added read-only property\xa0",(0,i.jsx)(n.em,{children:"isSprinting"}),"- Returns whether the entity is sprinting"]}),"\n",(0,i.jsxs)(n.li,{children:["Added read-only property\xa0",(0,i.jsx)(n.em,{children:"isSwimming"}),"- Returns whether the entity is swimming"]}),"\n",(0,i.jsxs)(n.li,{children:["Added read-only property\xa0",(0,i.jsx)(n.em,{children:"isClimbing"}),"- Returns whether the entity is climbing (e.g. Player on a ladder or Spider on a wall)"]}),"\n",(0,i.jsxs)(n.li,{children:["Added read-only property\xa0",(0,i.jsx)(n.em,{children:"isOnGround"}),"- Returns whether the entity is on the ground"]}),"\n",(0,i.jsxs)(n.li,{children:["Added read-only property\xa0",(0,i.jsx)(n.em,{children:"isInWater"}),"- Returns whether the entity is in water"]}),"\n",(0,i.jsxs)(n.li,{children:["Added read-only property\xa0",(0,i.jsx)(n.em,{children:"isFalling"}),"- Returns whether the entity is falling"]}),"\n",(0,i.jsxs)(n.li,{children:["Added read-only property\xa0",(0,i.jsx)(n.em,{children:"fallDistance"}),"- Returns the current fall distance (Used for calculating fall damage)"]}),"\n",(0,i.jsxs)(n.li,{children:["Added function\xa0",(0,i.jsx)(n.em,{children:"fly"}),"- Makes the player fly (e.g. Creative or Spectator mode)"]}),"\n",(0,i.jsxs)(n.li,{children:["Added function\xa0",(0,i.jsx)(n.em,{children:"stopFlying"}),"- Makes the player stop flying (e.g. Creative or Spectator mode)"]}),"\n",(0,i.jsxs)(n.li,{children:["Added function\xa0",(0,i.jsx)(n.em,{children:"glide"}),"- Makes the player glide with Elytra"]}),"\n",(0,i.jsxs)(n.li,{children:["Added function\xa0",(0,i.jsx)(n.em,{children:"stopGliding"}),"- Makes the player stop gliding with Elytra"]}),"\n",(0,i.jsxs)(n.li,{children:["Added function\xa0",(0,i.jsx)(n.em,{children:"swim"}),"- Makes the player swim"]}),"\n",(0,i.jsxs)(n.li,{children:["Added function\xa0",(0,i.jsx)(n.em,{children:"stopSwimming"}),"- Makes the player stop swimming"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Entity additions (effects)\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Updated function\xa0_addEffect(effectType: EffectType | string, duration: number, options?: EntityEffectOptions): void_to return void and to throw if the effect does not exist or the parameters are out of bounds"}),"\n",(0,i.jsx)(n.li,{children:"Updated function\xa0_getEffect(effectType: EffectType | string): Effect | undefined_to throw if the effect does not exist"}),"\n",(0,i.jsx)(n.li,{children:"Updated function\xa0_removeEffect(effectType: EffectType | string): boolean_to throw if the effect does not exist"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["BlockEvents\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Added events ",(0,i.jsx)(n.em,{children:"'PressurePlatePushEvent'"}),", ",(0,i.jsx)(n.em,{children:"'PressurePlatePopEvent'"}),", ",(0,i.jsx)(n.em,{children:"'TargetBlockHitEvent'"}),", and ",(0,i.jsx)(n.em,{children:"'TripWireTripEvent'"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["ContainerSlot\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Removed function\xa0",(0,i.jsx)(n.em,{children:"clone"}),"- Please use function\xa0",(0,i.jsx)(n.em,{children:"getItem"}),"\xa0instead"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["EntityHealableComponent\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Removed\xa0_filters: FilterGroup_property"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["EntityAttributeComponent\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Added\xa0",(0,i.jsx)(n.em,{children:"effectiveMin: number"})," Returns the minimum possible value for the component"]}),"\n",(0,i.jsxs)(n.li,{children:["Added\xa0",(0,i.jsx)(n.em,{children:"effectiveMax: number"})," Return the maximum possible value for the component"]}),"\n",(0,i.jsxs)(n.li,{children:["Renamed\xa0_value_property to\xa0",(0,i.jsx)(n.em,{children:"defaultValue"})]}),"\n",(0,i.jsxs)(n.li,{children:["Renamed\xa0_current_property to\xa0",(0,i.jsx)(n.em,{children:"currentValue"})]}),"\n",(0,i.jsxs)(n.li,{children:["Renamed\xa0_setCurrent_method to\xa0",(0,i.jsx)(n.em,{children:"setCurrentValue"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Added ",(0,i.jsx)(n.em,{children:"EntityHealthChangedAfterEvent"}),". It is triggered when any health change happens for an Entity"]}),"\n"]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>d});var i=t(96540);const r={},s=i.createContext(r);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);