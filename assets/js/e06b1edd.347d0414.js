"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[85033],{15680:(e,t,a)=>{a.d(t,{xA:()=>y,yg:()=>d});var n=a(96540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),o=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},y=function(e){var t=o(e.components);return n.createElement(p.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,y=m(e,["components","mdxType","originalType","parentName"]),g=o(a),s=i,d=g["".concat(p,".").concat(s)]||g[s]||u[s]||r;return a?n.createElement(d,l(l({ref:t},y),{},{components:a})):n.createElement(d,l({ref:t},y))}));function d(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=s;var m={};for(var p in t)hasOwnProperty.call(t,p)&&(m[p]=t[p]);m.originalType=e,m[g]="string"==typeof e?e:i,l[1]=m;for(var o=2;o<r;o++)l[o]=a[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},66235:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>m,toc:()=>o});var n=a(58168),i=(a(96540),a(15680));const r={},l=void 0,m={unversionedId:"changelog_source/stable/1.20/10/tech_sapi_exp",id:"changelog_source/stable/1.20/10/tech_sapi_exp",title:"tech_sapi_exp",description:"-   Dynamic properties can now optionally have default values",source:"@site/docs/changelog_source/stable/1.20/10/tech_sapi_exp.md",sourceDirName:"changelog_source/stable/1.20/10",slug:"/changelog_source/stable/1.20/10/tech_sapi_exp",permalink:"/docs/changelog_source/stable/1.20/10/tech_sapi_exp",draft:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/stable/1.20/10/tech_sapi_exp.md",tags:[],version:"current",frontMatter:{}},p={},o=[],y={toc:o},g="wrapper";function u(e){let{components:t,...a}=e;return(0,i.yg)(g,(0,n.A)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Dynamic properties can now optionally have default values"),(0,i.yg)("li",{parentName:"ul"},"Increased Dynamic Property registration limits:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Actors: ~1KB -",">"," 128KB"),(0,i.yg)("li",{parentName:"ul"},"World: ~10KB -",">"," 1MB"))),(0,i.yg)("li",{parentName:"ul"},"ScreenDisplay",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Removed\xa0",(0,i.yg)("em",{parentName:"li"},"clearTitle()"),"-"," Use ",(0,i.yg)("em",{parentName:"li"},"setTitle")," with an empty string to clear the title"),(0,i.yg)("li",{parentName:"ul"},"Updated\xa0",(0,i.yg)("em",{parentName:"li"},"fadeInSeconds, staySeconds, fadeOutSeconds"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"fadeInDuration, stayDuration, fadeOutDuration"),"\xa0on TitleDisplayOptions (seconds to ticks)"),(0,i.yg)("li",{parentName:"ul"},"Updated ",(0,i.yg)("em",{parentName:"li"},"setTitle")," to reset the times per each new title"),(0,i.yg)("li",{parentName:"ul"},"Added ",(0,i.yg)("em",{parentName:"li"},"RawMessage")," support for ",(0,i.yg)("em",{parentName:"li"},"setTitle"),", ",(0,i.yg)("em",{parentName:"li"},"updateSubtitle"),", and ",(0,i.yg)("em",{parentName:"li"},"setActionBar")))),(0,i.yg)("li",{parentName:"ul"},"Entity additions",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,i.yg)("em",{parentName:"li"},"isGliding"),"\xa0- Returns whether the player is gliding with Elytra"),(0,i.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,i.yg)("em",{parentName:"li"},"isJumping"),"\xa0- Returns whether the player is using the jump action"),(0,i.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,i.yg)("em",{parentName:"li"},"isFlying"),"\xa0- Returns whether the player is flying (e.g. Creative or Spectator mode)"),(0,i.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,i.yg)("em",{parentName:"li"},"isSprinting"),"\xa0- Returns whether the entity is sprinting"),(0,i.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,i.yg)("em",{parentName:"li"},"isSwimming"),"\xa0- Returns whether the entity is swimming"),(0,i.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,i.yg)("em",{parentName:"li"},"isClimbing"),"\xa0- Returns whether the entity is climbing (e.g. Player on a ladder or Spider on a wall)"),(0,i.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,i.yg)("em",{parentName:"li"},"isOnGround"),"\xa0- Returns whether the entity is on the ground"),(0,i.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,i.yg)("em",{parentName:"li"},"isInWater"),"\xa0- Returns whether the entity is in water"),(0,i.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,i.yg)("em",{parentName:"li"},"isFalling"),"\xa0- Returns whether the entity is falling"),(0,i.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,i.yg)("em",{parentName:"li"},"fallDistance"),"\xa0- Returns the current fall distance (Used for calculating fall damage)"),(0,i.yg)("li",{parentName:"ul"},"Added function\xa0",(0,i.yg)("em",{parentName:"li"},"fly"),"\xa0- Makes the player fly (e.g. Creative or Spectator mode)"),(0,i.yg)("li",{parentName:"ul"},"Added function\xa0",(0,i.yg)("em",{parentName:"li"},"stopFlying"),"\xa0- Makes the player stop flying (e.g. Creative or Spectator mode)"),(0,i.yg)("li",{parentName:"ul"},"Added function\xa0",(0,i.yg)("em",{parentName:"li"},"glide"),"\xa0- Makes the player glide with Elytra"),(0,i.yg)("li",{parentName:"ul"},"Added function\xa0",(0,i.yg)("em",{parentName:"li"},"stopGliding"),"\xa0- Makes the player stop gliding with Elytra"),(0,i.yg)("li",{parentName:"ul"},"Added function\xa0",(0,i.yg)("em",{parentName:"li"},"swim"),"\xa0- Makes the player swim"),(0,i.yg)("li",{parentName:"ul"},"Added function\xa0",(0,i.yg)("em",{parentName:"li"},"stopSwimming"),"\xa0- Makes the player stop swimming"))),(0,i.yg)("li",{parentName:"ul"},"Entity additions (effects)",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Updated function\xa0",(0,i.yg)("em",{parentName:"li"},"addEffect(effectType: EffectType | string, duration: number, options?: EntityEffectOptions): void"),"\xa0to return void and to throw if the effect does not exist or the parameters are out of bounds"),(0,i.yg)("li",{parentName:"ul"},"Updated function\xa0",(0,i.yg)("em",{parentName:"li"},"getEffect(effectType: EffectType | string): Effect | undefined"),"\xa0to throw if the effect does not exist"),(0,i.yg)("li",{parentName:"ul"},"Updated function\xa0",(0,i.yg)("em",{parentName:"li"},"removeEffect(effectType: EffectType | string): boolean"),"\xa0to throw if the effect does not exist"))),(0,i.yg)("li",{parentName:"ul"},"BlockEvents",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Added events ",(0,i.yg)("em",{parentName:"li"},"'PressurePlatePushEvent'"),", ",(0,i.yg)("em",{parentName:"li"},"'PressurePlatePopEvent'"),", ",(0,i.yg)("em",{parentName:"li"},"'TargetBlockHitEvent'"),", and ",(0,i.yg)("em",{parentName:"li"},"'TripWireTripEvent'")))),(0,i.yg)("li",{parentName:"ul"},"ContainerSlot",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Removed function\xa0",(0,i.yg)("em",{parentName:"li"},"clone"),"\xa0- Please use function\xa0",(0,i.yg)("em",{parentName:"li"},"getItem"),"\xa0instead"))),(0,i.yg)("li",{parentName:"ul"},"EntityHealableComponent",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Removed\xa0",(0,i.yg)("em",{parentName:"li"},"filters: FilterGroup"),"\xa0property"))),(0,i.yg)("li",{parentName:"ul"},"EntityAttributeComponent",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Added\xa0",(0,i.yg)("em",{parentName:"li"},"effectiveMin: number"),"\xa0property. Returns the minimum possible value for the component"),(0,i.yg)("li",{parentName:"ul"},"Added\xa0",(0,i.yg)("em",{parentName:"li"},"effectiveMax: number"),"\xa0property. Return the maximum possible value for the component"),(0,i.yg)("li",{parentName:"ul"},"Renamed\xa0",(0,i.yg)("em",{parentName:"li"},"value"),"\xa0property to\xa0",(0,i.yg)("em",{parentName:"li"},"defaultValue")),(0,i.yg)("li",{parentName:"ul"},"Renamed\xa0",(0,i.yg)("em",{parentName:"li"},"current"),"\xa0property to\xa0",(0,i.yg)("em",{parentName:"li"},"currentValue")),(0,i.yg)("li",{parentName:"ul"},"Renamed\xa0",(0,i.yg)("em",{parentName:"li"},"setCurrent"),"\xa0method to\xa0",(0,i.yg)("em",{parentName:"li"},"setCurrentValue")))),(0,i.yg)("li",{parentName:"ul"},"Added ",(0,i.yg)("em",{parentName:"li"},"EntityHealthChangedAfterEvent"),". It is triggered when any health change happens for an Entity"),(0,i.yg)("li",{parentName:"ul"},"System",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Replaced\xa0",(0,i.yg)("em",{parentName:"li"},"system.events"),"\xa0with\xa0",(0,i.yg)("em",{parentName:"li"},"system.beforeEvents"),"\xa0and\xa0",(0,i.yg)("em",{parentName:"li"},"system.afterEvents")),(0,i.yg)("li",{parentName:"ul"},"Renamed event\xa0",(0,i.yg)("em",{parentName:"li"},"beforeWatchdogTerminate"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"watchdogTerminate"),"\xa0and moved it to\xa0",(0,i.yg)("em",{parentName:"li"},"system.beforeEvents")),(0,i.yg)("li",{parentName:"ul"},"Moved\xa0",(0,i.yg)("em",{parentName:"li"},"scriptEventReceive"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"system.afterEvents")))),(0,i.yg)("li",{parentName:"ul"},"MessageReceiveAfterEvent",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Removed property\xa0",(0,i.yg)("em",{parentName:"li"},"sourceType")))),(0,i.yg)("li",{parentName:"ul"},"ScriptEventSource",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Replaced enum\xa0",(0,i.yg)("em",{parentName:"li"},"MessageSourceType"),"\xa0with a new enum\xa0",(0,i.yg)("em",{parentName:"li"},"ScriptEventSource")))),(0,i.yg)("li",{parentName:"ul"},"ScriptEventCommandMessageAfterEvent",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Changed property\xa0",(0,i.yg)("em",{parentName:"li"},"sourceType"),"\xa0from\xa0",(0,i.yg)("em",{parentName:"li"},"MessageSourceType"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"ScriptEventSource")),(0,i.yg)("li",{parentName:"ul"},"Increased maximum message length from 256 to 2048 characters"))),(0,i.yg)("li",{parentName:"ul"},"Dynamic Property identifiers are now limited to 1024 characters"),(0,i.yg)("li",{parentName:"ul"},"Removed ",(0,i.yg)("em",{parentName:"li"},"MinecraftEffectTypes")," defined in\xa0",(0,i.yg)("em",{parentName:"li"},"@minecraft/server. See @minecraft/vanilla-data NPM package for an equivalent")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"Moved several APIs to stable 1.30:"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Moving\xa0",(0,i.yg)("em",{parentName:"li"},"tryTeleport(location: Vector3, duration: number, options: ScriptTeleportOptions)"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moving\xa0",(0,i.yg)("em",{parentName:"li"},"teleport(location: Vector3, options: ScriptTeleportOptions)"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moved function\xa0",(0,i.yg)("em",{parentName:"li"},"getComponent"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moved world event\xa0",(0,i.yg)("em",{parentName:"li"},"PlayerJoinAfterEvent"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moved world event\xa0",(0,i.yg)("em",{parentName:"li"},"PlayerLeaveAfterEvent"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moved world event\xa0",(0,i.yg)("em",{parentName:"li"},"PlayerSpawnAfterEvent"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moved EntityComponent\xa0",(0,i.yg)("em",{parentName:"li"},"EntityHealableComponent"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moved EntityComponent\xa0",(0,i.yg)("em",{parentName:"li"},"EntityHealthComponent"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moved class\xa0",(0,i.yg)("em",{parentName:"li"},"FeedItem"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moved class\xa0",(0,i.yg)("em",{parentName:"li"},"FeedItemEffect"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moving\xa0",(0,i.yg)("em",{parentName:"li"},"addEffect(effectType: string | EffectType, duration: number, options: EntityEffectOptions)"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moved\xa0",(0,i.yg)("em",{parentName:"li"},"getEffect(effectType: string | EffectType)"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moved\xa0",(0,i.yg)("em",{parentName:"li"},"getEffects()"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moved\xa0",(0,i.yg)("em",{parentName:"li"},"removeEffect(effectType: string | EffectType)"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"AfterEvents",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Moving\xa0",(0,i.yg)("em",{parentName:"li"},"ButtonPushEvent"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moving\xa0",(0,i.yg)("em",{parentName:"li"},"LeverActivateEvent"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")))),(0,i.yg)("li",{parentName:"ul"},"Moved function\xa0",(0,i.yg)("em",{parentName:"li"},"spawnEntity"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")),(0,i.yg)("li",{parentName:"ul"},"Moved function\xa0",(0,i.yg)("em",{parentName:"li"},"spawnItem"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"1.3.0")))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"Spawn Point Updates:"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Removed function\xa0",(0,i.yg)("em",{parentName:"li"},"clearSpawn")),(0,i.yg)("li",{parentName:"ul"},"Removed property\xa0",(0,i.yg)("em",{parentName:"li"},"spawnDimension")),(0,i.yg)("li",{parentName:"ul"},"Added function\xa0",(0,i.yg)("em",{parentName:"li"},"getSpawnPoint(): DimensionLocation | undefined"),"\xa0- Returns the player's spawn point"),(0,i.yg)("li",{parentName:"ul"},"Added function\xa0",(0,i.yg)("em",{parentName:"li"},"setSpawnPoint(spawnPoint?: DimensionLocation): void"),"\xa0- Sets the player's spawn point, or clears it if\xa0",(0,i.yg)("em",{parentName:"li"},"spawnPoint"),"\xa0is\xa0",(0,i.yg)("em",{parentName:"li"},"undefined")),(0,i.yg)("li",{parentName:"ul"},"Renamed function\xa0",(0,i.yg)("em",{parentName:"li"},"getDefaultSpawnPosition"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"getDefaultSpawnLocation")),(0,i.yg)("li",{parentName:"ul"},"Renamed function\xa0",(0,i.yg)("em",{parentName:"li"},"setDefaultSpawn"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"setDefaultSpawnLocation")))),(0,i.yg)("li",{parentName:"ul"},"DimensionLocation",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Added new interface\xa0",(0,i.yg)("em",{parentName:"li"},"DimensionLocation"),"\xa0- Represents a location in a dimension"))),(0,i.yg)("li",{parentName:"ul"},"Added\xa0",(0,i.yg)("em",{parentName:"li"},"hasParticipant"),"\xa0function to\xa0",(0,i.yg)("em",{parentName:"li"},"ScoreboardObjective"),"."),(0,i.yg)("li",{parentName:"ul"},"The following functions in\xa0",(0,i.yg)("em",{parentName:"li"},"ScoreboardObjective"),"\xa0can now accept\xa0",(0,i.yg)("em",{parentName:"li"},"Entity"),"\xa0or\xa0",(0,i.yg)("em",{parentName:"li"},"string"),"\xa0types as\xa0",(0,i.yg)("em",{parentName:"li"},"participants"),":",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"getScore")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"setScore")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"removeParticipant")))),(0,i.yg)("li",{parentName:"ul"},"Removed\xa0",(0,i.yg)("em",{parentName:"li"},"getScore"),",\xa0",(0,i.yg)("em",{parentName:"li"},"setScore"),"\xa0from\xa0",(0,i.yg)("em",{parentName:"li"},"ScoreboardIdentity"),"\xa0and\xa0",(0,i.yg)("em",{parentName:"li"},"Scoreboard")),(0,i.yg)("li",{parentName:"ul"},"Removed the\xa0",(0,i.yg)("em",{parentName:"li"},"removeFromObjective"),"\xa0function from\xa0",(0,i.yg)("em",{parentName:"li"},"ScoreboardIdentity")),(0,i.yg)("li",{parentName:"ul"},"Fixed bug where scoreboard values would not be updated on the client when updated from script"),(0,i.yg)("li",{parentName:"ul"},"Raycasting",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Changed function\xa0",(0,i.yg)("em",{parentName:"li"},"Dimension.getBlockFromRay"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Changed return type from\xa0",(0,i.yg)("em",{parentName:"li"},"Block"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"BlockRaycastHit | undefined")))),(0,i.yg)("li",{parentName:"ul"},"Changed function\xa0",(0,i.yg)("em",{parentName:"li"},"Dimension.getEntitiesFromRay"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Changed return type from\xa0",(0,i.yg)("em",{parentName:"li"},"Entity","[","]"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"EntityRaycastHit","[","]")))),(0,i.yg)("li",{parentName:"ul"},"Changed function\xa0",(0,i.yg)("em",{parentName:"li"},"Entity.getBlockFromViewDirection"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Changed return type from\xa0",(0,i.yg)("em",{parentName:"li"},"Block"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"BlockRaycastHit | undefined")))),(0,i.yg)("li",{parentName:"ul"},"Changed function\xa0",(0,i.yg)("em",{parentName:"li"},"Entity.getEntitiesFromViewDirection"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Changed return type from\xa0",(0,i.yg)("em",{parentName:"li"},"Entity","[","]"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"EntityRaycastHit","[","]")))),(0,i.yg)("li",{parentName:"ul"},"Added interface\xa0",(0,i.yg)("em",{parentName:"li"},"BlockRaycastHit")),(0,i.yg)("li",{parentName:"ul"},"Added interface\xa0",(0,i.yg)("em",{parentName:"li"},"EntityRaycastHit")))),(0,i.yg)("li",{parentName:"ul"},"Renamed leverActivate after event to leverAction",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Removed class\xa0",(0,i.yg)("em",{parentName:"li"},"EntityHitAfterEvent"),"."),(0,i.yg)("li",{parentName:"ul"},"Added class\xa0",(0,i.yg)("em",{parentName:"li"},"EntityHitBlockAfterEvent")),(0,i.yg)("li",{parentName:"ul"},"Added class\xa0",(0,i.yg)("em",{parentName:"li"},"EntityHitEntityAfterEvent")),(0,i.yg)("li",{parentName:"ul"},"Class\xa0",(0,i.yg)("em",{parentName:"li"},"WorldAfterEvents"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Removed property\xa0",(0,i.yg)("em",{parentName:"li"},"entityHit")),(0,i.yg)("li",{parentName:"ul"},"Added property\xa0",(0,i.yg)("em",{parentName:"li"},"entityHitBlock")),(0,i.yg)("li",{parentName:"ul"},"Added property\xa0",(0,i.yg)("em",{parentName:"li"},"entityHitEntity")))))),(0,i.yg)("li",{parentName:"ul"},"Added helper function\xa0",(0,i.yg)("em",{parentName:"li"},"isValid()"),"\xa0to several classes in order to check if the object is valid. This can safely be used on any handle to a native object before accessing or using the object, to ensure the underlying object still exists and is valid to use",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Block (checks the block is a valid position in bounds and the containing chunk is loaded & ticking)"),(0,i.yg)("li",{parentName:"ul"},"Container (checks the relevent container inventory exists and is valid)"),(0,i.yg)("li",{parentName:"ul"},"Effect (checks the owning entity is valid and the effect exists on that entity)"),(0,i.yg)("li",{parentName:"ul"},"ScreenDisplay (checks the owning player is valid)"),(0,i.yg)("li",{parentName:"ul"},"ScoreboardObjective (checks the objective entry exists and is attached to a valid scoreboard)"),(0,i.yg)("li",{parentName:"ul"},"Entity (checks that the entity exists in the world. Will return true if the entity is dead)",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Player"),(0,i.yg)("li",{parentName:"ul"},"SimulatedPlayer (Note simulated players do not automatically get removed from the world, so\xa0",(0,i.yg)("em",{parentName:"li"},"isValid"),"\xa0will return true long after they are dead)"))),(0,i.yg)("li",{parentName:"ul"},"ContainerSlot (checks the item context is valid: Container exists in the world, such as the owning entity, and the slot is within the container bounds)",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Already existed as a read-only property, changed to a method for consistency"))))),(0,i.yg)("li",{parentName:"ul"},"Component",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"EntityAttributeComponent (checks the owning entity is valid and the attribute exists on the entity)"),(0,i.yg)("li",{parentName:"ul"},"BlockLiquidContainerComponent (checks block exists and is a valid cauldron type)",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Added read only method\xa0",(0,i.yg)("em",{parentName:"li"},"isValidLiquid"),"\xa0which checks if the liquid in the cauldron matches the component in question (EG. BlockLavaContainerComponent checks for lava liquid)"))),(0,i.yg)("li",{parentName:"ul"},"EntityComponent (checks the owning entity exists)"),(0,i.yg)("li",{parentName:"ul"},"ItemComponent (checks the owning item exists)"))),(0,i.yg)("li",{parentName:"ul"},"World",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Renamed\xa0",(0,i.yg)("em",{parentName:"li"},"getTime"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"getTimeOfDay")),(0,i.yg)("li",{parentName:"ul"},"Renamed\xa0",(0,i.yg)("em",{parentName:"li"},"setTime"),"\xa0to\xa0",(0,i.yg)("em",{parentName:"li"},"setTimeOfDay")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"setTimeOfDay"),"\xa0now accepts a\xa0",(0,i.yg)("em",{parentName:"li"},"TimeOfDay"),"\xa0enum as an argument"),(0,i.yg)("li",{parentName:"ul"},"The\xa0",(0,i.yg)("em",{parentName:"li"},"timeOfDay"),"\xa0argument for\xa0",(0,i.yg)("em",{parentName:"li"},"setTime"),"\xa0must now be within 0-23999 (inclusive)"),(0,i.yg)("li",{parentName:"ul"},"Added\xa0",(0,i.yg)("em",{parentName:"li"},"getDay"),"\xa0function"))),(0,i.yg)("li",{parentName:"ul"},"Updated the following enums' values to be PascalCase instead of camelCase:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"ClipboardMirrorAxis")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"ClipboardRotation")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"HttpRequestMethod")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"FormCancelationReason")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"Direction")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"DisplaySlotId")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"EntityLifetimeState")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"FluidType")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"ObjectiveSortOrder")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"ScoreboardIdentityType")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"ScriptEventSource")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"SignSide")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"WatchdogTerminateReason")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"WeatherType"))))))}u.isMDXComponent=!0}}]);