"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[43149],{15680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>g});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return r?n.createElement(g,l(l({ref:t},c),{},{components:r})):n.createElement(g,l({ref:t},c))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},96968:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=r(58168),a=(r(96540),r(15680));const i={},l=void 0,o={unversionedId:"changelog_source/preview/1.19/60/22/tech_sapi_stable",id:"changelog_source/preview/1.19/60/22/tech_sapi_stable",title:"tech_sapi_stable",description:"-   Block",source:"@site/docs/changelog_source/preview/1.19/60/22/tech_sapi_stable.md",sourceDirName:"changelog_source/preview/1.19/60/22",slug:"/changelog_source/preview/1.19/60/22/tech_sapi_stable",permalink:"/docs/changelog_source/preview/1.19/60/22/tech_sapi_stable",draft:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.19/60/22/tech_sapi_stable.md",tags:[],version:"current",frontMatter:{}},s={},p=[],c={toc:p},m="wrapper";function u(e){let{components:t,...r}=e;return(0,a.yg)(m,(0,n.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Block",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Added function\xa0",(0,a.yg)("em",{parentName:"li"},"getRedstonePower(): number"),"-"," Gets the Redstone signal strength of the Block if it is part of a circuit, otherwise returns undefined"))),(0,a.yg)("li",{parentName:"ul"},"Added /scriptevent command as part of the Beta APIs experiment. This is what will trigger system.events.scriptEventReceive events (see below)  ",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Usage: /scriptevent \\<messsageId: string",">"," ","[","message: ???","]"),(0,a.yg)("li",{parentName:"ul"},'messageId must be namespaced, use of the minecraft namespace is invalid (e.g. "/scriptevent give:coal", "/scriptevent my',"_","scripts:spawn","_",'sheep")'),(0,a.yg)("li",{parentName:"ul"},"message is optional, with a max length of 256 characters  "))),(0,a.yg)("li",{parentName:"ul"},"events.scriptEventReceive",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Added system event\xa0",(0,a.yg)("em",{parentName:"li"},"events.scriptEventReceive")),(0,a.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,a.yg)("em",{parentName:"li"},"id: String__","-")," The namespaced ID of the event"),(0,a.yg)("li",{parentName:"ul"},"Added read-only property\xa0message: String- The content of the message the event was sent with"),(0,a.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,a.yg)("em",{parentName:"li"},"sourceBlock: Block"),"-"," The command block that triggered/executed the command call if applicable, otherwise undefined"),(0,a.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,a.yg)("em",{parentName:"li"},"sourceEntity: Entity"),"-"," The player/entity that executed the command call if applicable, otherwise undefined"),(0,a.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,a.yg)("em",{parentName:"li"},"initiator: Entity"),"-"," The player that caused an NPC to execute the command call if applicable, otherwise undefined"),(0,a.yg)("li",{parentName:"ul"},"Added read-only property\xa0",(0,a.yg)("em",{parentName:"li"},"sourceType: MessageSourceType"),"-"," The type of source the event was triggered by"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"subscribe()_can filter by valid namespace string using the\xa0_ScriptEventMessageFilterOptions"),"\xa0class  "))),(0,a.yg)("li",{parentName:"ul"},"ScriptEventMessageFilterOptions",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Added ",(0,a.yg)("em",{parentName:"li"},"ScriptEventMessageFilterOptions")," class"),(0,a.yg)("li",{parentName:"ul"},"Added property\xa0",(0,a.yg)("em",{parentName:"li"},"namespaces: string","[","]"),"-"," An array of namespaces to filter on"))),(0,a.yg)("li",{parentName:"ul"},"Simulated Player",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Added property\xa0",(0,a.yg)("em",{parentName:"li"},"isSprinting"),"-"," Used to get or set if the sprinting state of the simulated player is set to true")))))}u.isMDXComponent=!0}}]);