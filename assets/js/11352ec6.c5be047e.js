"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[65877],{33212:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var s=i(74848),r=i(28453);const t={},o="Interface: EntityQueryOptions",l={id:"sapi/stable/server/interfaces/EntityQueryOptions",title:"Interface: EntityQueryOptions",description:"Contains options for selecting entities within an area.",source:"@site/docs/sapi/stable/server/interfaces/EntityQueryOptions.md",sourceDirName:"sapi/stable/server/interfaces",slug:"/sapi/stable/server/interfaces/EntityQueryOptions",permalink:"/docs/sapi/stable/server/interfaces/EntityQueryOptions",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/sapi/stable/server/interfaces/EntityQueryOptions.md",tags:[],version:"current",frontMatter:{},sidebar:"sapiStableSidebar",previous:{title:"EntityHitInformation",permalink:"/docs/sapi/stable/server/interfaces/EntityHitInformation"},next:{title:"EntityQueryPropertyOptions",permalink:"/docs/sapi/stable/server/interfaces/EntityQueryPropertyOptions"}},a={},c=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2},{value:"closest?",id:"closest",level:3},{value:"Remarks",id:"remarks",level:4},{value:"excludeFamilies?",id:"excludefamilies",level:3},{value:"Remarks",id:"remarks-1",level:4},{value:"excludeGameModes?",id:"excludegamemodes",level:3},{value:"Remarks",id:"remarks-2",level:4},{value:"excludeNames?",id:"excludenames",level:3},{value:"Remarks",id:"remarks-3",level:4},{value:"excludeTags?",id:"excludetags",level:3},{value:"Remarks",id:"remarks-4",level:4},{value:"excludeTypes?",id:"excludetypes",level:3},{value:"Remarks",id:"remarks-5",level:4},{value:"families?",id:"families",level:3},{value:"Remarks",id:"remarks-6",level:4},{value:"farthest?",id:"farthest",level:3},{value:"Remarks",id:"remarks-7",level:4},{value:"gameMode?",id:"gamemode",level:3},{value:"Remarks",id:"remarks-8",level:4},{value:"location?",id:"location",level:3},{value:"Remarks",id:"remarks-9",level:4},{value:"maxDistance?",id:"maxdistance",level:3},{value:"Remarks",id:"remarks-10",level:4},{value:"maxHorizontalRotation?",id:"maxhorizontalrotation",level:3},{value:"Remarks",id:"remarks-11",level:4},{value:"maxLevel?",id:"maxlevel",level:3},{value:"Remarks",id:"remarks-12",level:4},{value:"maxVerticalRotation?",id:"maxverticalrotation",level:3},{value:"Remarks",id:"remarks-13",level:4},{value:"minDistance?",id:"mindistance",level:3},{value:"Remarks",id:"remarks-14",level:4},{value:"minHorizontalRotation?",id:"minhorizontalrotation",level:3},{value:"Remarks",id:"remarks-15",level:4},{value:"minLevel?",id:"minlevel",level:3},{value:"Remarks",id:"remarks-16",level:4},{value:"minVerticalRotation?",id:"minverticalrotation",level:3},{value:"Remarks",id:"remarks-17",level:4},{value:"name?",id:"name",level:3},{value:"Remarks",id:"remarks-18",level:4},{value:"propertyOptions?",id:"propertyoptions",level:3},{value:"Remarks",id:"remarks-19",level:4},{value:"scoreOptions?",id:"scoreoptions",level:3},{value:"Remarks",id:"remarks-20",level:4},{value:"tags?",id:"tags",level:3},{value:"Remarks",id:"remarks-21",level:4},{value:"type?",id:"type",level:3},{value:"Remarks",id:"remarks-22",level:4},{value:"volume?",id:"volume",level:3},{value:"Remarks",id:"remarks-23",level:4}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"interface-entityqueryoptions",children:"Interface: EntityQueryOptions"}),"\n",(0,s.jsx)(n.p,{children:"Contains options for selecting entities within an area."}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { Dimension } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[type=fox] positioned as @s if block ^ ^-1 ^ stone run summon salmon\n\n// Equivalent scripting code would be:\nfunction spawnFish(dimension: Dimension) {\n    dimension\n        .getEntities({\n            type: 'fox',\n        })\n        .filter(entity => {\n            const block = dimension.getBlock({\n                x: entity.location.x,\n                y: entity.location.y - 1,\n                z: entity.location.z,\n            });\n\n            return block !== undefined && block.matches('minecraft:stone');\n        })\n        .forEach(entity => {\n            dimension.spawnEntity('salmon', entity.location);\n        });\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { Dimension } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[type=armor_stand,name=myArmorStand,tag=dummyTag1,tag=!dummyTag2] run playsound raid.horn @a\n\n// Equivalent scripting code would be:\nfunction playSounds(dimension: Dimension) {\n    const targetPlayers = dimension.getPlayers();\n    const originEntities = dimension.getEntities({\n        type: 'armor_stand',\n        name: 'myArmorStand',\n        tags: ['dummyTag1'],\n        excludeTags: ['dummyTag2'],\n    });\n\n    originEntities.forEach(entity => {\n        targetPlayers.forEach(player => {\n            player.playSound('raid.horn');\n        });\n    });\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { Dimension } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[type=armor_stand,name=myArmorStand,tag=dummyTag1,tag=!dummyTag2] run tellraw @a { \"rawtext\": [{\"translate\": \"hello.world\" }] }\n\n// Equivalent scripting code would be:\nfunction sendMessagesToPlayers(dimension: Dimension) {\n    const targetPlayers = dimension.getPlayers();\n    const originEntities = dimension.getEntities({\n        type: 'armor_stand',\n        name: 'myArmorStand',\n        tags: ['dummyTag1'],\n        excludeTags: ['dummyTag2'],\n    });\n\n    originEntities.forEach(entity => {\n        targetPlayers.forEach(player => {\n            player.sendMessage({ rawtext: [{ translate: 'hello.world' }] });\n        });\n    });\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { Dimension, world } from '@minecraft/server';\n\n// Having these commands:\n\n// scoreboard objectives add scoreObjective1 dummy\n// scoreboard players set @e[type=armor_stand,name=myArmorStand] scoreObjective1 -1\n\n// Equivalent scripting code would be:\nfunction setScores(dimension: Dimension) {\n    const objective = world.scoreboard.addObjective('scoreObjective1', 'dummy');\n    dimension\n        .getEntities({\n            type: 'armor_stand',\n            name: 'myArmorStand',\n        })\n        .forEach(entity => {\n            if (entity.scoreboardIdentity !== undefined) {\n                objective.setScore(entity.scoreboardIdentity, -1);\n            }\n        });\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { Dimension } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[type=armor_stand] run execute as @a[x=0,y=-60,z=0,c=4,r=15] run summon pig ~1 ~ ~\n\n// Equivalent scripting code would be:\nfunction spawnPigs(dimension: Dimension) {\n    const armorStandArray = dimension.getEntities({\n        type: 'armor_stand',\n    });\n    const playerArray = dimension.getPlayers({\n        location: { x: 0, y: -60, z: 0 },\n        closest: 4,\n        maxDistance: 15,\n    });\n    armorStandArray.forEach(entity => {\n        playerArray.forEach(player => {\n            dimension.spawnEntity('pig', {\n                x: player.location.x + 1,\n                y: player.location.y,\n                z: player.location.z,\n            });\n        });\n    });\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { DimensionLocation, EntityComponentTypes } from \"@minecraft/server\";\n\n// Returns true if a feather item entity is within 'distance' blocks of 'location'.\nfunction isFeatherNear(location: DimensionLocation, distance: number): boolean {\n    const items = location.dimension.getEntities({\n        location: location,\n        maxDistance: 20,\n    });\n\n    for (const item of items) {\n        const itemComp = item.getComponent(EntityComponentTypes.Item);\n\n        if (itemComp) {\n            if (itemComp.itemStack.typeId.endsWith('feather')) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"closest",children:"closest?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"closest"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"Limits the number of entities to return, opting for the\nclosest N entities as specified by this property. The\nlocation value must also be specified on the query options\nobject."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"excludefamilies",children:"excludeFamilies?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"excludeFamilies"}),": ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-1",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"Excludes entities that match one or more of the specified\nfamilies."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"excludegamemodes",children:"excludeGameModes?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"excludeGameModes"}),": ",(0,s.jsx)(n.a,{href:"/docs/sapi/stable/server/enumerations/GameMode",children:(0,s.jsx)(n.code,{children:"GameMode"})}),"[]"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-2",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"Excludes entities if have a specific gamemode that matches\nthe specified gamemode."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"excludenames",children:"excludeNames?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"excludeNames"}),": ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-3",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"Excludes entities that have a name that match one of the\nspecified values."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"excludetags",children:"excludeTags?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"excludeTags"}),": ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-4",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"Excludes entities with a tag that matches one of the\nspecified values."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"excludetypes",children:"excludeTypes?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"excludeTypes"}),": ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-5",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"Excludes entities if they are one of the specified types."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"families",children:"families?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"families"}),": ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-6",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"If specified, includes entities that match all of the\nspecified families."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"farthest",children:"farthest?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"farthest"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-7",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"Limits the number of entities to return, opting for the\nfarthest N entities as specified by this property. The\nlocation value must also be specified on the query options\nobject."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"gamemode",children:"gameMode?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"gameMode"}),": ",(0,s.jsx)(n.a,{href:"/docs/sapi/stable/server/enumerations/GameMode",children:(0,s.jsx)(n.code,{children:"GameMode"})})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-8",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"If specified, includes entities with a gamemode that matches\nthe specified gamemode."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"location",children:"location?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"location"}),": ",(0,s.jsx)(n.a,{href:"/docs/sapi/stable/server/interfaces/Vector3",children:(0,s.jsx)(n.code,{children:"Vector3"})})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-9",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"Adds a seed location to the query that is used in\nconjunction with closest, farthest, limit, volume, and\ndistance properties."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"maxdistance",children:"maxDistance?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"maxDistance"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-10",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"If specified, includes entities that are less than this\ndistance away from the location specified in the location\nproperty."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"maxhorizontalrotation",children:"maxHorizontalRotation?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"maxHorizontalRotation"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-11",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"If specified, will only include entities that have at most\nthis horizontal rotation."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"maxlevel",children:"maxLevel?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"maxLevel"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-12",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"If defined, only players that have at most this level are\nreturned."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"maxverticalrotation",children:"maxVerticalRotation?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"maxVerticalRotation"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-13",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"If specified, only entities that have at most this vertical\nrotation are returned."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"mindistance",children:"minDistance?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"minDistance"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-14",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"If specified, includes entities that are least this distance\naway from the location specified in the location property."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"minhorizontalrotation",children:"minHorizontalRotation?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"minHorizontalRotation"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-15",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"If specified, will only include entities that have at a\nminimum this horizontal rotation."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"minlevel",children:"minLevel?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"minLevel"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-16",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"If defined, only players that have at least this level are\nreturned."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"minverticalrotation",children:"minVerticalRotation?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"minVerticalRotation"}),": ",(0,s.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-17",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"If specified, will only include entities that have at least\nthis vertical rotation."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"name",children:"name?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"name"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-18",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"Includes entities with the specified name."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"propertyoptions",children:"propertyOptions?"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Beta"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"propertyOptions"}),": ",(0,s.jsx)(n.a,{href:"/docs/sapi/stable/server/interfaces/EntityQueryPropertyOptions",children:(0,s.jsx)(n.code,{children:"EntityQueryPropertyOptions"})}),"[]"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-19",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"Gets/sets a collection of EntityQueryPropertyOptions objects\nwith filters for specific properties."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"scoreoptions",children:"scoreOptions?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"scoreOptions"}),": ",(0,s.jsx)(n.a,{href:"/docs/sapi/stable/server/interfaces/EntityQueryScoreOptions",children:(0,s.jsx)(n.code,{children:"EntityQueryScoreOptions"})}),"[]"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-20",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"Gets/sets a collection of EntityQueryScoreOptions objects\nwith filters for specific scoreboard objectives."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"tags",children:"tags?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"tags"}),": ",(0,s.jsx)(n.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-21",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"Includes entities that match all of the specified tags."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"type",children:"type?"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"type"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-22",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"If defined, entities that match this type are included."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"volume",children:"volume?"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Beta"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"optional"})," ",(0,s.jsx)(n.strong,{children:"volume"}),": ",(0,s.jsx)(n.a,{href:"/docs/sapi/stable/server/interfaces/Vector3",children:(0,s.jsx)(n.code,{children:"Vector3"})})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"remarks-23",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"In conjunction with location, specified a cuboid volume of\nentities to include."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(96540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);