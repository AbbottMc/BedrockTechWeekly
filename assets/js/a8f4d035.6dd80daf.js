"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[76334],{36843:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>l});var s=n(74848),o=n(28453);const c={},d=void 0,r={id:"changelog_source/preview/1.21/50/25/tech_sapi_exp",title:"tech_sapi_exp",description:"-   Added shutdown event to beforeEvents within the system class. This is fired after all players have left and the world is about to shutdown/close.",source:"@site/docs/changelog_source/preview/1.21/50/25/tech_sapi_exp.md",sourceDirName:"changelog_source/preview/1.21/50/25",slug:"/changelog_source/preview/1.21/50/25/tech_sapi_exp",permalink:"/docs/changelog_source/preview/1.21/50/25/tech_sapi_exp",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.21/50/25/tech_sapi_exp.md",tags:[],version:"current",frontMatter:{}},i={},l=[];function a(e){const t={code:"code",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Added ",(0,s.jsx)(t.code,{children:"shutdown"})," event to ",(0,s.jsx)(t.code,{children:"beforeEvents"})," within the ",(0,s.jsx)(t.code,{children:"system"})," class. This is fired after all players have left and the world is about to shutdown/close."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Input APIs"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Added a suite of input APIs that are readable even if the player's input is disabled with input permissions"}),"\n",(0,s.jsxs)(t.li,{children:["Added ",(0,s.jsx)(t.code,{children:"getMovementVector(): Vector2"})," to ",(0,s.jsx)(t.code,{children:"InputInfo"})," to read raw movement values"]}),"\n",(0,s.jsxs)(t.li,{children:["Added enum ",(0,s.jsx)(t.code,{children:"InputButton"})," with values ",(0,s.jsx)(t.code,{children:"Jump"})," and ",(0,s.jsx)(t.code,{children:"Sneak"})]}),"\n",(0,s.jsxs)(t.li,{children:["Added enum ",(0,s.jsx)(t.code,{children:"ButtonState"})," with values ",(0,s.jsx)(t.code,{children:"Pressed"})," and ",(0,s.jsx)(t.code,{children:"Released"})]}),"\n",(0,s.jsxs)(t.li,{children:["Added ",(0,s.jsx)(t.code,{children:"getButtonState(button: InputButton): ButtonState"})," to ",(0,s.jsx)(t.code,{children:"InputInfo"})," to read raw player button inputs"]}),"\n",(0,s.jsxs)(t.li,{children:["Added ",(0,s.jsx)(t.code,{children:"world.afterEvents.playerButtonInput"})," event to listen to button change events"]}),"\n"]}),"\n"]}),"\n"]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>r});var s=n(96540);const o={},c=s.createContext(o);function d(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);