"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[3403],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var m=n.createContext({}),p=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,m=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(a),k=i,c=u["".concat(m,".").concat(k)]||u[k]||s[k]||r;return a?n.createElement(c,l(l({ref:t},d),{},{components:a})):n.createElement(c,l({ref:t},d))}));function c(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=k;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},57491:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var n=a(87462),i=(a(67294),a(3905));const r={},l=void 0,o={unversionedId:"changelog_source/preview/1.19/70/20/tech_sapi_exp",id:"changelog_source/preview/1.19/70/20/tech_sapi_exp",title:"tech_sapi_exp",description:"-   IMPORTANT BREAKING CHANGE 1, y 3} objects).",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/changelog_source/preview/1.19/70/20/tech_sapi_exp.md",sourceDirName:"changelog_source/preview/1.19/70/20",slug:"/changelog_source/preview/1.19/70/20/tech_sapi_exp",permalink:"/en/docs/changelog_source/preview/1.19/70/20/tech_sapi_exp",draft:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.19/70/20/tech_sapi_exp.md",tags:[],version:"current",frontMatter:{}},m={},p=[],d={toc:p};function u(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"IMPORTANT BREAKING CHANGE:")," The classes\xa0",(0,i.kt)("em",{parentName:"li"},"Location_and\xa0_BlockLocation"),"\xa0no longer exist in the beta script API. All usages of these classes have been changed to use the\xa0",(0,i.kt)("em",{parentName:"li"},"Vector3"),"\xa0interface (that is, { x: 1, y: 2, z: 3} objects)."),(0,i.kt)("li",{parentName:"ul"},"Also, note that several changes were made to properties and get/set methods across objects (listed below) to make them more consistent in calling structure."),(0,i.kt)("li",{parentName:"ul"},"ItemStack",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Item lore can now be cleared by calling\xa0",(0,i.kt)("em",{parentName:"li"},"setLore(undefined)")," or\xa0",(0,i.kt)("em",{parentName:"li"},"setLore(","[","]",")")),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"clearLore"),"-"," Clears the item lore"))),(0,i.kt)("li",{parentName:"ul"},"ItemStack",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Fixed a bug where calling function ",(0,i.kt)("em",{parentName:"li"},"getComponent")," or\xa0",(0,i.kt)("em",{parentName:"li"},"ItemStack.getComponents_would fail on\xa0_ItemStacks"),"\xa0returned from\xa0",(0,i.kt)("em",{parentName:"li"},"EntityItemComponent.itemStack")))),(0,i.kt)("li",{parentName:"ul"},"BeforeChatEvent",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Renamed function tell to\xa0",(0,i.kt)("em",{parentName:"li"},"sendMessage")))),(0,i.kt)("li",{parentName:"ul"},"Block",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"isAir"),"-"," Returns if the block is an air block (i.e. empty space)"),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"isLiquid"),"-"," Returns if the block is a liquid (e.g., a water block and a lava black are liquid, while an air block and a stone block are not)."),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"isSolid"),"-"," Returns if the block is solid (e.g., a cobblestone block and a diamond block are solid, while a ladder block and a fence block are not)."),(0,i.kt)("li",{parentName:"ul"},"The following blocks now have an\xa0",(0,i.kt)("em",{parentName:"li"},"inventory")," component:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Barrel"),(0,i.kt)("li",{parentName:"ul"},"Beacon"),(0,i.kt)("li",{parentName:"ul"},"Blast Furnace"),(0,i.kt)("li",{parentName:"ul"},"Brewing Stand"),(0,i.kt)("li",{parentName:"ul"},"Dispenser"),(0,i.kt)("li",{parentName:"ul"},"Dropper"),(0,i.kt)("li",{parentName:"ul"},"Furnace"),(0,i.kt)("li",{parentName:"ul"},"Hopper"),(0,i.kt)("li",{parentName:"ul"},"Jukebox"),(0,i.kt)("li",{parentName:"ul"},"Lectern"),(0,i.kt)("li",{parentName:"ul"},"Smoker"))),(0,i.kt)("li",{parentName:"ul"},"World Events",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added event\xa0",(0,i.kt)("em",{parentName:"li"},"entityDie"),"-"," It is fired when an entity dies."),(0,i.kt)("li",{parentName:"ul"},"Modified\xa0_projectileHit_to be a readOnly property on the Events class"))),(0,i.kt)("li",{parentName:"ul"},"Player",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added method 'getSpawnPosition' : Gets the spawnPoint position"),(0,i.kt)("li",{parentName:"ul"},"Added property 'spawnDimension' : Gets the spawnPoint dimension"),(0,i.kt)("li",{parentName:"ul"},"Added method 'setSpawn'(spawnPosition : Vec3, spawnDimension : Dimension) : Sets spawnPoint with a position and dimension"),(0,i.kt)("li",{parentName:"ul"},"Added method 'clearSpawn' : Sets the spawnPoint position and dimension to undefined"))),(0,i.kt)("li",{parentName:"ul"},"World",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Renamed function\xa0",(0,i.kt)("em",{parentName:"li"},"say_to\xa0_sendMessage")),(0,i.kt)("li",{parentName:"ul"},"Added method 'getDefaultSpawnPosition' : Gets the spawnPoint position"),(0,i.kt)("li",{parentName:"ul"},"Added method 'setDefaultSpawn'(spawnPosition : Vec3) : Sets the spawnPoint position within 'overworld' dimension"))),(0,i.kt)("li",{parentName:"ul"},"BeforeChatEvent",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getTargets(): Player","[","]"),"-"," Gets chat Player targets"),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"setTargets(players: Player","[","]",")"),"-"," Sets chat Player targets"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"targets")))),(0,i.kt)("li",{parentName:"ul"},"BeforeDataDrivenEntityTriggerEvent",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getModifiers(): DefinitionModifier","[","]"),"-"," Gets entity definition modifiers"),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"setModifiers(modifiers: DefinitionModifier","[","]",")"),"-"," Sets entity definition modifiers"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"modifiers")))),(0,i.kt)("li",{parentName:"ul"},"BoolBlockProperty",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getValidValues(): boolean","[","]"),"-"," Gets all valid boolean values for the BoolBlockProperty"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"validValues")))),(0,i.kt)("li",{parentName:"ul"},"Converted\xa0_BlockHitInformation_to an interface"),(0,i.kt)("li",{parentName:"ul"},"ChatEvent",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getTargets(): Player","[","]"),"-"," Gets chat Player targets"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"targets")))),(0,i.kt)("li",{parentName:"ul"},"Converted\xa0_Color_to an interface"),(0,i.kt)("li",{parentName:"ul"},"DataDrivenEntityTriggerEvent",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getModifiers(): DefinitionModifier","[","]"),"-"," Gets Entity definition modifiers"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"modifiers")))),(0,i.kt)("li",{parentName:"ul"},"DefinitionModifier",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getComponentGroupsToAdd(): string","[","]"),"-"," Gets component groups that will be added with the DefinitionModifier"),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"setComponentGroupsToAdd(newGroups: string","[","]","): void"),"-"," Sets component groups that will be added with the DefinitionModifier"),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getComponentGroupsToRemove(): string","[","]"),"-"," Gets component groups that will be removed with the DefinitionModifier"),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("em",{parentName:"li"},"function"),"\xa0",(0,i.kt)("em",{parentName:"li"},"setComponentGroupsToRemove(removedGroups: string","[","]","): void"),"-"," Sets component groups that will be removed with the DefinitionModifier"),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getTriggers(): Trigger","[","]"),"-"," Gets event triggers of the DefinitionModifier"),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"setTriggers(newTriggers: Trigger","[","]","): void"),"-"," Sets event triggers of the DefinitionModifier"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"componentGroupsToAdd")),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"componentGroupsToRemove")),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"triggers")))),(0,i.kt)("li",{parentName:"ul"},"DirectionBlockProperty",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getValidValues(): Direction","[","]"),"-"," Gets all valid direction enum values for the DirectionBlockProperty"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"validValues")))),(0,i.kt)("li",{parentName:"ul"},"Entity",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getViewDirection(): Vector3"),"-"," Gets view direction of the Entity"),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getRotation(): XYRotation"),"-"," Gets rotation of the Entity"),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getVelocity(): Vector"),"-"," Gets velocity of the Entity"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"viewDirection")),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"rotation")),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"velocity")))),(0,i.kt)("li",{parentName:"ul"},"EntityAgeableComponent",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getDropItems(): string","[","]"),"-"," Gets items that drop when entity grows"),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getFeedItems(): EntityDefinitionFeedItem","[","]"),"-"," Gets items that can be fed to the entity"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"dropItems")),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"feedItems")))),(0,i.kt)("li",{parentName:"ul"},"EntityBreathableComponent",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getBreatheBlocks(): BlockPermutation","[","]"),"-"," Gets blocks entity can breathe in"),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getNonBreatheBlocks(): BlockPermutation","[","]"),"-"," Gets blocks entity can't breathe in"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"breatheBlocks")),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"nonBreatheBlocks")))),(0,i.kt)("li",{parentName:"ul"},"EntityHealableComponent",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getFeedItems(): FeedItem","[","]"),"-"," Gets healing items for the EntityHealableComponent"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"items")))),(0,i.kt)("li",{parentName:"ul"},"Converted\xa0_EntityHitInformation_to an interface"),(0,i.kt)("li",{parentName:"ul"},"EntityRideableComponent",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getFamilyTypes(): string","[","]"),"-"," Gets supported rider entity types"),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getSeats(): Seat","[","]"),"-"," Gets rider information for each seat"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"familyTypes")),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"seats")))),(0,i.kt)("li",{parentName:"ul"},"EntityTameableComponent",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getTameItems(): string","[","]"),"-"," Gets tame items of the EntityTameableComponent"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"tameItems")))),(0,i.kt)("li",{parentName:"ul"},"FeedItem",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getEffects(): FeedItemEffect","[","]"),"-"," Gets effect of the FeedItem"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"effects")))),(0,i.kt)("li",{parentName:"ul"},"IntBlockProperty",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getValidValues(): number","[","]"),"-"," Gets all valid integer values for the IntBlockProperty"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"validValues")))),(0,i.kt)("li",{parentName:"ul"},"ItemDurabilityComponent",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getDamageRange(): NumberRange"),"-"," Gets the range of numbers that describes the chance of the item losing durability"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"damageRange")))),(0,i.kt)("li",{parentName:"ul"},"Converted\xa0_NumberRange_to an interface"),(0,i.kt)("li",{parentName:"ul"},"ProjectileHitEvent",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("em",{parentName:"li"},"function"),"\xa0",(0,i.kt)("em",{parentName:"li"},"getBlockHit(): BlockHitInformation"),"-"," Gets block hit information from the ProjectileHitEvent"),(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getEntityHit(): EntityHitInformation"),"-"," Gets entity hit information from the ProjectileHitEvent"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"blockHit")),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"entityHit")))),(0,i.kt)("li",{parentName:"ul"},"StringBlockProperty",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added function\xa0",(0,i.kt)("em",{parentName:"li"},"getValidValues(): string","[","]"),"-"," Gets all valid string values for the StringBlockProperty"),(0,i.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,i.kt)("em",{parentName:"li"},"validValues"))))))))}u.isMDXComponent=!0}}]);