"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[6597,81791],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(a),u=r,k=c["".concat(s,".").concat(u)]||c[u]||d[u]||i;return a?n.createElement(k,o(o({ref:t},p),{},{components:a})):n.createElement(k,o({ref:t},p))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var m=2;m<i;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294),r=a(86010);const i="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:a},t)}},31792:(e,t,a)=>{a.d(t,{Z:()=>w});var n=a(87462),r=a(67294),i=a(86010),o=a(12466),l=a(16550),s=a(91980),m=a(67392),p=a(50012);function c(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function d(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,m.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function u(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function k(e){let{queryString:t=!1,groupId:a}=e;const n=(0,l.k6)(),i=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(n.location.search);t.set(i,e),n.replace({...n.location,search:t.toString()})}),[i,n])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,i=d(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i}))),[s,m]=k({queryString:a,groupId:n}),[c,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,i]=(0,p.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:n}),g=(()=>{const e=s??c;return u({value:e,tabValues:i})?e:null})();(0,r.useEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!u({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),m(e),h(e)}),[m,h,i]),tabValues:i}}var g=a(72389);const f="tabList_TRJ7",N="tabItem_hGfb";function b(e){let{className:t,block:a,selectedValue:l,selectValue:s,tabValues:m,rightElement:p}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),u=e=>{const t=e.currentTarget,a=c.indexOf(t),n=m[a].value;n!==l&&(d(t),s(n))},k=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},t)},m.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:k,onClick:u},o,{className:(0,i.Z)("tabs__item",N,o?.className,{"tabs__item--active":l===t}),style:{wordBreak:"keep-all"}}),a??t)})),p?r.createElement("div",{className:"w-full"},p):void 0)}function y(e){let{lazy:t,children:a,selectedValue:n}=e;if(t){const e=a.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=h(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",f)},r.createElement(b,(0,n.Z)({},e,t)),r.createElement(y,(0,n.Z)({},e,t)))}function w(e){const t=(0,g.Z)();return r.createElement(v,(0,n.Z)({key:String(t)},e))}},55963:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var n=a(87462),r=(a(67294),a(3905));a(9071);const i={},o=void 0,l={unversionedId:"changelog_source/stable/1.19/0/tech",id:"changelog_source/stable/1.19/0/tech",title:"tech",description:"Updated Add-On Template Packs",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/changelog_source/stable/1.19/0/tech.mdx",sourceDirName:"changelog_source/stable/1.19/0",slug:"/changelog_source/stable/1.19/0/tech",permalink:"/en/docs/changelog_source/stable/1.19/0/tech",draft:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/stable/1.19/0/tech.mdx",tags:[],version:"current",frontMatter:{}},s={},m=[{value:"<strong>Updated Add-On Template Packs</strong>",id:"updated-add-on-template-packs",level:2},{value:"<strong>Performance / Stability</strong>",id:"performance--stability",level:2},{value:"<strong>General</strong>",id:"general",level:2},{value:"<strong>Commands</strong>",id:"commands",level:2},{value:"<strong>Dedicated Server</strong>",id:"dedicated-server",level:2},{value:"<strong>Mobs</strong>",id:"mobs",level:2},{value:"<strong>Fog</strong>",id:"fog",level:2},{value:"<strong>Item Components</strong>",id:"item-components",level:2},{value:"<strong>Molang</strong>",id:"molang",level:2},{value:"<strong>GameTest Framework</strong>",id:"gametest-framework",level:2},{value:"<strong>IMPORTANT BREAKING CHANGE</strong>",id:"important-breaking-change",level:2},{value:"<strong>mojang-gametest module</strong>: Test",id:"mojang-gametest-module-test",level:2},{value:"<strong>mojang-minecraft module</strong>",id:"mojang-minecraft-module",level:2}],p={toc:m};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"updated-add-on-template-packs"},(0,r.kt)("strong",{parentName:"h2"},"Updated Add-On Template Packs")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Updated Add-On templates for 1.19.0 with new resources, behaviors, and documentation, are available to download at ",(0,r.kt)("a",{parentName:"li",href:"https://aka.ms/MCAddOnPacks"},"aka.ms/MCAddonPacks"))),(0,r.kt)("h2",{id:"performance--stability"},(0,r.kt)("strong",{parentName:"h2"},"Performance / Stability")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fixed a crash when loading a Behavior Pack with non-JSON object in entity components, component","_",'groups, and "add"/"remove" events (',(0,r.kt)("a",{parentName:"li",href:"https://bugs.mojang.com/browse/MCPE-151377"},"MCPE-151377"),", ",(0,r.kt)("a",{parentName:"li",href:"https://bugs.mojang.com/browse/MCPE-151380"},"MCPE-151380"),")"),(0,r.kt)("li",{parentName:"ul"},"Fixed a crash that could occur when attempting to render blocks that rely on biome data"),(0,r.kt)("li",{parentName:"ul"},"Fixed a crash when attempting to access a null entity"),(0,r.kt)("li",{parentName:"ul"},"Fixed a crash in ",(0,r.kt)("em",{parentName:"li"},"variant")," related to thrown potions and invalid potion IDs"),(0,r.kt)("li",{parentName:"ul"},"Avoid crashes on certain devices when parsing Molang expressions with many OR or AND operators")),(0,r.kt)("h2",{id:"general"},(0,r.kt)("strong",{parentName:"h2"},"General")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Volume instances are now stored in the world, persisting between play sessions"),(0,r.kt)("li",{parentName:"ul"},"Limit path strings and localized ID strings in data-driven blocks to 256 characters"),(0,r.kt)("li",{parentName:"ul"},"Limit the length of crafting tag strings in ",(0,r.kt)("em",{parentName:"li"},"CraftingTableComponent")," to 64 characters"),(0,r.kt)("li",{parentName:"ul"},"Limit the number of elements in the\xa0",(0,r.kt)("em",{parentName:"li"},"material","_","instances_field of the _BlockMaterialInstancesComponent")," to 64"),(0,r.kt)("li",{parentName:"ul"},"Limit the number of elements in the\xa0conditionsand\xa0block","_","filter\xa0fields of the ",(0,r.kt)("em",{parentName:"li"},"BlockPlacementFieldComponent")," to 64"),(0,r.kt)("li",{parentName:"ul"},"Updated documentation for\xa0originand\xa0size\xa0fields of the\xa0",(0,r.kt)("em",{parentName:"li"},"minecraft:block","_","collision"),"\xa0and\xa0",(0,r.kt)("em",{parentName:"li"},"minecraft:aim","_","collision"),"\xa0components"),(0,r.kt)("li",{parentName:"ul"},"Set stack limit for brewing station result slot to 1, as to avoid getting input stacks being overwritten when the brew is complete"),(0,r.kt)("li",{parentName:"ul"},"Tied consume animation to consume duration"),(0,r.kt)("li",{parentName:"ul"},"Content errors for data-driven blocks improved to log resource pack, file, and block identifier"),(0,r.kt)("li",{parentName:"ul"},"Limit length of the\xa0",(0,r.kt)("em",{parentName:"li"},"minecraft:geometry_field of _BlockGeometryComponent")," to 256 characters"),(0,r.kt)("li",{parentName:"ul"},'Updated documentation for specific string types "Localization String", "Path String", and "Identifier String"')),(0,r.kt)("h2",{id:"commands"},(0,r.kt)("strong",{parentName:"h2"},"Commands")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The '/spreadplayers' command will now avoid more hazardous locations"),(0,r.kt)("li",{parentName:"ul"},"Reload command will now discover new function and script files"),(0,r.kt)("li",{parentName:"ul"},"When a Command Block clones itself twice with the '/clone' command, the cloned Command Block will now activate on the first try (",(0,r.kt)("a",{parentName:"li",href:"https://bugs.mojang.com/browse/MCPE-122188"},"MCPE-122188"),")"),(0,r.kt)("li",{parentName:"ul"},"Command selectors now correctly identify players by name instead of their name tag"),(0,r.kt)("li",{parentName:"ul"},"Title commands fired before a client was done joining will now show instead of being ignored"),(0,r.kt)("li",{parentName:"ul"},"Added the 'replace entity' overload to the '/loot' command"),(0,r.kt)("li",{parentName:"ul"},"Fixed an issue with teleporting an entity to a chunk that has not been loaded since before 1.18.30 would result in the loss of that entity")),(0,r.kt)("h2",{id:"dedicated-server"},(0,r.kt)("strong",{parentName:"h2"},"Dedicated Server")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Enabled the Windows Dedicated Server console to read UTF-16 encoded Unicode input (",(0,r.kt)("a",{parentName:"li",href:"https://bugs.mojang.com/browse/BDS-3791"},"BDS-3791"),")")),(0,r.kt)("h2",{id:"mobs"},(0,r.kt)("strong",{parentName:"h2"},"Mobs")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Entities that use ",(0,r.kt)("em",{parentName:"li"},"KnockbackRoarGoal")," can once again properly use entity filters to determine damage"),(0,r.kt)("li",{parentName:"ul"},"Actor properties can now be applied to player entities. Updated network protocol version to support this (",(0,r.kt)("a",{parentName:"li",href:"https://bugs.mojang.com/browse/MCPE-129628"},"MCPE-129628"),")"),(0,r.kt)("li",{parentName:"ul"},"Actors using movement prediction will once again teleport smoothly"),(0,r.kt)("li",{parentName:"ul"},"Added in a check to prevent an actor that is a passenger from being ridden by the vehicle it is on, preventing an infinite loop looking for the root vehicle (",(0,r.kt)("a",{parentName:"li",href:"https://bugs.mojang.com/browse/MCPE-133774"},"MCPE-133774"),")"),(0,r.kt)("li",{parentName:"ul"},'Exposed new data parameter "can',"_","sleep","_","while","_",'riding" for "minecraft.behavior.sleep". If set to false, the goal will not start if the mob is riding'),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("em",{parentName:"li"},"is","_","moving")," filter now returns the correct value when an actor is moving"),(0,r.kt)("li",{parentName:"ul"},"Added a ",(0,r.kt)("em",{parentName:"li"},"target","_","block","_","filters"),' to "',(0,r.kt)("em",{parentName:"li"},"behavior.move","_","to","_","block"),'" and "',(0,r.kt)("em",{parentName:"li"},"is","_","waterlogged"),'" filter test to prevent mobs from moving to blocks underwater (',(0,r.kt)("a",{parentName:"li",href:"https://bugs.mojang.com/browse/MCPE-153783"},"MCPE-153783"),")")),(0,r.kt)("h2",{id:"fog"},(0,r.kt)("strong",{parentName:"h2"},"Fog")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Updated fog JSON schema to allow distance fog settings to use negative value as 'fog","_","start'. Allowing nearby blocks to also be tinted with fog color"),(0,r.kt)("li",{parentName:"ul"},"Added adjustable fog effect that can expand or shrink over time. Users will get the sense of eyes adjusting when going into water")),(0,r.kt)("h2",{id:"item-components"},(0,r.kt)("strong",{parentName:"h2"},"Item Components")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added new data-driven Item component\xa0",(0,r.kt)("em",{parentName:"li"},"minecraft:chargeable"),"-"," Allows the item to be charged (like Apples or Bows) when the use action button is held\xa0",(0,r.kt)("em",{parentName:"li"},"on","_","complete"),"\xa0- Trigger executed when the items use duration has been completed")),(0,r.kt)("h2",{id:"molang"},(0,r.kt)("strong",{parentName:"h2"},"Molang")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Avoid clearing temp Molang variables during hand rendering")),(0,r.kt)("h2",{id:"gametest-framework"},(0,r.kt)("strong",{parentName:"h2"},"GameTest Framework")),(0,r.kt)("h2",{id:"important-breaking-change"},(0,r.kt)("strong",{parentName:"h2"},"IMPORTANT BREAKING CHANGE")),(0,r.kt)("p",null,'GameTest module type changed from "javascript" to "script" in manifest.json. Added an optional attribute \u201clanguage\u201d which has only one supported value \u2013 javascript.'),(0,r.kt)("p",null,"New JavaScript modules in manifest.json should look as follows:  "),(0,r.kt)("p",null,"\xa0 ",(0,r.kt)("em",{parentName:"p"},'"modules": ',"["),(0,r.kt)("br",{parentName:"p"}),"\n","",(0,r.kt)("em",{parentName:"p"},"{"),(0,r.kt)("br",{parentName:"p"}),"\n","",(0,r.kt)("em",{parentName:"p"},'"description": "JavaScript module code",'),(0,r.kt)("br",{parentName:"p"}),"\n","",(0,r.kt)("em",{parentName:"p"},'"language": "javascript",'),(0,r.kt)("br",{parentName:"p"}),"\n","",(0,r.kt)("em",{parentName:"p"},'"type": "script",'),(0,r.kt)("br",{parentName:"p"}),"\n","",(0,r.kt)("em",{parentName:"p"},'"uuid": "\\<your UUID',">",'",'),(0,r.kt)("br",{parentName:"p"}),"\n","",(0,r.kt)("em",{parentName:"p"},'"version": ',"[","0, 0, 1","]",","),(0,r.kt)("br",{parentName:"p"}),"\n","",(0,r.kt)("em",{parentName:"p"},'"entry": "scripts/main.js"'),(0,r.kt)("br",{parentName:"p"}),"\n","",(0,r.kt)("em",{parentName:"p"},"}"),(0,r.kt)("br",{parentName:"p"}),"\n","",(0,r.kt)("em",{parentName:"p"},"]",",")),(0,r.kt)("h2",{id:"mojang-gametest-module-test"},(0,r.kt)("strong",{parentName:"h2"},"mojang-gametest module"),": Test"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added function\xa0",(0,r.kt)("em",{parentName:"li"},"rotateVector"),"-"," Rotates a vector relative to the GameTest structure rotation"),(0,r.kt)("li",{parentName:"ul"},"Removed constraint on maximum travel distance from GameTest structure for SimulatedPlayer.")),(0,r.kt)("h2",{id:"mojang-minecraft-module"},(0,r.kt)("strong",{parentName:"h2"},"mojang-minecraft module")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Entity",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added function\xa0",(0,r.kt)("em",{parentName:"li"},"setRotation(degreesX: number, degreesY: number)"),"-"," Sets the rotation of the Entity"),(0,r.kt)("li",{parentName:"ul"},"Added read-only property\xa0",(0,r.kt)("em",{parentName:"li"},"rotation: XYRotation"),"-"," Gets the rotation of the Entity"),(0,r.kt)("li",{parentName:"ul"},"Removed property\xa0",(0,r.kt)("em",{parentName:"li"},"bodyRotation"),"-"," Note: Use ",(0,r.kt)("em",{parentName:"li"},"rotation.y")," instead"))),(0,r.kt)("li",{parentName:"ul"},"XYRotation",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Renamed class\xa0",(0,r.kt)("em",{parentName:"li"},"PitchYawRotation_to\xa0_XYRotation")),(0,r.kt)("li",{parentName:"ul"},"Renamed property\xa0",(0,r.kt)("em",{parentName:"li"},"pitch_to\xa0_x")),(0,r.kt)("li",{parentName:"ul"},"Renamed property\xa0",(0,r.kt)("em",{parentName:"li"},"yaw_to\xa0_y")))),(0,r.kt)("li",{parentName:"ul"},"New events:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added event ",(0,r.kt)("em",{parentName:"li"},"buttonPushEvent")," - fires when a button is pushed"),(0,r.kt)("li",{parentName:"ul"},"Added event\xa0",(0,r.kt)("em",{parentName:"li"},"events.projectileHit"),"-"," Fires when a projectile hits a Block or Entity"),(0,r.kt)("li",{parentName:"ul"},"Added event\xa0",(0,r.kt)("em",{parentName:"li"},"events.itemStartUseOn"),"-"," Sent when the player first interacts with a block"),(0,r.kt)("li",{parentName:"ul"},"Added event\xa0",(0,r.kt)("em",{parentName:"li"},"events.itemStopUseOn"),"-"," Sent when fire if the block is successfully interacted with and the block has changed - such as when grass is turned to a path with a Shovel"),(0,r.kt)("li",{parentName:"ul"},"Added event\xa0",(0,r.kt)("em",{parentName:"li"},"events.itemStartCharge"),"\u2013 Sent when the player first starts using a charging/animated item"),(0,r.kt)("li",{parentName:"ul"},"Added event\xa0",(0,r.kt)("em",{parentName:"li"},"events.itemCompleteCharge"),"-"," Sent when the item has completed its charge action"),(0,r.kt)("li",{parentName:"ul"},"Added event\xa0",(0,r.kt)("em",{parentName:"li"},"events.itemReleaseCharge"),"-"," Sent when the user has finished using the item and released the build action"),(0,r.kt)("li",{parentName:"ul"},"Added event\xa0",(0,r.kt)("em",{parentName:"li"},"events.itemStopCharge"),"-"," Sent either when the player has finished an items use cycle or when the player has released the use action with the item"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"ItemStartUseOnEvent")," Added read only property\xa0",(0,r.kt)("em",{parentName:"li"},"buildBlockLocation"),"-"," The result build block position. Useful for determining where a block was placed"),(0,r.kt)("li",{parentName:"ul"},"Added member\xa0",(0,r.kt)("em",{parentName:"li"},"player?: Player_to the\xa0_LeverActivate"),"\xa0event - The player that activated the lever")))),(0,r.kt)("p",null,"New property on Player",(0,r.kt)("em",{parentName:"p"},": onScreenDisplay : ScreenDisplay")," - exposes a new interface to trigger on screen content."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ScreenDisplay Type",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"setTitle(title : String, options? : TitleDisplayOptions)")," - cause a title to show up on the player's HUD, optionally specifying the subtitle and fade in, stay and fade out times"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"clearTitle()")," - clear title and subtitle"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"updateSubtitle(subtitle : String)")," - update the subtitle (but not the title)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"setActionBar(text : String)")," - set the action bar text"))),(0,r.kt)("li",{parentName:"ul"},"TitleDisplayOptions object",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"subtitle? : String")," - optional subtitle"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"fadeInSeconds : Int")," - number of seconds to fade in new title and subtitle"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"staySeconds : Int")," - number of seconds to have the title and subtitle stay on screen"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"fadeOutSeconds : Int")," - number of seconds to fade out title and subtitle")))),(0,r.kt)("p",null,"Support of dynamic properties that script can use to persist data per-World or per-Entity. Note that properties must be registered using the propertyRegistry in the new WorldInitialize event."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"DynamicPropertiesDefinition",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added function\xa0",(0,r.kt)("em",{parentName:"li"},"defineNumber(identifier: string): void"),"-"," Defines a dynamic number property"),(0,r.kt)("li",{parentName:"ul"},"Added function\xa0",(0,r.kt)("em",{parentName:"li"},"defineString(identifier: string, maxLength: number): void"),"-"," Defines a dynamic string property"),(0,r.kt)("li",{parentName:"ul"},"Added function\xa0",(0,r.kt)("em",{parentName:"li"},"defineBoolean(identifier: string): void"),"-"," Defines a dynamic boolean property"),(0,r.kt)("li",{parentName:"ul"},"Added event\xa0",(0,r.kt)("em",{parentName:"li"},"worldInitialize(worldInitializeEvent: WorldInitializeEvent)"),"-"," Fires during world load and contains the property registry used for declaring dynamic properties"))),(0,r.kt)("li",{parentName:"ul"},"PropertyRegistry",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added function\xa0",(0,r.kt)("em",{parentName:"li"},"registerEntityTypeDynamicProperties(propertiesDefinition: DynamicPropertiesDefinition, entityType: EntityType)"),"-"," Registers dynamic property definitions for the given EntityType"),(0,r.kt)("li",{parentName:"ul"},"Added function\xa0",(0,r.kt)("em",{parentName:"li"},"registerWorldDynamicProperties(propertiesDefinition: DynamicPropertiesDefinition)"),"-"," Registers property definitions for the world"))),(0,r.kt)("li",{parentName:"ul"},"World object/Entity object additions:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added function\xa0",(0,r.kt)("em",{parentName:"li"},"setDynamicProperty(identifier: string, value: boolean | string | number)"),"-"," Adds a dynamic property to the world/entity"),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("em",{parentName:"li"},"function"),"\xa0",(0,r.kt)("em",{parentName:"li"},"getDynamicProperty(identifier: string): boolean | string | number"),"-"," Gets a dynamic property from the world/entity if it exists, otherwise returns undefined"),(0,r.kt)("li",{parentName:"ul"},"Added function\xa0",(0,r.kt)("em",{parentName:"li"},"removeDynamicProperty(identifier: string): boolean"),"-"," Removes a dynamic property value from the world/entity")))),(0,r.kt)("p",null,"Updated the GameTest Framework interface to add read-only scoreboard support."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"World",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"scoreboard : Scoreboard")," - Access world's scoreboard"))),(0,r.kt)("li",{parentName:"ul"},"Entity",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"scoreboard : ScoreboardIdentity")," - Access the entities scoreboard identity"))),(0,r.kt)("li",{parentName:"ul"},"Scoreboard - Object representing the scoreboard data",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"getObjective(objectiveId : String) : ScoreboardObjective")," - Method to get a specific objective (by id)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"getObjectives : ScoreboardObjective","[","]")," - Method to get all objectives"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"getParticipants : ScoreboardIdentity","[","]")," - Method to get all scoreboard identities"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"ScoreboardObjective")," ","-"," Object representing a scoreboard objective",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"id : String")," - (read-only) scoreboard identifier"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"displayName : String")," - (read-only) scoreboard display name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"getParticipants : ScoreboardIdentity","[","]")," - Method to get all objective participant identities"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"getScores : ScoreboardScoreInfo","[","]"," -")," Method to get the score info for all participants"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"getScore(participant : ScoreboardIdentity) : Int")," - Method to get the score value of a participant"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"ScoreboardIdentity")," ","-"," Object representing a scoreboard participant",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"type : ScoreboardIdentityType")," - (read-only) enum representing the type of identity"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"id : Int")," - (read-only) Unique identifier for the identity"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"displayName : String")," - (read-only) display name for the identity"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"getEntity : Entity")," ","-"," get the Entity handle associated with the identity"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"ScoreboardIdentityType")," - Enum representing identity ",(0,r.kt)("em",{parentName:"li"},"types : .Entity")," - An entity .FakePlayer - A fake identity .Player - A player"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"ScoreboardScoreInfo")," - Score-Identity pair for an objective",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"participant : ScoreboardIdentity")," - (read-only) The participant"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"score : Int")," - (read-only) The score"))),(0,r.kt)("li",{parentName:"ul"},"Commands",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added\xa0_/script profiler_command to create GameTest script performance traces. Script profiles should be written to the Minecraft logging folder. See ",(0,r.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/minecraft/creator/documents/scriptdevelopertools"},"this article")," for more information on the Script Profiler."))),(0,r.kt)("li",{parentName:"ul"},"Dedicated Server has been updated to allow servers to explicitly list which script modules they want loaded when running scripts. A default configuration file is located at\xa0",(0,r.kt)("em",{parentName:"li"},"/config/default/permissions.json"),". Without this new file, all script modules are disabled by default. See ",(0,r.kt)("a",{parentName:"li",href:"https://aka.ms/mcserverscripts"},"this article")," for more information on usage of scripts plus servers.")))}c.isMDXComponent=!0},9071:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>m,toc:()=>c});var n=a(87462),r=(a(67294),a(3905)),i=a(31792),o=a(85162);const l={},s=void 0,m={unversionedId:"components/TechChangelogSwitcher",id:"components/TechChangelogSwitcher",title:"TechChangelogSwitcher",description:"{props.techSapi}",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/components/TechChangelogSwitcher.mdx",sourceDirName:"components",slug:"/components/TechChangelogSwitcher",permalink:"/en/docs/components/TechChangelogSwitcher",draft:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/components/TechChangelogSwitcher.mdx",tags:[],version:"current",frontMatter:{}},p={},c=[],d={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(i.Z,{className:"changelog_sapi_tabs",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"Update Description",mdxType:"TabItem"},a.techSapi),(0,r.kt)(o.Z,{value:"API Changelog",mdxType:"TabItem"},a.techSapiChangelog)))}u.isMDXComponent=!0}}]);