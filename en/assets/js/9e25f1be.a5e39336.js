"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[76762],{15680:(e,r,n)=>{n.d(r,{xA:()=>c,yg:()=>y});var t=n(96540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function l(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?l(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),p=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},c=function(e){var r=p(e.components);return t.createElement(s.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},g=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),g=a,y=u["".concat(s,".").concat(g)]||u[g]||d[g]||l;return n?t.createElement(y,i(i({ref:r},c),{},{components:n})):t.createElement(y,i({ref:r},c))}));function y(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=g;var o={};for(var s in r)hasOwnProperty.call(r,s)&&(o[s]=r[s]);o.originalType=e,o[u]="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}g.displayName="MDXCreateElement"},4079:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var t=n(58168),a=(n(96540),n(15680));const l={id:"RGBA",title:"Interface: RGBA",sidebar_label:"RGBA",sidebar_position:0,custom_edit_url:null},i=void 0,o={unversionedId:"sapi/stable/server/interfaces/RGBA",id:"sapi/stable/server/interfaces/RGBA",title:"Interface: RGBA",description:"Represents a fully customizable color within Minecraft.",source:"@site/docs/sapi/stable/server/interfaces/RGBA.md",sourceDirName:"sapi/stable/server/interfaces",slug:"/sapi/stable/server/interfaces/RGBA",permalink:"/en/docs/sapi/stable/server/interfaces/RGBA",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"RGBA",title:"Interface: RGBA",sidebar_label:"RGBA",sidebar_position:0,custom_edit_url:null},sidebar:"sapiStableSidebar",previous:{title:"RGB",permalink:"/en/docs/sapi/stable/server/interfaces/RGB"},next:{title:"RangeComparison",permalink:"/en/docs/sapi/stable/server/interfaces/RangeComparison"}},s={},p=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"alpha",id:"alpha",level:3},{value:"blue",id:"blue",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"green",id:"green",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"red",id:"red",level:3},{value:"Inherited from",id:"inherited-from-2",level:4}],c={toc:p},u="wrapper";function d(e){let{components:r,...n}=e;return(0,a.yg)(u,(0,t.A)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Represents a fully customizable color within Minecraft."),(0,a.yg)("h2",{id:"hierarchy"},"Hierarchy"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/RGB"},(0,a.yg)("inlineCode",{parentName:"a"},"RGB"))),(0,a.yg)("p",{parentName:"li"},"\u21b3 ",(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"RGBA"))))),(0,a.yg)("h2",{id:"properties"},"Properties"),(0,a.yg)("h3",{id:"alpha"},"alpha"),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("strong",{parentName:"p"},"alpha"),": ",(0,a.yg)("inlineCode",{parentName:"p"},"number")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Determines a color's alpha (opacity) component. Valid values\nare between 0 (transparent) and 1.0 (opaque)."),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"blue"},"blue"),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("strong",{parentName:"p"},"blue"),": ",(0,a.yg)("inlineCode",{parentName:"p"},"number")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Determines a color's blue component. Valid values are\nbetween 0 and 1.0."),(0,a.yg)("h4",{id:"inherited-from"},"Inherited from"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/RGB"},"RGB"),".",(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/RGB#blue"},"blue")),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"green"},"green"),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("strong",{parentName:"p"},"green"),": ",(0,a.yg)("inlineCode",{parentName:"p"},"number")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Determines a color's green component. Valid values are\nbetween 0 and 1.0."),(0,a.yg)("h4",{id:"inherited-from-1"},"Inherited from"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/RGB"},"RGB"),".",(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/RGB#green"},"green")),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"red"},"red"),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("strong",{parentName:"p"},"red"),": ",(0,a.yg)("inlineCode",{parentName:"p"},"number")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Determines a color's red component. Valid values are between\n0 and 1.0."),(0,a.yg)("h4",{id:"inherited-from-2"},"Inherited from"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/RGB"},"RGB"),".",(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/RGB#red"},"red")))}d.isMDXComponent=!0}}]);