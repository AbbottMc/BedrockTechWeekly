"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[19837],{15680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>d});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),p=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},g=function(e){var n=p(e.components);return a.createElement(i.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},y=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),c=p(t),y=r,d=c["".concat(i,".").concat(y)]||c[y]||u[y]||l;return t?a.createElement(d,o(o({ref:n},g),{},{components:t})):a.createElement(d,o({ref:n},g))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=y;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[c]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<l;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},18309:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=t(58168),r=(t(96540),t(15680));const l={id:"BlockVolumeBase",title:"Class: BlockVolumeBase",sidebar_label:"BlockVolumeBase",sidebar_position:0,custom_edit_url:null},o=void 0,s={unversionedId:"sapi/stable/server/classes/BlockVolumeBase",id:"sapi/stable/server/classes/BlockVolumeBase",title:"Class: BlockVolumeBase",description:"Base type for BlockVolumes.",source:"@site/docs/sapi/stable/server/classes/BlockVolumeBase.md",sourceDirName:"sapi/stable/server/classes",slug:"/sapi/stable/server/classes/BlockVolumeBase",permalink:"/en/docs/sapi/stable/server/classes/BlockVolumeBase",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"BlockVolumeBase",title:"Class: BlockVolumeBase",sidebar_label:"BlockVolumeBase",sidebar_position:0,custom_edit_url:null},sidebar:"sapiStableSidebar",previous:{title:"BlockVolume",permalink:"/en/docs/sapi/stable/server/classes/BlockVolume"},next:{title:"BlockWaterContainerComponent",permalink:"/en/docs/sapi/stable/server/classes/BlockWaterContainerComponent"}},i={},p=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Methods",id:"methods",level:2},{value:"getBlockLocationIterator",id:"getblocklocationiterator",level:3},{value:"Returns",id:"returns",level:4},{value:"getBoundingBox",id:"getboundingbox",level:3},{value:"Returns",id:"returns-1",level:4},{value:"getCapacity",id:"getcapacity",level:3},{value:"Returns",id:"returns-2",level:4},{value:"getMax",id:"getmax",level:3},{value:"Returns",id:"returns-3",level:4},{value:"getMin",id:"getmin",level:3},{value:"Returns",id:"returns-4",level:4},{value:"getSpan",id:"getspan",level:3},{value:"Returns",id:"returns-5",level:4},{value:"isInside",id:"isinside",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-6",level:4},{value:"translate",id:"translate",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-7",level:4}],g={toc:p},c="wrapper";function u(e){let{components:n,...t}=e;return(0,r.yg)(c,(0,a.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Base type for BlockVolumes."),(0,r.yg)("h2",{id:"hierarchy"},"Hierarchy"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"BlockVolumeBase"))),(0,r.yg)("p",{parentName:"li"},"\u21b3 ",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/BlockVolume"},(0,r.yg)("inlineCode",{parentName:"a"},"BlockVolume"))),(0,r.yg)("p",{parentName:"li"},"\u21b3 ",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/ListBlockVolume"},(0,r.yg)("inlineCode",{parentName:"a"},"ListBlockVolume"))))),(0,r.yg)("h2",{id:"constructors"},"Constructors"),(0,r.yg)("h3",{id:"constructor"},"constructor"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Private")," ",(0,r.yg)("strong",{parentName:"p"},"new BlockVolumeBase"),"()"),(0,r.yg)("h2",{id:"methods"},"Methods"),(0,r.yg)("h3",{id:"getblocklocationiterator"},"getBlockLocationIterator"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"getBlockLocationIterator"),"(): ",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/BlockLocationIterator"},(0,r.yg)("inlineCode",{parentName:"a"},"BlockLocationIterator"))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Fetch a ",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/BlockLocationIterator"},"BlockLocationIterator")," that represents all of\nthe block world locations within the specified volume"),(0,r.yg)("p",null,"This function can't be called in read-only mode."),(0,r.yg)("h4",{id:"returns"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/BlockLocationIterator"},(0,r.yg)("inlineCode",{parentName:"a"},"BlockLocationIterator"))),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"getboundingbox"},"getBoundingBox"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"getBoundingBox"),"(): ",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/BoundingBox"},(0,r.yg)("inlineCode",{parentName:"a"},"BoundingBox"))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Return a ",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/BoundingBox"},"BoundingBox")," object which represents the\nvalidated min and max coordinates of the volume"),(0,r.yg)("p",null,"This function can't be called in read-only mode."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This function can throw errors."),(0,r.yg)("h4",{id:"returns-1"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/BoundingBox"},(0,r.yg)("inlineCode",{parentName:"a"},"BoundingBox"))),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"getcapacity"},"getCapacity"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"getCapacity"),"(): ",(0,r.yg)("inlineCode",{parentName:"p"},"number")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Return the capacity (volume) of the BlockVolume (W",(0,r.yg)("em",{parentName:"p"},"D"),"H)"),(0,r.yg)("p",null,"This function can't be called in read-only mode."),(0,r.yg)("h4",{id:"returns-2"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"number")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"getmax"},"getMax"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"getMax"),"(): ",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/Vector3"},(0,r.yg)("inlineCode",{parentName:"a"},"Vector3"))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Get the largest corner position of the volume (guaranteed to\nbe >= min)"),(0,r.yg)("p",null,"This function can't be called in read-only mode."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This function can throw errors."),(0,r.yg)("h4",{id:"returns-3"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/Vector3"},(0,r.yg)("inlineCode",{parentName:"a"},"Vector3"))),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"getmin"},"getMin"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"getMin"),"(): ",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/Vector3"},(0,r.yg)("inlineCode",{parentName:"a"},"Vector3"))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Get the smallest corner position of the volume (guaranteed\nto be <= max)"),(0,r.yg)("p",null,"This function can't be called in read-only mode."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This function can throw errors."),(0,r.yg)("h4",{id:"returns-4"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/Vector3"},(0,r.yg)("inlineCode",{parentName:"a"},"Vector3"))),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"getspan"},"getSpan"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"getSpan"),"(): ",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/Vector3"},(0,r.yg)("inlineCode",{parentName:"a"},"Vector3"))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Get a ",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/Vector3"},"Vector3")," object where each component represents\nthe number of blocks along that axis"),(0,r.yg)("p",null,"This function can't be called in read-only mode."),(0,r.yg)("h4",{id:"returns-5"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/Vector3"},(0,r.yg)("inlineCode",{parentName:"a"},"Vector3"))),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"isinside"},"isInside"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"isInside"),"(",(0,r.yg)("inlineCode",{parentName:"p"},"pos"),"): ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Check to see if a given world block location is inside a\nBlockVolume"),(0,r.yg)("p",null,"This function can't be called in read-only mode."),(0,r.yg)("h4",{id:"parameters"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"pos")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("a",{parentName:"td",href:"/en/docs/sapi/stable/server/interfaces/Vector3"},(0,r.yg)("inlineCode",{parentName:"a"},"Vector3")))))),(0,r.yg)("h4",{id:"returns-6"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"translate"},"translate"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"translate"),"(",(0,r.yg)("inlineCode",{parentName:"p"},"delta"),"): ",(0,r.yg)("inlineCode",{parentName:"p"},"void")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Move a BlockVolume by a specified amount"),(0,r.yg)("p",null,"This function can't be called in read-only mode."),(0,r.yg)("h4",{id:"parameters-1"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"delta")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("a",{parentName:"td",href:"/en/docs/sapi/stable/server/interfaces/Vector3"},(0,r.yg)("inlineCode",{parentName:"a"},"Vector3"))),(0,r.yg)("td",{parentName:"tr",align:"left"},"Amount of blocks to move by")))),(0,r.yg)("h4",{id:"returns-7"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"void")))}u.isMDXComponent=!0}}]);