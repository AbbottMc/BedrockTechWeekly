"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[22263],{15680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>d});var o=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),g=p(n),m=r,d=g["".concat(l,".").concat(m)]||g[m]||u[m]||i;return n?o.createElement(d,a(a({ref:t},s),{},{components:n})):o.createElement(d,a({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[g]="string"==typeof e?e:r,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},741:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>p,default:()=>f,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var o=n(58168),r=(n(96540),n(15680));const i={toc:[{value:"getTopmostBlock",id:"gettopmostblock",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Example",id:"example",level:3}]},a="wrapper";function c(e){let{components:t,...n}=e;return(0,r.yg)(a,(0,o.A)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"gettopmostblock"},"getTopmostBlock"),(0,r.yg)("admonition",{title:"Warning",type:"warn"},(0,r.yg)("p",{parentName:"admonition"},"The content on this page has not undergone rigorous testing and is presently intended solely for trialing the website's new feature: Piston Box.\nPlease exercise caution when referencing this information.")),(0,r.yg)("p",null,"The new method ",(0,r.yg)("inlineCode",{parentName:"p"},"getTopmostBlock")," is designed to facilitate obtaining the highest block at a given (x, z) coordinate position."),(0,r.yg)("h3",{id:"syntax"},"Syntax"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"getTopmostBlock(locationXZ: VectorXZ, minHeight?: number): Block | undefined;\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"locationXZ"),"\uff1a An instance object conforming to the VectorXZ interface pattern, comprising two properties: x and z."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"minHeight"),"\uff1a An optional parameter representing the minimum height, with a default value of the minimum height of the world.")),(0,r.yg)("p",null,"Returns an instance object of ",(0,r.yg)("a",{parentName:"p",href:"/docs/sapi/preview/server/classes/Block"},"Block"),", representing the highest point block. If no such highest block exists, returns ",(0,r.yg)("inlineCode",{parentName:"p"},"undefined"),"."),(0,r.yg)("h3",{id:"example"},"Example"),(0,r.yg)("p",null,"When a player interacts with a block, this function retrieves the highest point block at the block's (x, z) position."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},'import {MinecraftDimensionTypes, VectorXZ, world} from "@minecraft/server"\nconst overworld = world.getDimension(MinecraftDimensionTypes.overworld);\n\n// Subscribe events of player-block interactions in the game.\nworld.afterEvents.playerInteractWithBlock.subscribe(({block}) => {\n  // Obtain the (x, z) position of the player\'s interacting block, and store it as a new VectorXZ type\n  const location: VectorXZ = {x: block.x, y: block.y};\n  // Get the highest point block at the (x, z) position\n  const topmostBlock = overworld.getTopmostBlock(location);\n  // Output the information of the highest point block\n  console.warn(`The topmost block at (${location.x}, ${location.y}) is "${topmostBlock.typeId}"`);\n});\n')))}c.isMDXComponent=!0;const l={},p=void 0,s={unversionedId:"changelog_source/preview/1.21/0/24/tech_sapi_exp",id:"changelog_source/preview/1.21/0/24/tech_sapi_exp",title:"tech_sapi_exp",description:"-   Fixed issue where block with custom components could not have a block placed onto them without crouching",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/changelog_source/preview/1.21/0/24/tech_sapi_exp.mdx",sourceDirName:"changelog_source/preview/1.21/0/24",slug:"/changelog_source/preview/1.21/0/24/tech_sapi_exp",permalink:"/en/docs/changelog_source/preview/1.21/0/24/tech_sapi_exp",draft:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.21/0/24/tech_sapi_exp.mdx",tags:[],version:"current",frontMatter:{}},g={},u=[],m=(d="PistonToggle",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.yg)("div",e)});var d;const h={toc:u},y="wrapper";function f(e){let{components:t,...n}=e;return(0,r.yg)(y,(0,o.A)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Fixed issue where block with custom components could not have a block placed onto them without crouching"),(0,r.yg)("li",{parentName:"ul"},"Added new interface ",(0,r.yg)("inlineCode",{parentName:"li"},"VectorXZ")),(0,r.yg)("li",{parentName:"ul"},"Added method ",(0,r.yg)(m,{content:(0,r.yg)(c,{mdxType:"GetTopmostBlock"}),mdxType:"PistonToggle"})," ",(0,r.yg)("inlineCode",{parentName:"li"},"getTopmostBlock")," which will perform a raycast from the top of the world downwards, trying to find the first solid block"),(0,r.yg)("li",{parentName:"ul"},"Added method ",(0,r.yg)("inlineCode",{parentName:"li"},"getBlockAbove")," which will perform a raycast from a given position, trying to find the first solid block above"),(0,r.yg)("li",{parentName:"ul"},"Added method ",(0,r.yg)("inlineCode",{parentName:"li"},"getBlockBelow")," which will perform a raycast from a given position, trying to find the first solid block below")))}f.isMDXComponent=!0}}]);