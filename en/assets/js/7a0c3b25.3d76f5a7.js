"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[73488],{15680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>y});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),g=p(r),c=a,y=g["".concat(s,".").concat(c)]||g[c]||d[c]||l;return r?n.createElement(y,i(i({ref:t},u),{},{components:r})):n.createElement(y,i({ref:t},u))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[g]="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},91085:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=r(58168),a=(r(96540),r(15680));const l={id:"Structure",title:"Class: Structure",sidebar_label:"Structure",sidebar_position:0,custom_edit_url:null},i=void 0,o={unversionedId:"sapi/preview/server/classes/Structure",id:"sapi/preview/server/classes/Structure",title:"Class: Structure",description:"Represents a loaded structure template (.mcstructure file).",source:"@site/docs/sapi/preview/server/classes/Structure.md",sourceDirName:"sapi/preview/server/classes",slug:"/sapi/preview/server/classes/Structure",permalink:"/en/docs/sapi/preview/server/classes/Structure",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"Structure",title:"Class: Structure",sidebar_label:"Structure",sidebar_position:0,custom_edit_url:null},sidebar:"sapiPreviewSidebar",previous:{title:"ServerMessageAfterEventSignal",permalink:"/en/docs/sapi/preview/server/classes/ServerMessageAfterEventSignal"},next:{title:"StructureManager",permalink:"/en/docs/sapi/preview/server/classes/StructureManager"}},s={},p=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Properties",id:"properties",level:2},{value:"id",id:"id",level:3},{value:"size",id:"size",level:3},{value:"Methods",id:"methods",level:2},{value:"getBlockPermutation",id:"getblockpermutation",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"getIsWaterlogged",id:"getiswaterlogged",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"isValid",id:"isvalid",level:3},{value:"Returns",id:"returns-2",level:4},{value:"saveAs",id:"saveas",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"saveToWorld",id:"savetoworld",level:3},{value:"Returns",id:"returns-4",level:4},{value:"setBlockPermutation",id:"setblockpermutation",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-5",level:4}],u={toc:p},g="wrapper";function d(e){let{components:t,...r}=e;return(0,a.yg)(g,(0,n.A)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Represents a loaded structure template (.mcstructure file).\nStructures can be placed in a world using the /structure\ncommand or the ",(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/classes/StructureManager"},"StructureManager")," APIs."),(0,a.yg)("h2",{id:"constructors"},"Constructors"),(0,a.yg)("h3",{id:"constructor"},"constructor"),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("inlineCode",{parentName:"p"},"Private")," ",(0,a.yg)("strong",{parentName:"p"},"new Structure"),"()"),(0,a.yg)("h2",{id:"properties"},"Properties"),(0,a.yg)("h3",{id:"id"},"id"),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.yg)("strong",{parentName:"p"},"id"),": ",(0,a.yg)("inlineCode",{parentName:"p"},"string")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,'The name of the structure. The identifier must include a\nnamespace. For structures created via the /structure command\nor structure blocks, this namespace defaults to\n"mystructure".'),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"size"},"size"),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.yg)("strong",{parentName:"p"},"size"),": ",(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/Vector3"},(0,a.yg)("inlineCode",{parentName:"a"},"Vector3"))),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"The dimensions of the structure. For example, a single block\nstructure will have a size of {x:1, y:1, z:1}"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,a.yg)("p",null,"This property can throw when used."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/classes/InvalidStructureError"},"InvalidStructureError")),(0,a.yg)("h2",{id:"methods"},"Methods"),(0,a.yg)("h3",{id:"getblockpermutation"},"getBlockPermutation"),(0,a.yg)("p",null,"\u25b8 ",(0,a.yg)("strong",{parentName:"p"},"getBlockPermutation"),"(",(0,a.yg)("inlineCode",{parentName:"p"},"location"),"): ",(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/classes/BlockPermutation"},(0,a.yg)("inlineCode",{parentName:"a"},"BlockPermutation"))),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Returns a BlockPermutation representing the block contained\nwithin the Structure at the given location."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,a.yg)("p",null,"Throws if the location is outside the structure's bounds.\nThrows if the Structure has been deleted."),(0,a.yg)("p",null,"minecraftcommon.InvalidArgumentError"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/classes/InvalidStructureError"},"InvalidStructureError")),(0,a.yg)("h4",{id:"parameters"},"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"location")),(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("a",{parentName:"td",href:"/en/docs/sapi/preview/server/interfaces/Vector3"},(0,a.yg)("inlineCode",{parentName:"a"},"Vector3"))),(0,a.yg)("td",{parentName:"tr",align:"left"},"The block location relative to the Structure's origin.")))),(0,a.yg)("h4",{id:"returns"},"Returns"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/classes/BlockPermutation"},(0,a.yg)("inlineCode",{parentName:"a"},"BlockPermutation"))),(0,a.yg)("p",null,"Returns a BlockPermutation. Returns undefined if a block\ndoes not exist at the given location."),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"getiswaterlogged"},"getIsWaterlogged"),(0,a.yg)("p",null,"\u25b8 ",(0,a.yg)("strong",{parentName:"p"},"getIsWaterlogged"),"(",(0,a.yg)("inlineCode",{parentName:"p"},"location"),"): ",(0,a.yg)("inlineCode",{parentName:"p"},"boolean")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Returns whether the block at the given location is\nwaterlogged."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,a.yg)("p",null,"Throws if the location is outside the structure's bounds.\nThrows if the Structure has been deleted."),(0,a.yg)("p",null,"minecraftcommon.InvalidArgumentError"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/classes/InvalidStructureError"},"InvalidStructureError")),(0,a.yg)("h4",{id:"parameters-1"},"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"location")),(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("a",{parentName:"td",href:"/en/docs/sapi/preview/server/interfaces/Vector3"},(0,a.yg)("inlineCode",{parentName:"a"},"Vector3"))),(0,a.yg)("td",{parentName:"tr",align:"left"},"The block location relative to the Structure's origin.")))),(0,a.yg)("h4",{id:"returns-1"},"Returns"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"boolean")),(0,a.yg)("p",null,"Returns whether the block at the given location is\nwaterlogged. Returns false if a block does not exist at the\ngiven location."),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"isvalid"},"isValid"),(0,a.yg)("p",null,"\u25b8 ",(0,a.yg)("strong",{parentName:"p"},"isValid"),"(): ",(0,a.yg)("inlineCode",{parentName:"p"},"boolean")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Returns whether the Structure is valid. The Structure may\nbecome invalid if it is deleted."),(0,a.yg)("h4",{id:"returns-2"},"Returns"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"boolean")),(0,a.yg)("p",null,"Returns whether the Structure is valid."),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"saveas"},"saveAs"),(0,a.yg)("p",null,"\u25b8 ",(0,a.yg)("strong",{parentName:"p"},"saveAs"),"(",(0,a.yg)("inlineCode",{parentName:"p"},"identifier"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"saveMode?"),"): ",(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/classes/Structure"},(0,a.yg)("inlineCode",{parentName:"a"},"Structure"))),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Creates a copy of a Structure and saves it with a new name."),(0,a.yg)("p",null,"This function can't be called in read-only mode."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,a.yg)("p",null,"Throws if the identifier is invalid. A valid identifier must\ninclude a namespace and must be unique.\nThrows if the Structure has been deleted."),(0,a.yg)("p",null,"minecraftcommon.EngineError"),(0,a.yg)("p",null,"minecraftcommon.InvalidArgumentError"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/classes/InvalidStructureError"},"InvalidStructureError")),(0,a.yg)("h4",{id:"parameters-2"},"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"identifier")),(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:"left"},"The name of the newly created Structure.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"saveMode?")),(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("a",{parentName:"td",href:"/en/docs/sapi/preview/server/enums/StructureSaveMode"},(0,a.yg)("inlineCode",{parentName:"a"},"StructureSaveMode"))),(0,a.yg)("td",{parentName:"tr",align:"left"},"Determines how the Structure should be saved. Defaults to saving to the world.")))),(0,a.yg)("h4",{id:"returns-3"},"Returns"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/classes/Structure"},(0,a.yg)("inlineCode",{parentName:"a"},"Structure"))),(0,a.yg)("p",null,"Returns the newly created structure."),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"savetoworld"},"saveToWorld"),(0,a.yg)("p",null,"\u25b8 ",(0,a.yg)("strong",{parentName:"p"},"saveToWorld"),"(): ",(0,a.yg)("inlineCode",{parentName:"p"},"void")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Saves a modified Structure to the world file."),(0,a.yg)("p",null,"This function can't be called in read-only mode."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,a.yg)("p",null,"Throws if the Structure has been deleted."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/classes/InvalidStructureError"},"InvalidStructureError")),(0,a.yg)("h4",{id:"returns-4"},"Returns"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"void")),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"setblockpermutation"},"setBlockPermutation"),(0,a.yg)("p",null,"\u25b8 ",(0,a.yg)("strong",{parentName:"p"},"setBlockPermutation"),"(",(0,a.yg)("inlineCode",{parentName:"p"},"location"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"blockPermutation?"),"): ",(0,a.yg)("inlineCode",{parentName:"p"},"void")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Sets a BlockPermutation within a Structure."),(0,a.yg)("p",null,"This function can't be called in read-only mode."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,a.yg)("p",null,"Throws if the type of block is StructureVoid.\nThrows if the block is undefined and waterlogged is set to\ntrue.\nThrows if the block is air and waterlogged is set to true.\nThrows if the location is outside the structure's bounds.\nThrows if the Structure has been deleted."),(0,a.yg)("p",null,"minecraftcommon.InvalidArgumentError"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/classes/InvalidStructureError"},"InvalidStructureError")),(0,a.yg)("h4",{id:"parameters-3"},"Parameters"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"location")),(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("a",{parentName:"td",href:"/en/docs/sapi/preview/server/interfaces/Vector3"},(0,a.yg)("inlineCode",{parentName:"a"},"Vector3"))),(0,a.yg)("td",{parentName:"tr",align:"left"},"The block location relative to the Structure's origin.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("inlineCode",{parentName:"td"},"blockPermutation?")),(0,a.yg)("td",{parentName:"tr",align:"left"},(0,a.yg)("a",{parentName:"td",href:"/en/docs/sapi/preview/server/classes/BlockPermutation"},(0,a.yg)("inlineCode",{parentName:"a"},"BlockPermutation"))),(0,a.yg)("td",{parentName:"tr",align:"left"},"The BlockPermutation to set.")))),(0,a.yg)("h4",{id:"returns-5"},"Returns"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"void")))}d.isMDXComponent=!0}}]);