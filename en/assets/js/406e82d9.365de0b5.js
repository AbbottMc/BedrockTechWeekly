"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[22263],{88710:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>h,toc:()=>d});var n=t(74848),i=t(28453);function c(e){const o={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h2,{id:"gettopmostblock",children:"getTopmostBlock"}),"\n",(0,n.jsx)(o.admonition,{title:"Warning",type:"warning",children:(0,n.jsx)(o.p,{children:"The content on this page has not undergone rigorous testing and is presently intended solely for trialing the website's new feature: Piston Box.\nPlease exercise caution when referencing this information."})}),"\n",(0,n.jsxs)(o.p,{children:["The new method ",(0,n.jsx)(o.code,{children:"getTopmostBlock"})," is designed to facilitate obtaining the highest block at a given (x, z) coordinate position."]}),"\n",(0,n.jsx)(o.h3,{id:"syntax",children:"Syntax"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-typescript",children:"getTopmostBlock(locationXZ: VectorXZ, minHeight?: number): Block | undefined;\n"})}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"locationXZ"}),"\uff1a An instance object conforming to the VectorXZ interface pattern, comprising two properties: x and z."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"minHeight"}),"\uff1a An optional parameter representing the minimum height, with a default value of the minimum height of the world."]}),"\n"]}),"\n",(0,n.jsxs)(o.p,{children:["Returns an instance object of ",(0,n.jsx)(o.a,{href:"/docs/sapi/preview/server/classes/Block",children:"Block"}),", representing the highest point block. If no such highest block exists, returns ",(0,n.jsx)(o.code,{children:"undefined"}),"."]}),"\n",(0,n.jsx)(o.h3,{id:"example",children:"Example"}),"\n",(0,n.jsx)(o.p,{children:"When a player interacts with a block, this function retrieves the highest point block at the block's (x, z) position."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-typescript",children:'import {MinecraftDimensionTypes, VectorXZ, world} from "@minecraft/server"\nconst overworld = world.getDimension(MinecraftDimensionTypes.overworld);\n\n// Subscribe events of player-block interactions in the game.\nworld.afterEvents.playerInteractWithBlock.subscribe(({block}) => {\n  // Obtain the (x, z) position of the player\'s interacting block, and store it as a new VectorXZ type\n  const location: VectorXZ = {x: block.x, y: block.y};\n  // Get the highest point block at the (x, z) position\n  const topmostBlock = overworld.getTopmostBlock(location);\n  // Output the information of the highest point block\n  console.warn(`The topmost block at (${location.x}, ${location.y}) is "${topmostBlock.typeId}"`);\n});\n'})})]})}function r(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}const s={},l=void 0,h={id:"changelog_source/preview/1.21/0/24/tech_sapi_exp",title:"tech_sapi_exp",description:"-   Fixed issue where block with custom components could not have a block placed onto them without crouching",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/changelog_source/preview/1.21/0/24/tech_sapi_exp.mdx",sourceDirName:"changelog_source/preview/1.21/0/24",slug:"/changelog_source/preview/1.21/0/24/tech_sapi_exp",permalink:"/en/docs/changelog_source/preview/1.21/0/24/tech_sapi_exp",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.21/0/24/tech_sapi_exp.mdx",tags:[],version:"current",frontMatter:{}},a={},d=[];function p(e){const o={code:"code",li:"li",ul:"ul",...(0,i.R)(),...e.components},{PistonToggle:t}=o;return t||function(e,o){throw new Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("PistonToggle",!0),(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"Fixed issue where block with custom components could not have a block placed onto them without crouching"}),"\n",(0,n.jsxs)(o.li,{children:["Added new interface ",(0,n.jsx)(o.code,{children:"VectorXZ"})]}),"\n",(0,n.jsxs)(o.li,{children:["Added method ",(0,n.jsx)(t,{content:(0,n.jsx)(r,{})})," ",(0,n.jsx)(o.code,{children:"getTopmostBlock"})," which will perform a raycast from the top of the world downwards, trying to find the first solid block"]}),"\n",(0,n.jsxs)(o.li,{children:["Added method ",(0,n.jsx)(o.code,{children:"getBlockAbove"})," which will perform a raycast from a given position, trying to find the first solid block above"]}),"\n",(0,n.jsxs)(o.li,{children:["Added method ",(0,n.jsx)(o.code,{children:"getBlockBelow"})," which will perform a raycast from a given position, trying to find the first solid block below"]}),"\n"]})}function u(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>r,x:()=>s});var n=t(96540);const i={},c=n.createContext(i);function r(e){const o=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function s(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(c.Provider,{value:o},e.children)}}}]);