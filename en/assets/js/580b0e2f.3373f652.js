"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[18227],{17526:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var n=t(74848),i=t(28453);const r={},c=void 0,o={id:"changelog_source/preview/1.21/60/25/tech_sapi_stable",title:"tech_sapi_stable",description:"-   Added script bindings to beta for the experimental Aim-Assist feature.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/changelog_source/preview/1.21/60/25/tech_sapi_stable.md",sourceDirName:"changelog_source/preview/1.21/60/25",slug:"/changelog_source/preview/1.21/60/25/tech_sapi_stable",permalink:"/en/docs/changelog_source/preview/1.21/60/25/tech_sapi_stable",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.21/60/25/tech_sapi_stable.md",tags:[],version:"current",frontMatter:{}},d={},l=[];function a(e){const s={code:"code",li:"li",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Added script bindings to ",(0,n.jsx)(s.code,{children:"beta"})," for the experimental Aim-Assist feature.\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.code,{children:"class AimAssistCategory"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.code,{children:"class AimAssistCategorySettings"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.code,{children:"class AimAssistPreset"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.code,{children:"class AimAssistPresetSettings"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.code,{children:"class AimAssistRegistry"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.code,{children:"enum AimAssistTargetMode"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.code,{children:"interface PlayerAimAssistSettings"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.code,{children:"class PlayerAimAssist"})}),"\n",(0,n.jsx)(s.li,{children:"method Player.getAimAssist to modify a player's aim-assist settings"}),"\n",(0,n.jsx)(s.li,{children:"method World.getAimAssist to add aim-assist presets and categories."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["Added enum ",(0,n.jsx)(s.code,{children:"InvalidArgumentErrorType"})," that adds extra context to the type of invalid argument error.\xa0"]}),"\n",(0,n.jsxs)(s.li,{children:["Added property ",(0,n.jsx)(s.code,{children:"type"})," to ",(0,n.jsx)(s.code,{children:"InvalidArgumentError"})," for checking the type of argument error.\xa0"]}),"\n"]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>c,x:()=>o});var n=t(96540);const i={},r=n.createContext(i);function c(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);