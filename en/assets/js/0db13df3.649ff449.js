"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[47288],{15680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>u});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},g=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,g=i(e,["components","mdxType","originalType","parentName"]),c=p(t),y=a,u=c["".concat(l,".").concat(y)]||c[y]||m[y]||s;return t?r.createElement(u,o(o({ref:n},g),{},{components:t})):r.createElement(u,o({ref:n},g))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=y;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<s;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},19116:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var r=t(58168),a=(t(96540),t(15680));const s={id:"RawMessage",title:"Interface: RawMessage",sidebar_label:"RawMessage",sidebar_position:0,custom_edit_url:null},o=void 0,i={unversionedId:"sapi/stable/server/interfaces/RawMessage",id:"sapi/stable/server/interfaces/RawMessage",title:"Interface: RawMessage",description:"Defines a JSON structure that is used for more flexible.",source:"@site/docs/sapi/stable/server/interfaces/RawMessage.md",sourceDirName:"sapi/stable/server/interfaces",slug:"/sapi/stable/server/interfaces/RawMessage",permalink:"/en/docs/sapi/stable/server/interfaces/RawMessage",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"RawMessage",title:"Interface: RawMessage",sidebar_label:"RawMessage",sidebar_position:0,custom_edit_url:null},sidebar:"sapiStableSidebar",previous:{title:"RangeComparison",permalink:"/en/docs/sapi/stable/server/interfaces/RangeComparison"},next:{title:"RawMessageScore",permalink:"/en/docs/sapi/stable/server/interfaces/RawMessageScore"}},l={},p=[{value:"Properties",id:"properties",level:2},{value:"rawtext",id:"rawtext",level:3},{value:"score",id:"score",level:3},{value:"text",id:"text",level:3},{value:"translate",id:"translate",level:3},{value:"with",id:"with",level:3}],g={toc:p},c="wrapper";function m(e){let{components:n,...t}=e;return(0,a.yg)(c,(0,r.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Defines a JSON structure that is used for more flexible."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,a.yg)("p",null,"addTranslatedSign.ts"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"import { DimensionLocation, world, BlockPermutation, BlockComponentTypes } from '@minecraft/server';\n\nfunction placeTranslatedSign(location: DimensionLocation, text: string) {\n    const signBlock = location.dimension.getBlock(location);\n\n    if (!signBlock) {\n        console.warn('Could not find a block at specified location.');\n        return;\n    }\n    const signPerm = BlockPermutation.resolve('minecraft:standing_sign', { ground_sign_direction: 8 });\n    signBlock.setPermutation(signPerm);\n\n    const signComponent = signBlock.getComponent(BlockComponentTypes.Sign);\n    if (signComponent) {\n        signComponent.setText({ translate: 'item.skull.player.name', with: [text] });\n    } else {\n        console.error('Could not find a sign component on the block.');\n    }\n}\n\nplaceTranslatedSign(\n    {\n        dimension: world.getDimension('overworld'),\n        x: 0,\n        y: 0,\n        z: 0,\n    },\n    'Steve',\n);\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,a.yg)("p",null,"showTranslatedMessageForm.ts"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"import { world, Player } from '@minecraft/server';\nimport { MessageFormData, MessageFormResponse } from '@minecraft/server-ui';\n\nfunction showMessage(player: Player) {\n    const messageForm = new MessageFormData()\n        .title({ translate: 'permissions.removeplayer' })\n        .body({ translate: 'accessibility.list.or.two', with: ['Player 1', 'Player 2'] })\n        .button1('Player 1')\n        .button2('Player 2');\n\n    messageForm\n        .show(player)\n        .then((formData: MessageFormResponse) => {\n            // player canceled the form, or another dialog was up and open.\n            if (formData.canceled || formData.selection === undefined) {\n                return;\n            }\n\n            console.warn(`You selected ${formData.selection === 0 ? 'Player 1' : 'Player 2'}`);\n        })\n        .catch((error: Error) => {\n            console.warn('Failed to show form: ' + error);\n        });\n};\n\nshowMessage(world.getAllPlayers()[0]);\n")),(0,a.yg)("h2",{id:"properties"},"Properties"),(0,a.yg)("h3",{id:"rawtext"},"rawtext"),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.yg)("strong",{parentName:"p"},"rawtext"),": ",(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/RawMessage"},(0,a.yg)("inlineCode",{parentName:"a"},"RawMessage")),"[]"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Provides a raw-text equivalent of the current message."),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"score"},"score"),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.yg)("strong",{parentName:"p"},"score"),": ",(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/RawMessageScore"},(0,a.yg)("inlineCode",{parentName:"a"},"RawMessageScore"))),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Provides a token that will get replaced with the value of a\nscore."),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"text"},"text"),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.yg)("strong",{parentName:"p"},"text"),": ",(0,a.yg)("inlineCode",{parentName:"p"},"string")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Provides a string literal value to use."),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"translate"},"translate"),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.yg)("strong",{parentName:"p"},"translate"),": ",(0,a.yg)("inlineCode",{parentName:"p"},"string")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Provides a translation token where, if the client has an\navailable resource in the players' language which matches\nthe token, will get translated on the client."),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"with"},"with"),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.yg)("strong",{parentName:"p"},"with"),": ",(0,a.yg)("inlineCode",{parentName:"p"},"string"),"[] ","|"," ",(0,a.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/interfaces/RawMessage"},(0,a.yg)("inlineCode",{parentName:"a"},"RawMessage"))),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},(0,a.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,a.yg)("p",null,"Arguments for the translation token. Can be either an array\nof strings or RawMessage containing an array of raw text\nobjects."))}m.isMDXComponent=!0}}]);