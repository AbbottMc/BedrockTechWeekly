"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[45084],{15680:(e,n,t)=>{t.d(n,{xA:()=>y,yg:()=>u});var r=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},y=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,y=p(e,["components","mdxType","originalType","parentName"]),m=s(t),d=i,u=m["".concat(l,".").concat(d)]||m[d]||g[d]||a;return t?r.createElement(u,o(o({ref:n},y),{},{components:t})):r.createElement(u,o({ref:n},y))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[m]="string"==typeof e?e:i,o[1]=p;for(var s=2;s<a;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},38707:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=t(58168),i=(t(96540),t(15680));const a={id:"EntityQueryOptions",title:"Interface: EntityQueryOptions",sidebar_label:"EntityQueryOptions",sidebar_position:0,custom_edit_url:null},o=void 0,p={unversionedId:"sapi/preview/server/interfaces/EntityQueryOptions",id:"sapi/preview/server/interfaces/EntityQueryOptions",title:"Interface: EntityQueryOptions",description:"Contains options for selecting entities within an area.",source:"@site/docs/sapi/preview/server/interfaces/EntityQueryOptions.md",sourceDirName:"sapi/preview/server/interfaces",slug:"/sapi/preview/server/interfaces/EntityQueryOptions",permalink:"/en/docs/sapi/preview/server/interfaces/EntityQueryOptions",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"EntityQueryOptions",title:"Interface: EntityQueryOptions",sidebar_label:"EntityQueryOptions",sidebar_position:0,custom_edit_url:null},sidebar:"sapiPreviewSidebar",previous:{title:"EntityHitInformation",permalink:"/en/docs/sapi/preview/server/interfaces/EntityHitInformation"},next:{title:"EntityQueryPropertyOptions",permalink:"/en/docs/sapi/preview/server/interfaces/EntityQueryPropertyOptions"}},l={},s=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"closest",id:"closest",level:3},{value:"excludeFamilies",id:"excludefamilies",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"excludeGameModes",id:"excludegamemodes",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"excludeNames",id:"excludenames",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"excludeTags",id:"excludetags",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"excludeTypes",id:"excludetypes",level:3},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"families",id:"families",level:3},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"farthest",id:"farthest",level:3},{value:"gameMode",id:"gamemode",level:3},{value:"Inherited from",id:"inherited-from-6",level:4},{value:"location",id:"location",level:3},{value:"maxDistance",id:"maxdistance",level:3},{value:"maxHorizontalRotation",id:"maxhorizontalrotation",level:3},{value:"Inherited from",id:"inherited-from-7",level:4},{value:"maxLevel",id:"maxlevel",level:3},{value:"Inherited from",id:"inherited-from-8",level:4},{value:"maxVerticalRotation",id:"maxverticalrotation",level:3},{value:"Inherited from",id:"inherited-from-9",level:4},{value:"minDistance",id:"mindistance",level:3},{value:"minHorizontalRotation",id:"minhorizontalrotation",level:3},{value:"Inherited from",id:"inherited-from-10",level:4},{value:"minLevel",id:"minlevel",level:3},{value:"Inherited from",id:"inherited-from-11",level:4},{value:"minVerticalRotation",id:"minverticalrotation",level:3},{value:"Inherited from",id:"inherited-from-12",level:4},{value:"name",id:"name",level:3},{value:"Inherited from",id:"inherited-from-13",level:4},{value:"propertyOptions",id:"propertyoptions",level:3},{value:"Inherited from",id:"inherited-from-14",level:4},{value:"scoreOptions",id:"scoreoptions",level:3},{value:"Inherited from",id:"inherited-from-15",level:4},{value:"tags",id:"tags",level:3},{value:"Inherited from",id:"inherited-from-16",level:4},{value:"type",id:"type",level:3},{value:"Inherited from",id:"inherited-from-17",level:4},{value:"volume",id:"volume",level:3}],y={toc:s},m="wrapper";function g(e){let{components:n,...t}=e;return(0,i.yg)(m,(0,r.A)({},y,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"Contains options for selecting entities within an area."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,i.yg)("p",null,"testBlockConditional.ts"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"import { Dimension } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[type=fox] positioned as @s if block ^ ^-1 ^ stone run summon salmon\n\n// Equivalent scripting code would be:\nfunction spawnFish(dimension: Dimension) {\n    dimension\n        .getEntities({\n            type: 'fox',\n        })\n        .filter(entity => {\n            const block = dimension.getBlock({\n                x: entity.location.x,\n                y: entity.location.y - 1,\n                z: entity.location.z,\n            });\n\n            return block !== undefined && block.matches('minecraft:stone');\n        })\n        .forEach(entity => {\n            dimension.spawnEntity('salmon', entity.location);\n        });\n}\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,i.yg)("p",null,"testPlaySoundChained.ts"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"import { Dimension } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[type=armor_stand,name=myArmorStand,tag=dummyTag1,tag=!dummyTag2] run playsound raid.horn @a\n\n// Equivalent scripting code would be:\nfunction playSounds(dimension: Dimension) {\n    const targetPlayers = dimension.getPlayers();\n    const originEntities = dimension.getEntities({\n        type: 'armor_stand',\n        name: 'myArmorStand',\n        tags: ['dummyTag1'],\n        excludeTags: ['dummyTag2'],\n    });\n\n    originEntities.forEach(entity => {\n        targetPlayers.forEach(player => {\n            player.playSound('raid.horn');\n        });\n    });\n}\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,i.yg)("p",null,"testPropertyOptionsWithEqualsComparison.ts"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"import { world, EntityQueryOptions } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[has_property={propId=propValue}]\n\n// Equivalent scripting code would be:\nfunction findEntitiesHavingPropertyEqualsTo(propId: string, propValue: boolean | number | string) {\n    const queryOption: EntityQueryOptions = {\n        propertyOptions: [{ propertyId: propId, value: { equals: propValue } }]\n    };\n\n    const overworld = world.getDimension('overworld');\n    const entities = overworld.getEntities(queryOption);\n}\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,i.yg)("p",null,"testPropertyOptionsWithGreaterThanComparison.ts"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"import { world, EntityQueryOptions } from '@minecraft/server';\n\n// No equivalent commands as `propValue..` is inclusive in commands\n\nfunction findEntitiesHavingPropertyGreaterThan(propId: string, propValue: number) {\n    const queryOption: EntityQueryOptions = {\n        propertyOptions: [{ propertyId: propId, value: { greaterThan: propValue } }]\n    };\n\n    const overworld = world.getDimension('overworld');\n    const entities = overworld.getEntities(queryOption);\n}\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,i.yg)("p",null,"testPropertyOptionsWithGreaterThanOrEqualsComparison.ts"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"import { world, EntityQueryOptions } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[has_property={propId=propValue..}]\n\n// Equivalent scripting code would be:\nfunction findEntitiesHavingPropertyGreaterThanOrEqualsTo(propId: string, propValue: number) {\n    const queryOption: EntityQueryOptions = {\n        propertyOptions: [{ propertyId: propId, value: { greaterThanOrEquals: propValue } }]\n    };\n\n    const overworld = world.getDimension('overworld');\n    const entities = overworld.getEntities(queryOption);\n}\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,i.yg)("p",null,"testPropertyOptionsWithHavingAProperty.ts"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"import { world, EntityQueryOptions } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[has_property={property=propId}]\n\n// Equivalent scripting code would be:\nfunction findEntitiesHavingAProperty(propId: string) {\n    const queryOption: EntityQueryOptions = {\n        propertyOptions: [{ propertyId: propId }]\n    };\n\n    const overworld = world.getDimension('overworld');\n    const entities = overworld.getEntities(queryOption);\n}\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,i.yg)("p",null,"testPropertyOptionsWithLessThanComparison.ts"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"import { world, EntityQueryOptions } from '@minecraft/server';\n\n// No equivalent commands as `..propValue` is inclusive in commands\n\nfunction findEntitiesHavingPropertyLessThan(propId: string, propValue: number) {\n    const queryOption: EntityQueryOptions = {\n        propertyOptions: [{ propertyId: propId, value: { lessThan: propValue } }]\n    };\n\n    const overworld = world.getDimension('overworld');\n    const entities = overworld.getEntities(queryOption);\n}\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,i.yg)("p",null,"testPropertyOptionsWithLessThanOrEqualsComparison.ts"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"import { world, EntityQueryOptions } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[has_property={propId=..propValue}]\n\n// Equivalent scripting code would be:\nfunction findEntitiesHavingPropertyLessThanOrEqualsTo(propId: string, propValue: number) {\n    const queryOption: EntityQueryOptions = {\n        propertyOptions: [{ propertyId: propId, value: { lessThanOrEquals: propValue } }]\n    };\n\n    const overworld = world.getDimension('overworld');\n    const entities = overworld.getEntities(queryOption);\n}\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,i.yg)("p",null,"testPropertyOptionsWithNotEqualsComparison.ts"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"import { world, EntityQueryOptions } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[has_property={propId=!propValue}]\n\n// Equivalent scripting code would be:\nfunction findEntitiesHavingPropertyNotEqualsTo(propId: string, propValue: boolean | number | string) {\n    const queryOption: EntityQueryOptions = {\n        propertyOptions: [{ propertyId: propId, value: { notEquals: propValue } }]\n    };\n\n    const overworld = world.getDimension('overworld');\n    const entities = overworld.getEntities(queryOption);\n}\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,i.yg)("p",null,"testPropertyOptionsWithNotHavingAProperty.ts"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"import { world, EntityQueryOptions } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[has_property={property=!propId}]\n\n// Equivalent scripting code would be:\nfunction findEntitiesNotHavingAProperty(propId: string) {\n    const queryOption: EntityQueryOptions = {\n        propertyOptions: [{ propertyId: propId, exclude: true }]\n    };\n\n    const overworld = world.getDimension('overworld');\n    const entities = overworld.getEntities(queryOption);\n}\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,i.yg)("p",null,"testPropertyOptionsWithRangeComparison.ts"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"import { world, EntityQueryOptions } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[has_property={propId=lowerBoundValue..upperBoundValue}]\n\n// Equivalent scripting code would be:\nfunction findEntitiesHavingPropertyWithinRange(propId: string, lowerBoundValue: number, upperBoundValue: number) {\n    const queryOption: EntityQueryOptions = {\n        propertyOptions: [{ propertyId: propId, value: { lowerBound: lowerBoundValue, upperBound: upperBoundValue } }]\n    };\n\n    const overworld = world.getDimension('overworld');\n    const entities = overworld.getEntities(queryOption);\n}\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,i.yg)("p",null,"testSendMessageAllPlayers.ts"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"import { Dimension } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[type=armor_stand,name=myArmorStand,tag=dummyTag1,tag=!dummyTag2] run tellraw @a { \"rawtext\": [{\"translate\": \"hello.world\" }] }\n\n// Equivalent scripting code would be:\nfunction sendMessagesToPlayers(dimension: Dimension) {\n    const targetPlayers = dimension.getPlayers();\n    const originEntities = dimension.getEntities({\n        type: 'armor_stand',\n        name: 'myArmorStand',\n        tags: ['dummyTag1'],\n        excludeTags: ['dummyTag2'],\n    });\n\n    originEntities.forEach(entity => {\n        targetPlayers.forEach(player => {\n            player.sendMessage({ rawtext: [{ translate: 'hello.world' }] });\n        });\n    });\n}\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,i.yg)("p",null,"testSetScoreBoardChained.ts"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"import { Dimension, world } from '@minecraft/server';\n\n// Having these commands:\n\n// scoreboard objectives add scoreObjective1 dummy\n// scoreboard players set @e[type=armor_stand,name=myArmorStand] scoreObjective1 -1\n\n// Equivalent scripting code would be:\nfunction setScores(dimension: Dimension) {\n    const objective = world.scoreboard.addObjective('scoreObjective1', 'dummy');\n    dimension\n        .getEntities({\n            type: 'armor_stand',\n            name: 'myArmorStand',\n        })\n        .forEach(entity => {\n            if (entity.scoreboardIdentity !== undefined) {\n                objective.setScore(entity.scoreboardIdentity, -1);\n            }\n        });\n}\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Example"))),(0,i.yg)("p",null,"testSummonMobChained.ts"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"import { Dimension } from '@minecraft/server';\n\n// Having this command:\n\n// execute as @e[type=armor_stand] run execute as @a[x=0,y=-60,z=0,c=4,r=15] run summon pig ~1 ~ ~\n\n// Equivalent scripting code would be:\nfunction spawnPigs(dimension: Dimension) {\n    const armorStandArray = dimension.getEntities({\n        type: 'armor_stand',\n    });\n    const playerArray = dimension.getPlayers({\n        location: { x: 0, y: -60, z: 0 },\n        closest: 4,\n        maxDistance: 15,\n    });\n    armorStandArray.forEach(entity => {\n        playerArray.forEach(player => {\n            dimension.spawnEntity('pig', {\n                x: player.location.x + 1,\n                y: player.location.y,\n                z: player.location.z,\n            });\n        });\n    });\n}\n")),(0,i.yg)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},(0,i.yg)("inlineCode",{parentName:"a"},"EntityFilter"))),(0,i.yg)("p",{parentName:"li"},"\u21b3 ",(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"EntityQueryOptions"))))),(0,i.yg)("h2",{id:"properties"},"Properties"),(0,i.yg)("h3",{id:"closest"},"closest"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"closest"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"number")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"Limits the number of entities to return, opting for the\nclosest N entities as specified by this property. The\nlocation value must also be specified on the query options\nobject."),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"excludefamilies"},"excludeFamilies"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"excludeFamilies"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"string"),"[]"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"Excludes entities that match one or more of the specified\nfamilies."),(0,i.yg)("h4",{id:"inherited-from"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#excludefamilies"},"excludeFamilies")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"excludegamemodes"},"excludeGameModes"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"excludeGameModes"),": ",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/enums/GameMode"},(0,i.yg)("inlineCode",{parentName:"a"},"GameMode")),"[]"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"Excludes entities if have a specific gamemode that matches\nthe specified gamemode."),(0,i.yg)("h4",{id:"inherited-from-1"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#excludegamemodes"},"excludeGameModes")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"excludenames"},"excludeNames"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"excludeNames"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"string"),"[]"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"Excludes entities that have a name that match one of the\nspecified values."),(0,i.yg)("h4",{id:"inherited-from-2"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#excludenames"},"excludeNames")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"excludetags"},"excludeTags"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"excludeTags"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"string"),"[]"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"Excludes entities with a tag that matches one of the\nspecified values."),(0,i.yg)("h4",{id:"inherited-from-3"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#excludetags"},"excludeTags")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"excludetypes"},"excludeTypes"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"excludeTypes"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"string"),"[]"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"Excludes entities if they are one of the specified types."),(0,i.yg)("h4",{id:"inherited-from-4"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#excludetypes"},"excludeTypes")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"families"},"families"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"families"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"string"),"[]"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"If specified, includes entities that match all of the\nspecified families."),(0,i.yg)("h4",{id:"inherited-from-5"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#families"},"families")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"farthest"},"farthest"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"farthest"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"number")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"Limits the number of entities to return, opting for the\nfarthest N entities as specified by this property. The\nlocation value must also be specified on the query options\nobject."),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"gamemode"},"gameMode"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"gameMode"),": ",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/enums/GameMode"},(0,i.yg)("inlineCode",{parentName:"a"},"GameMode"))),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"If specified, includes entities with a gamemode that matches\nthe specified gamemode."),(0,i.yg)("h4",{id:"inherited-from-6"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#gamemode"},"gameMode")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"location"},"location"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"location"),": ",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/Vector3"},(0,i.yg)("inlineCode",{parentName:"a"},"Vector3"))),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"Adds a seed location to the query that is used in\nconjunction with closest, farthest, limit, volume, and\ndistance properties."),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"maxdistance"},"maxDistance"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"maxDistance"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"number")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"If specified, includes entities that are less than this\ndistance away from the location specified in the location\nproperty."),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"maxhorizontalrotation"},"maxHorizontalRotation"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"maxHorizontalRotation"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"number")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"If specified, will only include entities that have at most\nthis horizontal rotation."),(0,i.yg)("h4",{id:"inherited-from-7"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#maxhorizontalrotation"},"maxHorizontalRotation")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"maxlevel"},"maxLevel"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"maxLevel"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"number")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"If defined, only players that have at most this level are\nreturned."),(0,i.yg)("h4",{id:"inherited-from-8"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#maxlevel"},"maxLevel")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"maxverticalrotation"},"maxVerticalRotation"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"maxVerticalRotation"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"number")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"If specified, only entities that have at most this vertical\nrotation are returned."),(0,i.yg)("h4",{id:"inherited-from-9"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#maxverticalrotation"},"maxVerticalRotation")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"mindistance"},"minDistance"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"minDistance"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"number")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"If specified, includes entities that are least this distance\naway from the location specified in the location property."),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"minhorizontalrotation"},"minHorizontalRotation"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"minHorizontalRotation"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"number")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"If specified, will only include entities that have at a\nminimum this horizontal rotation."),(0,i.yg)("h4",{id:"inherited-from-10"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#minhorizontalrotation"},"minHorizontalRotation")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"minlevel"},"minLevel"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"minLevel"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"number")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"If defined, only players that have at least this level are\nreturned."),(0,i.yg)("h4",{id:"inherited-from-11"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#minlevel"},"minLevel")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"minverticalrotation"},"minVerticalRotation"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"minVerticalRotation"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"number")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"If specified, will only include entities that have at least\nthis vertical rotation."),(0,i.yg)("h4",{id:"inherited-from-12"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#minverticalrotation"},"minVerticalRotation")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"name"},"name"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"name"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"string")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"Includes entities with the specified name."),(0,i.yg)("h4",{id:"inherited-from-13"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#name"},"name")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"propertyoptions"},"propertyOptions"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"propertyOptions"),": ",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityQueryPropertyOptions"},(0,i.yg)("inlineCode",{parentName:"a"},"EntityQueryPropertyOptions")),"[]"),(0,i.yg)("h4",{id:"inherited-from-14"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#propertyoptions"},"propertyOptions")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"scoreoptions"},"scoreOptions"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"scoreOptions"),": ",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityQueryScoreOptions"},(0,i.yg)("inlineCode",{parentName:"a"},"EntityQueryScoreOptions")),"[]"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"Gets/sets a collection of EntityQueryScoreOptions objects\nwith filters for specific scoreboard objectives."),(0,i.yg)("h4",{id:"inherited-from-15"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#scoreoptions"},"scoreOptions")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"tags"},"tags"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"tags"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"string"),"[]"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"Includes entities that match all of the specified tags."),(0,i.yg)("h4",{id:"inherited-from-16"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#tags"},"tags")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"type"},"type"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"type"),": ",(0,i.yg)("inlineCode",{parentName:"p"},"string")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"If defined, entities that match this type are included."),(0,i.yg)("h4",{id:"inherited-from-17"},"Inherited from"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter"},"EntityFilter"),".",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/EntityFilter#type"},"type")),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"volume"},"volume"),(0,i.yg)("p",null,"\u2022 ",(0,i.yg)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.yg)("strong",{parentName:"p"},"volume"),": ",(0,i.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server/interfaces/Vector3"},(0,i.yg)("inlineCode",{parentName:"a"},"Vector3"))),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,i.yg)("p",null,"In conjunction with location, specified a cuboid volume of\nentities to include."))}g.isMDXComponent=!0}}]);