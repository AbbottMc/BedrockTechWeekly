"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[35468,81791],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),r=n(86010);const i="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:n},t)}},31792:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(87462),r=n(67294),i=n(86010),o=n(12466),l=n(16550),s=n(91980),c=n(67392),p=n(50012);function u(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=m(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[s,c]=h({queryString:n,groupId:a}),[u,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),f=(()=>{const e=s??u;return d({value:e,tabValues:i})?e:null})();(0,r.useEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),g(e)}),[c,g,i]),tabValues:i}}var f=n(72389);const v="tabList_TRJ7",k="tabItem_hGfb";function b(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:c,rightElement:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:m}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==l&&(m(t),s(a))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>u.push(e),onKeyDown:h,onClick:d},o,{className:(0,i.Z)("tabs__item",k,o?.className,{"tabs__item--active":l===t}),style:{wordBreak:"keep-all"}}),n??t)})),p?r.createElement("div",{className:"w-full"},p):void 0)}function y(e){let{lazy:t,children:n,selectedValue:a}=e;if(t){const e=n.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=g(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",v)},r.createElement(b,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function N(e){const t=(0,f.Z)();return r.createElement(w,(0,a.Z)({key:String(t)},e))}},33150:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));n(9071);const i={},o=void 0,l={unversionedId:"changelog_source/preview/1.18/20/21/tech",id:"changelog_source/preview/1.18/20/21/tech",title:"tech",description:'-   A world with "StorageVersion" 8 or lower will be increased to 9 and have its "RandomSeed" upgraded from using only the lower 32 bits of a 64-bit number to using the full 64-bit range while still representing the same number. This is only relevant for negative 32-bit seeds, which need a sign bit extension',source:"@site/i18n/en/docusaurus-plugin-content-docs/current/changelog_source/preview/1.18/20/21/tech.mdx",sourceDirName:"changelog_source/preview/1.18/20/21",slug:"/changelog_source/preview/1.18/20/21/tech",permalink:"/en/docs/changelog_source/preview/1.18/20/21/tech",draft:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.18/20/21/tech.mdx",tags:[],version:"current",frontMatter:{}},s={},c=[{value:"**Additional Modding Capabilities Experiment/JavaScript APIs",id:"additional-modding-capabilities-experimentjavascript-apis",level:2},{value:"**",id:"",level:2},{value:"<strong>Important!</strong> In this release and starting with this beta, we are removing the Additional Modding Capabilities experiment.\xa0 This experiment contained experimental JavaScript APIs launched in 2018 \u2013 and with this removal, JavaScript within worlds associated with this API will no longer function.\xa0 GameTest Framework \u2013 a separate JavaScript API \u2013 should not be impacted, nor should behavior pack/resource pack type add-ons more broadly. You can read more about this via this article.",id:"important-in-this-release-and-starting-with-this-beta-we-are-removing-the-additional-modding-capabilities-experiment-this-experiment-contained-experimental-javascript-apis-launched-in-2018--and-with-this-removal-javascript-within-worlds-associated-with-this-api-will-no-longer-function-gametest-framework--a-separate-javascript-api--should-not-be-impacted-nor-should-behavior-packresource-pack-type-add-ons-more-broadly-you-can-read-more-about-this-via-this-article",level:2},{value:"\xa0<strong>Commands</strong>",id:"commands",level:2},{value:"<strong>Molang</strong>",id:"molang",level:2},{value:"<strong>User Interface</strong>",id:"user-interface",level:2},{value:"<strong>Commands</strong>",id:"commands-1",level:2},{value:"<strong>GameTest Framework</strong>",id:"gametest-framework",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'A world with "StorageVersion" 8 or lower will be increased to 9 and have its "RandomSeed" upgraded from using only the lower 32 bits of a 64-bit number to using the full 64-bit range while still representing the same number. This is only relevant for negative 32-bit seeds, which need a sign bit extension')),(0,r.kt)("h2",{id:"additional-modding-capabilities-experimentjavascript-apis"},"**Additional Modding Capabilities Experiment/JavaScript APIs"),(0,r.kt)("h2",{id:""},"**"),(0,r.kt)("h2",{id:"important-in-this-release-and-starting-with-this-beta-we-are-removing-the-additional-modding-capabilities-experiment-this-experiment-contained-experimental-javascript-apis-launched-in-2018--and-with-this-removal-javascript-within-worlds-associated-with-this-api-will-no-longer-function-gametest-framework--a-separate-javascript-api--should-not-be-impacted-nor-should-behavior-packresource-pack-type-add-ons-more-broadly-you-can-read-more-about-this-via-this-article"},(0,r.kt)("strong",{parentName:"h2"},"Important!")," In this release and starting with this beta, we are removing the Additional Modding Capabilities experiment.\xa0 This experiment contained experimental JavaScript APIs launched in 2018 \u2013 and with this removal, JavaScript within worlds associated with this API will no longer function.\xa0 GameTest Framework \u2013 a separate JavaScript API \u2013 should not be impacted, nor should behavior pack/resource pack type add-ons more broadly. You can read more about this ",(0,r.kt)("a",{parentName:"h2",href:"https://aka.ms/mcamc"},"via this article"),"."),(0,r.kt)("h2",{id:"commands"},"\xa0",(0,r.kt)("strong",{parentName:"h2"},"Commands")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added '/tickingarea' command preload overload"),(0,r.kt)("li",{parentName:"ul"},"Entities must now be loaded for an area to be considered fully loaded and ticking")),(0,r.kt)("h2",{id:"molang"},(0,r.kt)("strong",{parentName:"h2"},"Molang")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Molang expressions inside animation scripts for actor resource definition (pre","_","animation and initialize) that contain capital letters are properly evaluated now with format","_","version 1.18.20 or higher")),(0,r.kt)("h2",{id:"user-interface"},(0,r.kt)("strong",{parentName:"h2"},"User Interface")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The loading progress screen now shows when loading ticking areas marked for preload")),(0,r.kt)("h2",{className:"experimental_divider"},"Experimental Features"),(0,r.kt)("h2",{id:"commands-1"},(0,r.kt)("strong",{parentName:"h2"},"Commands")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added a new '/volumearea ' command to create, remove, and list volumes in the world")),(0,r.kt)("h2",{id:"gametest-framework"},(0,r.kt)("strong",{parentName:"h2"},"GameTest Framework")),(0,r.kt)("p",null,"New Module! We added a ",(0,r.kt)("strong",{parentName:"p"},"mojang-minecraft-ui")," module with API structures for creating simple dialog boxes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added ActionFormData/ModalFormData/MessageFormData types in the mojang-minecraft-ui namespace. More documentation on the new namespace will be showing up on ",(0,r.kt)("a",{parentName:"li",href:"https://aka.ms/buildwithminecraft"},"the Minecraft Creator documentation site"),".")),(0,r.kt)("p",null,"mojang-minecraft module updates:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"World",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Updated property\xa0directionto\xa0blockFace\xa0in world.events.beforeItemUseOn and world.events.itemUseOn",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added event World.event.beforeDataDrivenEntityTriggerEvent - Fires before the data driven trigger is applied"),(0,r.kt)("li",{parentName:"ul"},"Added event World.event.dataDrivenEntityTriggerEvent - Fires after the data driven trigger is applied"),(0,r.kt)("li",{parentName:"ul"},"For the above events, each accept an optional EntityDataDrivenTriggerEventOptions"))),(0,r.kt)("li",{parentName:"ul"},"(Breaking Change) property\xa0entityremoved"),(0,r.kt)("li",{parentName:"ul"},"Added property\xa0entities: Entity","[","]"," - If specified, will restrict to just the specified entities"),(0,r.kt)("li",{parentName:"ul"},"Changed return type of function\xa0getPlayersto\xa0PlayerIterator  "))),(0,r.kt)("li",{parentName:"ul"},"EntityDataDrivenTriggerEventOptions",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Inherited from EntityEventOptions"),(0,r.kt)("li",{parentName:"ul"},"property\xa0eventTypes: string","[","]"," - If specified, will restrict to events with the specified name (I.E\xa0minecraft:ageable","_","grow","_","up)"),(0,r.kt)("li",{parentName:"ul"},"(Inherited) property\xa0entities: Entity","[","]"," - If specified, will restrict to just the specified entities"),(0,r.kt)("li",{parentName:"ul"},"(Inherited) property\xa0entityTypes: string","[","]"," - If specified, will restrict to entities with the specified type (I.E\xa0minecraft:creeper)  "))),(0,r.kt)("li",{parentName:"ul"},"DefinitionModifier",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"read only property\xa0componentGroupsToAdd: string","[","]"," - List of component groups that will be added as part of this modifier"),(0,r.kt)("li",{parentName:"ul"},"read only property\xa0componentGroupsToRemove: string","[","]"," - List of component groups that will be removed as part of this modifier"),(0,r.kt)("li",{parentName:"ul"},"property\xa0triggers: Trigger","[","]"," - List of triggers that will fire as part of this modifier  "))),(0,r.kt)("li",{parentName:"ul"},"Trigger",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"property\xa0eventName: string - Event name of the trigger  "))),(0,r.kt)("li",{parentName:"ul"},"DataDrivenEntityTriggerEvent",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"read only property\xa0entity: Entity - Entity that the event triggered on"),(0,r.kt)("li",{parentName:"ul"},"read only property\xa0id: string - name of the event  "))),(0,r.kt)("li",{parentName:"ul"},"BeforeDataDrivenEntityTriggerEvent",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"read only property\xa0entity: Entity - Entity that the event triggered on"),(0,r.kt)("li",{parentName:"ul"},"read only property\xa0id: string - name of the event"),(0,r.kt)("li",{parentName:"ul"},"property\xa0modifiers: DefinitionModifier","[","]"," - List of modifiers that will be applied when the event triggers"),(0,r.kt)("li",{parentName:"ul"},"property\xa0cancel: bool - If true, the event will not be triggered  "))),(0,r.kt)("li",{parentName:"ul"},"EnchantmentType",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added EnchantmentType class"),(0,r.kt)("li",{parentName:"ul"},"Read-only property\xa0id: string - The name of the enchantment type"),(0,r.kt)("li",{parentName:"ul"},"Read-only property\xa0maxLevel: int - The maximum level this type of enchantment can have  "))),(0,r.kt)("li",{parentName:"ul"},"EnchantmentInstance",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added EnchantmentInstance class. This represents a binding of an EnchantmentType and level that can be added to an item"),(0,r.kt)("li",{parentName:"ul"},"Constructor\xa0EnchantmentInstance(type: EnchantmentType, level : int)"),(0,r.kt)("li",{parentName:"ul"},"Read-only property\xa0type: EnchantmentType - The enchantment type of this instance"),(0,r.kt)("li",{parentName:"ul"},"Property\xa0level: int - The level of this enchantment instance  "))),(0,r.kt)("li",{parentName:"ul"},"EnchantmentSlot",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added EnchantmentSlot enum. This enum represents the item slot or type that an enchantment can be applied to  "))),(0,r.kt)("li",{parentName:"ul"},"EnchantmentList",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added EnchantmentList class. This class represents a collection of enchantments that can be applied to an item"),(0,r.kt)("li",{parentName:"ul"},"Constructor\xa0EnchantmentList(slot : EnchantSlot)"),(0,r.kt)("li",{parentName:"ul"},"Read-only property\xa0slot: EnchantSlot - The item slot/type that this collection is to be applied to"),(0,r.kt)("li",{parentName:"ul"},"Read-only property\xa0allEnchantments: EnchantmentInstance","[","]"," - All enchantments as part of this enchantment collection"),(0,r.kt)("li",{parentName:"ul"},"Method\xa0canAddEnchantment(instance : EnchantmentInstance): bool - Returns whether or not the provided EnchantmentInstance can be added to this collection"),(0,r.kt)("li",{parentName:"ul"},"Method\xa0addEnchantment(instance : EnchantmentInstance): bool - Attempts to add the enchantment to this collection. Returns true if successful"),(0,r.kt)("li",{parentName:"ul"},"Method\xa0removeEnchantment(type : EnchantmentType)- Removes an EnchantmentInstance with type\xa0type\xa0from this collection if present"),(0,r.kt)("li",{parentName:"ul"},"Method\xa0hasEnchantment(type : EnchantmentType): int - If this collection has an EnchantmentInstance with type\xa0type, returns the level of the enchantment. Returns 0 if not present  "))),(0,r.kt)("li",{parentName:"ul"},"ItemEnchantmentComponent",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added ItemEnchantmentComponent Item component class.",(0,r.kt)("br",{parentName:"li"}),"|"))),(0,r.kt)("li",{parentName:"ul"},"ItemStack",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Property\xa0enchantments: EnchantmentList - Gets a copy of the current set of enchantments on this ItemStack. Or allows the user to set the EnchantmentList for the ItemStack"),(0,r.kt)("li",{parentName:"ul"},"Method\xa0removeAllEnchantments- Removes any enchantments that might be present on this ItemStack"),(0,r.kt)("li",{parentName:"ul"},"Added function\xa0setLore(loreList: string","[","]","): void- Sets the lore text for the item"),(0,r.kt)("li",{parentName:"ul"},"Added function\xa0getLore(): string","[","]","- Gets the lore text for the item")))))}u.isMDXComponent=!0},9071:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var a=n(87462),r=(n(67294),n(3905)),i=n(31792),o=n(85162);const l={},s=void 0,c={unversionedId:"components/TechChangelogSwitcher",id:"components/TechChangelogSwitcher",title:"TechChangelogSwitcher",description:"{props.techSapi}",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/components/TechChangelogSwitcher.mdx",sourceDirName:"components",slug:"/components/TechChangelogSwitcher",permalink:"/en/docs/components/TechChangelogSwitcher",draft:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/components/TechChangelogSwitcher.mdx",tags:[],version:"current",frontMatter:{}},p={},u=[],m={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(i.Z,{className:"changelog_sapi_tabs",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"Update Description",mdxType:"TabItem"},n.techSapi),(0,r.kt)(o.Z,{value:"API Changelog",mdxType:"TabItem"},n.techSapiChangelog)))}d.isMDXComponent=!0}}]);