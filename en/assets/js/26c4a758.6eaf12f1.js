"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[81537],{47284:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var n=r(74848),s=r(28453);const i={},o="Interface: IRegisterExtensionOptionalParameters",a={id:"sapi/stable/server-editor/interfaces/IRegisterExtensionOptionalParameters",title:"Interface: IRegisterExtensionOptionalParameters",description:"Optional parameter definition for RegisterEditorExtension",source:"@site/docs/sapi/stable/server-editor/interfaces/IRegisterExtensionOptionalParameters.md",sourceDirName:"sapi/stable/server-editor/interfaces",slug:"/sapi/stable/server-editor/interfaces/IRegisterExtensionOptionalParameters",permalink:"/en/docs/sapi/stable/server-editor/interfaces/IRegisterExtensionOptionalParameters",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/sapi/stable/server-editor/interfaces/IRegisterExtensionOptionalParameters.md",tags:[],version:"current",frontMatter:{},sidebar:"sapiStableSidebar",previous:{title:"IPropertyPaneOptions",permalink:"/en/docs/sapi/stable/server-editor/interfaces/IPropertyPaneOptions"},next:{title:"IStatusBarItem",permalink:"/en/docs/sapi/stable/server-editor/interfaces/IStatusBarItem"}},l={},c=[{value:"Properties",id:"properties",level:2},{value:"description?",id:"description",level:3},{value:"Remarks",id:"remarks",level:4},{value:"notes?",id:"notes",level:3},{value:"Remarks",id:"remarks-1",level:4},{value:"toolGroupId?",id:"toolgroupid",level:3},{value:"Remarks",id:"remarks-2",level:4}];function d(e){const t={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"interface-iregisterextensionoptionalparameters",children:"Interface: IRegisterExtensionOptionalParameters"}),"\n",(0,n.jsx)(t.p,{children:"Optional parameter definition for RegisterEditorExtension\nfunction Allows the extension registrar to specify optional\ntextual description and notes which would be visible through\nthe extension manager"}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(t.h3,{id:"description",children:"description?"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"optional"})," ",(0,n.jsx)(t.strong,{children:"description"}),": ",(0,n.jsx)(t.code,{children:"string"})]}),"\n"]}),"\n",(0,n.jsx)(t.h4,{id:"remarks",children:"Remarks"}),"\n",(0,n.jsx)(t.p,{children:"Description of the extension."}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"notes",children:"notes?"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"optional"})," ",(0,n.jsx)(t.strong,{children:"notes"}),": ",(0,n.jsx)(t.code,{children:"string"})]}),"\n"]}),"\n",(0,n.jsx)(t.h4,{id:"remarks-1",children:"Remarks"}),"\n",(0,n.jsx)(t.p,{children:"Additional notes and description of the extension."}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"toolgroupid",children:"toolGroupId?"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"optional"})," ",(0,n.jsx)(t.strong,{children:"toolGroupId"}),": ",(0,n.jsx)(t.code,{children:"string"})]}),"\n"]}),"\n",(0,n.jsx)(t.h4,{id:"remarks-2",children:"Remarks"}),"\n",(0,n.jsx)(t.p,{children:"An optional custom group identifier that will be used for\nall Modal Tools created from the registered extension."})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var n=r(96540);const s={},i=n.createContext(s);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);