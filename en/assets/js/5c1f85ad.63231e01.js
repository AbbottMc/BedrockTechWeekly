"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[20316,43115,81034,29098,93327,46698],{20383:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var r=t(74848),i=t(28453),s=t(89457),a=t(58915),o=(t(91215),t(84401),t(74450));const l={},c=void 0,d={id:"changelog_source/preview/1.20/50/20/tech",title:"tech",description:"Editor",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/changelog_source/preview/1.20/50/20/tech.mdx",sourceDirName:"changelog_source/preview/1.20/50/20",slug:"/changelog_source/preview/1.20/50/20/tech",permalink:"/en/docs/changelog_source/preview/1.20/50/20/tech",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.20/50/20/tech.mdx",tags:[],version:"current",frontMatter:{}},h={},u=[{value:"<strong>Editor</strong>",id:"editor",level:3},{value:"Add-Ons and Script Engine",id:"add-ons-and-script-engine",level:2},{value:"Animations",id:"animations",level:2},{value:"Blocks",id:"blocks",level:2},{value:"Cameras",id:"cameras",level:2},{value:"AI Goal Components",id:"ai-goal-components",level:2},{value:"<strong>Script API</strong>",id:"script-api",level:2},...o.toc,{value:"Components",id:"components",level:2},{value:"Items",id:"items",level:2},{value:"Mobs",id:"mobs",level:2},{value:"Molang",id:"molang",level:2},{value:"Stability and Performance",id:"stability-and-performance",level:2},{value:"<strong>Script API</strong>",id:"script-api-1",level:2},...o.toc,{value:"Graphical",id:"graphical",level:2},{value:"Performance and Stability",id:"performance-and-stability",level:2}];function p(e){const n={a:"a",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"editor",children:(0,r.jsx)(n.strong,{children:"Editor"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Added eventing support for\xa0",(0,r.jsx)(n.em,{children:"ExtensionContext"}),"\xa0API"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Added new after event\xa0",(0,r.jsx)(n.em,{children:"ModeChangeAfterEvent"}),"\xa0and signal\xa0",(0,r.jsx)(n.em,{children:"ModeChangeAfterEventSignal"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Fixed a bug where Cube Brush preview wasn't getting cleared when swapping to Crosshair mid-brush painting\xa0"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"add-ons-and-script-engine",children:"Add-Ons and Script Engine"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Improved some of the common scripting error messages to provide better context and information"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"animations",children:"Animations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Fixed unreliability around\xa0",(0,r.jsx)(n.em,{children:"query.is_alive"})," on Server"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"blocks",children:"Blocks"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:['Blocks with the "minecraft',":cardinal",'_direction", "minecraft',":facing",'_direction", or "minecraft',":block",'_face" states as part of the "minecraft',":placement",'_direction" or "minecraft',":placement",'_position" BlockTraits are rotated/mirrored properly by Structure Blocks']}),"\n",(0,r.jsxs)(n.li,{children:["Structure Void blocks once again prevents interaction with blocks and entities placed behind them (",(0,r.jsx)(n.a,{href:"https://bugs.mojang.com/browse/MCPE-175237",title:"https://bugs.mojang.com/browse/MCPE-175237",children:"MCPE-175237"}),")"]}),"\n",(0,r.jsx)(n.li,{children:'"planks" block is now split into unique instances "oak_planks", "spruce_planks", "birch_planks", "jungle_planks", "acacia_planks", "dark_oak_planks"'}),"\n",(0,r.jsx)(n.li,{children:'Commands will still work with "planks", however, "planks" block will not be suggested\xa0'}),"\n",(0,r.jsx)(n.li,{children:'"stone" block is now split into unique instances: "stone", "granite", "polished_granite", "diorite", "polished_diorite", "andesite" and "polished_andesite"\xa0'}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"cameras",children:"Cameras"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Added a content warning for when the camera is placed outside of the player's chunk radius\xa0"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"ai-goal-components",children:"AI Goal Components"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:['Added "minecraft',":behavior",'.melee_box_attack" behavior which functions the same as "minecraft',":behavior",'.melee_attack" but uses bounds based attack reach calculations']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The\xa0",(0,r.jsx)(n.em,{children:"reach_multiplier"}),"\xa0attribute is removed and replaced with\xa0",(0,r.jsx)(n.em,{children:"box_increase"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Reach is calculated by increasing the bounds of the attacking mobs in the xz-plane by\xa0",(0,r.jsx)(n.em,{children:"box_increase"}),'\xa0blocks to create an "attack box". If the attack box intersects with the target\'s bounds the attacking mob can reach it']}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"script-api",children:(0,r.jsx)(n.strong,{children:"Script API"})}),"\n",(0,r.jsx)(o.default,{techSapi:(0,r.jsx)(s.default,{}),techSapiDiff:void 0}),"\n",(0,r.jsx)(n.h2,{id:"components",children:"Components"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:['Added "minecraft',":can",'_join_raid" component to allow entities to join existing raids']}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"items",children:"Items"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:['Deprecated the "tag:" legacy item component and released the "minecraft',":tags",'" item component out of experimental in json formats 1.20.50 and higher']}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"mobs",children:"Mobs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Fixed an issue preventing mobs from spawning further than 6 chunks away from the nearest player even if the server's simulation range is larger than 6 chunks (",(0,r.jsx)(n.a,{href:"https://bugs.mojang.com/browse/MCPE-102197",children:"MCPE-102197)"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"molang",children:"Molang"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Fixed animation controller loading to use the pack's\xa0",(0,r.jsx)(n.em,{children:"min_engine_version"}),"\xa0rather than the file's\xa0",(0,r.jsx)(n.em,{children:"format_version"}),"\xa0to determine the Molang Version. This fix applies to animation controllers in packs with a\xa0",(0,r.jsx)(n.em,{children:"min_engine_version"})," of 1.20.50 or higher\xa0"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The following Molang queries are Deprecated and will no longer be available in packs with a\xa0",(0,r.jsx)(n.em,{children:"min_engine_version"}),"\xa0of 1.20.50 or higher"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Replaced with\xa0",(0,r.jsx)(n.em,{children:"query.timer_flag_1"}),", set by\xa0",(0,r.jsx)(n.em,{children:"behavior.timer_flag_1"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Replaced with\xa0",(0,r.jsx)(n.em,{children:"query.timer_flag_2"}),", set by\xa0",(0,r.jsx)(n.em,{children:"behavior.timer_flag_2"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Replaced with\xa0",(0,r.jsx)(n.em,{children:"query.timer_flag_3"}),", set by\xa0",(0,r.jsx)(n.em,{children:"behavior.timer_flag_3"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"It was only used to adjust the head animation of the camel as it came out of dash cooldown"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Camel animation uses\xa0",(0,r.jsx)(n.em,{children:"variable.dash_cooldown_progress"}),"\xa0in camel.entity.json now"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"query.is_scenting"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"query.is_rising"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"query.is_feeling_happy"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"query.dash_cooldown_progress"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"stability-and-performance",children:"Stability and Performance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Removed\xa0",(0,r.jsx)(n.em,{children:"CraftingEventPacket"})]}),"\n"]}),"\n",(0,r.jsx)("h2",{className:"experimental_divider",children:"Experimental Features"}),"\n",(0,r.jsx)(n.h2,{id:"script-api-1",children:(0,r.jsx)(n.strong,{children:"Script API"})}),"\n",(0,r.jsx)(o.default,{techSapi:(0,r.jsx)(a.default,{}),techSapiDiff:void 0}),"\n",(0,r.jsx)(n.h2,{id:"graphical",children:"Graphical"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Changed the Bloom toggle in the Deferred Graphics Video Settings to an intensity slider. The player can now configure bloom intensity to their liking. Bloom can still be disabled by setting the slider to 0"}),"\n",(0,r.jsx)(n.li,{children:"Fixed fullscreen overlays not being displayed when being submerged in Lava and Powdered Snow in the Deferred Technical Preview"}),"\n",(0,r.jsx)(n.li,{children:"Fixed missing Hoppers within Minecarts in the Deferred Technical Preview\xa0"}),"\n",(0,r.jsx)(n.li,{children:"Fixed an issue where certain light emitting blocks (e.g., Sea Lantern, Glowstone, Magma, etc...) could not be turned into point lights in the Deferred Technical Preview\xa0"}),"\n",(0,r.jsx)(n.li,{children:"Fixed the appearance of rain, snow, and other weather effects in the Deferred Technical Preview\xa0"}),"\n",(0,r.jsx)(n.li,{children:"Improved the quality of light sources over large distances in the Deferred Technical Preview\xa0"}),"\n",(0,r.jsx)(n.li,{children:"Balanced the brightness of light emitted from emissive-only blocks in the Deferred Technical Preview\xa0"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"performance-and-stability",children:"Performance and Stability"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Improved performance of directional lighting and shadows on Android and Xbox in the Deferred Technical Preview"}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},58915:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=t(74848),i=t(28453);const s={},a=void 0,o={id:"changelog_source/preview/1.20/50/20/tech_sapi_exp",title:"tech_sapi_exp",description:"-   Added\xa0effectAddBeforeEvent\xa0and removed\xa0effectState\xa0from\xa0effectAddAfterEvent",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/changelog_source/preview/1.20/50/20/tech_sapi_exp.md",sourceDirName:"changelog_source/preview/1.20/50/20",slug:"/changelog_source/preview/1.20/50/20/tech_sapi_exp",permalink:"/en/docs/changelog_source/preview/1.20/50/20/tech_sapi_exp",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.20/50/20/tech_sapi_exp.md",tags:[],version:"current",frontMatter:{}},l={},c=[];function d(e){const n={em:"em",li:"li",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Added\xa0",(0,r.jsx)(n.em,{children:"effectAddBeforeEvent"}),"\xa0and removed\xa0",(0,r.jsx)(n.em,{children:"effectState"}),"\xa0from\xa0",(0,r.jsx)(n.em,{children:"effectAddAfterEvent"})]}),"\n"]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},84401:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=t(74848),i=t(28453);const s={},a=void 0,o={id:"changelog_source/preview/1.20/50/20/tech_sapi_exp_diff",title:"tech_sapi_exp_diff",description:"",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/changelog_source/preview/1.20/50/20/tech_sapi_exp_diff.md",sourceDirName:"changelog_source/preview/1.20/50/20",slug:"/changelog_source/preview/1.20/50/20/tech_sapi_exp_diff",permalink:"/en/docs/changelog_source/preview/1.20/50/20/tech_sapi_exp_diff",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.20/50/20/tech_sapi_exp_diff.md",tags:[],version:"current",frontMatter:{}},l={},c=[];function d(e){return(0,r.jsx)(r.Fragment,{})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d()}},89457:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=t(74848),i=t(28453);const s={},a=void 0,o={id:"changelog_source/preview/1.20/50/20/tech_sapi_stable",title:"tech_sapi_stable",description:"-   Added\xa0BlockComponentTypeMap,\xa0EntityComponentTypeMap, and\xa0ItemComponentTypeMap\xa0aliases which map Component IDs to their TypeScript types",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/changelog_source/preview/1.20/50/20/tech_sapi_stable.md",sourceDirName:"changelog_source/preview/1.20/50/20",slug:"/changelog_source/preview/1.20/50/20/tech_sapi_stable",permalink:"/en/docs/changelog_source/preview/1.20/50/20/tech_sapi_stable",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.20/50/20/tech_sapi_stable.md",tags:[],version:"current",frontMatter:{}},l={},c=[];function d(e){const n={em:"em",li:"li",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Added\xa0",(0,r.jsx)(n.em,{children:"BlockComponentTypeMap"}),",\xa0",(0,r.jsx)(n.em,{children:"EntityComponentTypeMap"}),", and\xa0",(0,r.jsx)(n.em,{children:"ItemComponentTypeMap"}),"\xa0aliases which map Component IDs to their TypeScript types"]}),"\n",(0,r.jsxs)(n.li,{children:["Changed\xa0",(0,r.jsx)(n.em,{children:"Block.getComponent"}),",\xa0",(0,r.jsx)(n.em,{children:"Entity.getComponent"}),", and\xa0",(0,r.jsx)(n.em,{children:"ItemStack.getComponent"}),"\xa0to return the correct derived Component type"]}),"\n",(0,r.jsxs)(n.li,{children:["Added\xa0",(0,r.jsx)(n.em,{children:"BlockComponentTypes"}),",\xa0",(0,r.jsx)(n.em,{children:"EntityComponentTypes"}),", and\xa0",(0,r.jsx)(n.em,{children:"ItemComponentTypes"})," enums that enumerate component ID strings"]}),"\n"]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},91215:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=t(74848),i=t(28453);const s={},a=void 0,o={id:"changelog_source/preview/1.20/50/20/tech_sapi_stable_diff",title:"tech_sapi_stable_diff",description:"",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/changelog_source/preview/1.20/50/20/tech_sapi_stable_diff.md",sourceDirName:"changelog_source/preview/1.20/50/20",slug:"/changelog_source/preview/1.20/50/20/tech_sapi_stable_diff",permalink:"/en/docs/changelog_source/preview/1.20/50/20/tech_sapi_stable_diff",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.20/50/20/tech_sapi_stable_diff.md",tags:[],version:"current",frontMatter:{}},l={},c=[];function d(e){return(0,r.jsx)(r.Fragment,{})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d()}},74450:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>h});var r=t(74848),i=t(28453),s=t(18228),a=t(19365);const o={},l=void 0,c={id:"components/TechChangelogSwitcher",title:"TechChangelogSwitcher",description:"{props.techSapi}",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/components/TechChangelogSwitcher.mdx",sourceDirName:"components",slug:"/components/TechChangelogSwitcher",permalink:"/en/docs/components/TechChangelogSwitcher",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/components/TechChangelogSwitcher.mdx",tags:[],version:"current",frontMatter:{}},d={},h=[];function u(e){return(0,r.jsxs)(s.A,{className:"changelog_sapi_tabs",children:[(0,r.jsx)(a.A,{value:"Update Description",children:e.techSapi}),(0,r.jsx)(a.A,{value:"API Changelog",children:e.techSapiChangelog})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>a});t(96540);var r=t(34164);const i={tabItem:"tabItem_Ymn6"};var s=t(74848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,a),hidden:t,children:n})}},18228:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(96540),i=t(34164),s=t(23104),a=t(56347),o=t(205),l=t(57485),c=t(31682),d=t(89466);function h(e){return function(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:i}}=e;return{value:n,label:t,attributes:r,default:i}}))}function u(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??h(t);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const i=(0,a.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(i.location.search);n.set(s,e),i.replace({...i.location,search:n.toString()})}),[s,i])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,s=u(e),[a,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[c,h]=m({queryString:t,groupId:i}),[g,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,s]=(0,d.Dv)(t);return[i,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:i}),x=(()=>{const e=c??g;return p({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{x&&l(x)}),[x]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),f(e)}),[h,f,s]),tabValues:s}}var f=t(92303);const x={tabList:"tabList_TRJ7",tabItem:"tabItem_hGfb"};var v=t(74848);function b(e){let{className:n,block:t,selectedValue:r,selectValue:a,tabValues:o,rightElement:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),h=e=>{const n=e.currentTarget,t=c.indexOf(n),i=o[t].value;i!==r&&(d(n),a(i))},u=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,v.jsxs)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:[o.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>c.push(e),onKeyDown:u,onClick:h,...s,className:(0,i.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":r===n}),style:{wordBreak:"keep-all"},children:t??n},n)})),l?(0,v.jsx)("div",{className:"w-full",children:l}):void 0]})}function j(e){let{lazy:n,children:t,selectedValue:i}=e;if(n){const e=t.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:t.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function _(e){const n=g(e);return(0,v.jsxs)("div",{className:(0,i.A)("tabs-container",x.tabList),children:[(0,v.jsx)(b,{...e,...n}),(0,v.jsx)(j,{...e,...n})]})}function w(e){const n=(0,f.A)();return(0,v.jsx)(_,{...e},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(96540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);