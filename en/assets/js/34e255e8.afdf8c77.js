"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[54415],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),i=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=i(e.components);return a.createElement(p.Provider,{value:t},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),k=i(r),m=n,d=k["".concat(p,".").concat(m)]||k[m]||u[m]||l;return r?a.createElement(d,o(o({ref:t},c),{},{components:r})):a.createElement(d,o({ref:t},c))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[k]="string"==typeof e?e:n,o[1]=s;for(var i=2;i<l;i++)o[i]=r[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1322:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>k,frontMatter:()=>l,metadata:()=>s,toc:()=>i});var a=r(87462),n=(r(67294),r(3905));const l={id:"BlockPermutation",title:"Class: BlockPermutation",sidebar_label:"BlockPermutation",sidebar_position:0,custom_edit_url:null},o=void 0,s={unversionedId:"sapi/stable/server/classes/BlockPermutation",id:"sapi/stable/server/classes/BlockPermutation",title:"Class: BlockPermutation",description:"Contains the combination of type BlockType and",source:"@site/docs/sapi/stable/server/classes/BlockPermutation.md",sourceDirName:"sapi/stable/server/classes",slug:"/sapi/stable/server/classes/BlockPermutation",permalink:"/en/docs/sapi/stable/server/classes/BlockPermutation",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"BlockPermutation",title:"Class: BlockPermutation",sidebar_label:"BlockPermutation",sidebar_position:0,custom_edit_url:null},sidebar:"sapiStableSidebar",previous:{title:"BlockLocation",permalink:"/en/docs/sapi/stable/server/classes/BlockLocation"},next:{title:"BlockPistonComponent",permalink:"/en/docs/sapi/stable/server/classes/BlockPistonComponent"}},p={},i=[{value:"Properties",id:"properties",level:2},{value:"type",id:"type",level:3},{value:"Methods",id:"methods",level:2},{value:"clone",id:"clone",level:3},{value:"Returns",id:"returns",level:4},{value:"getAllProperties",id:"getallproperties",level:3},{value:"Returns",id:"returns-1",level:4},{value:"getProperty",id:"getproperty",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-2",level:4},{value:"getTags",id:"gettags",level:3},{value:"Returns",id:"returns-3",level:4},{value:"hasTag",id:"hastag",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-4",level:4}],c={toc:i};function k(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Contains the combination of type ",(0,n.kt)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/BlockType"},"BlockType")," and\nproperties (also sometimes called block state) which\ndescribe a block (but does not belong to a specific ",(0,n.kt)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/Block"},"Block"),"). This type was introduced as of version 1.17.10.21."),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"type"},"type"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,n.kt)("strong",{parentName:"p"},"type"),": ",(0,n.kt)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/BlockType"},(0,n.kt)("inlineCode",{parentName:"a"},"BlockType"))),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/BlockType"},"BlockType")," that the permutation has."),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"clone"},"clone"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"clone"),"(): ",(0,n.kt)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/BlockPermutation"},(0,n.kt)("inlineCode",{parentName:"a"},"BlockPermutation"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,n.kt)("p",null,"Creates a copy of this permutation."),(0,n.kt)("h4",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/BlockPermutation"},(0,n.kt)("inlineCode",{parentName:"a"},"BlockPermutation"))),(0,n.kt)("p",null,"A copy of the permutation."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getallproperties"},"getAllProperties"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"getAllProperties"),"(): ",(0,n.kt)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/IBlockProperty"},(0,n.kt)("inlineCode",{parentName:"a"},"IBlockProperty")),"[]"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,n.kt)("p",null,"Returns all available properties associated with this block."),(0,n.kt)("h4",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/IBlockProperty"},(0,n.kt)("inlineCode",{parentName:"a"},"IBlockProperty")),"[]"),(0,n.kt)("p",null,"Returns the list of all of the properties that the\npermutation has."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getproperty"},"getProperty"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"getProperty"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"propertyName"),"): ",(0,n.kt)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/IBlockProperty"},(0,n.kt)("inlineCode",{parentName:"a"},"IBlockProperty"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,n.kt)("p",null,"Gets a property for the permutation."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Throws"))),(0,n.kt)("p",null,"This function can throw errors."),(0,n.kt)("h4",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"propertyName")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string"))))),(0,n.kt)("h4",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/IBlockProperty"},(0,n.kt)("inlineCode",{parentName:"a"},"IBlockProperty"))),(0,n.kt)("p",null,"Returns the property if the permutation has it, else ",(0,n.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"gettags"},"getTags"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"getTags"),"(): ",(0,n.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,n.kt)("p",null,"Creates a copy of the permutation."),(0,n.kt)("h4",{id:"returns-3"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"hastag"},"hasTag"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"hasTag"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"tag"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,n.kt)("p",null,"Checks to see if the permutation has a specific tag."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,n.kt)("p",null,"check_block_tags.js"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'       import { world } from "@minecraft/server";\n\n       // Fetch the block\n       const block = world.getDimension("overworld").getBlock({ x: 1, y: 2, z: 3 });\n       const blockPerm = block.getPermutation();\n\n       console.log(`Block is dirt: ${blockPerm.hasTag("dirt")}`);\n       console.log(`Block is wood: ${blockPerm.hasTag("wood")}`);\n       console.log(`Block is stone: ${blockPerm.hasTag("stone")}`);\n\n')),(0,n.kt)("h4",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"tag")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string"))))),(0,n.kt)("h4",{id:"returns-4"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,"Returns ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," if the permutation has the tag, else ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"."))}k.isMDXComponent=!0}}]);