"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[83271],{65663:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var s=t(74848),i=t(28453);const o={},r=void 0,c={id:"changelog_source/preview/1.21/0/20/tech_sapi_exp",title:"tech_sapi_exp",description:"-   Added ItemComponentMineBlockEvent for beta",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/changelog_source/preview/1.21/0/20/tech_sapi_exp.md",sourceDirName:"changelog_source/preview/1.21/0/20",slug:"/changelog_source/preview/1.21/0/20/tech_sapi_exp",permalink:"/en/docs/changelog_source/preview/1.21/0/20/tech_sapi_exp",draft:!1,unlisted:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/preview/1.21/0/20/tech_sapi_exp.md",tags:[],version:"current",frontMatter:{}},l={},d=[];function a(e){const n={em:"em",li:"li",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Added ItemComponentMineBlockEvent for beta"}),"\n",(0,s.jsxs)(n.li,{children:["Event Signals\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'Unsubscribe is no longer marked as "@throws". It does not throw exceptions and never has.'}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Added\xa0_getAll_to\xa0",(0,s.jsx)(n.em,{children:"beta"})]}),"\n",(0,s.jsxs)(n.li,{children:["Added\xa0_PlayerInputPermissions_and\xa0",(0,s.jsx)(n.em,{children:"inputPermissions"})," for enabling & disabling categories of player input permissions"]}),"\n",(0,s.jsxs)(n.li,{children:["Added\xa0",(0,s.jsx)(n.em,{children:"InputPermissionCategory"})]}),"\n",(0,s.jsx)(n.li,{children:"Added\xa0_afterEvents.playerInputPermissionCategoryChange_for listening to changes to a players input permissions"}),"\n",(0,s.jsxs)(n.li,{children:["Added\xa0_ignoreBlockCollision_to\xa0",(0,s.jsx)(n.em,{children:"EntityRaycastOptions"}),"\xa0which when true, will make the raycast not stop on block collision"]}),"\n",(0,s.jsxs)(n.li,{children:["Added\xa0_includePassableBlocks_to\xa0",(0,s.jsx)(n.em,{children:"EntityRaycastOptions"}),"\xa0which when true, passable blocks like vines and flowers will be considered as blocks that 'stop' the raycast"]}),"\n",(0,s.jsxs)(n.li,{children:["Added\xa0_includeLiquidBlocks_to\xa0",(0,s.jsx)(n.em,{children:"EntityRaycastOptions"}),"\xa0which when true, liquid blocks will be considered as blocks that stop the raycast"]}),"\n",(0,s.jsx)(n.li,{children:"Added ItemComponentHitEntityEvent and ItemComponentBeforeDurabilityDamageEvent for beta"}),"\n"]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(96540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);