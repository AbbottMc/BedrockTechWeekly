"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[51947],{15680:(e,n,a)=>{a.d(n,{xA:()=>g,yg:()=>h});var t=a(96540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=t.createContext({}),s=function(e){var n=t.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},g=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},y="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),y=s(a),m=r,h=y["".concat(p,".").concat(m)]||y[m]||d[m]||o;return a?t.createElement(h,i(i({ref:n},g),{},{components:a})):t.createElement(h,i({ref:n},g))}));function h(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[y]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},84887:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var t=a(58168),r=(a(96540),a(15680));const o={id:"EntityNavigationHoverComponent",title:"Class: EntityNavigationHoverComponent",sidebar_label:"EntityNavigationHoverComponent",sidebar_position:0,custom_edit_url:null},i=void 0,l={unversionedId:"sapi/stable/server/classes/EntityNavigationHoverComponent",id:"sapi/stable/server/classes/EntityNavigationHoverComponent",title:"Class: EntityNavigationHoverComponent",description:"Allows this entity to generate paths in the air (for",source:"@site/docs/sapi/stable/server/classes/EntityNavigationHoverComponent.md",sourceDirName:"sapi/stable/server/classes",slug:"/sapi/stable/server/classes/EntityNavigationHoverComponent",permalink:"/en/docs/sapi/stable/server/classes/EntityNavigationHoverComponent",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"EntityNavigationHoverComponent",title:"Class: EntityNavigationHoverComponent",sidebar_label:"EntityNavigationHoverComponent",sidebar_position:0,custom_edit_url:null},sidebar:"sapiStableSidebar",previous:{title:"EntityNavigationGenericComponent",permalink:"/en/docs/sapi/stable/server/classes/EntityNavigationGenericComponent"},next:{title:"EntityNavigationWalkComponent",permalink:"/en/docs/sapi/stable/server/classes/EntityNavigationWalkComponent"}},p={},s=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Overrides",id:"overrides",level:4},{value:"Properties",id:"properties",level:2},{value:"avoidDamageBlocks",id:"avoiddamageblocks",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"avoidPortals",id:"avoidportals",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"avoidSun",id:"avoidsun",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"avoidWater",id:"avoidwater",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"canBreach",id:"canbreach",level:3},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"canBreakDoors",id:"canbreakdoors",level:3},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"canFloat",id:"canfloat",level:3},{value:"Inherited from",id:"inherited-from-6",level:4},{value:"canJump",id:"canjump",level:3},{value:"Inherited from",id:"inherited-from-7",level:4},{value:"canOpenDoors",id:"canopendoors",level:3},{value:"Inherited from",id:"inherited-from-8",level:4},{value:"canOpenIronDoors",id:"canopenirondoors",level:3},{value:"Inherited from",id:"inherited-from-9",level:4},{value:"canPassDoors",id:"canpassdoors",level:3},{value:"Inherited from",id:"inherited-from-10",level:4},{value:"canPathFromAir",id:"canpathfromair",level:3},{value:"Inherited from",id:"inherited-from-11",level:4},{value:"canPathOverLava",id:"canpathoverlava",level:3},{value:"Inherited from",id:"inherited-from-12",level:4},{value:"canPathOverWater",id:"canpathoverwater",level:3},{value:"Inherited from",id:"inherited-from-13",level:4},{value:"canSink",id:"cansink",level:3},{value:"Inherited from",id:"inherited-from-14",level:4},{value:"canSwim",id:"canswim",level:3},{value:"Inherited from",id:"inherited-from-15",level:4},{value:"canWalk",id:"canwalk",level:3},{value:"Inherited from",id:"inherited-from-16",level:4},{value:"canWalkInLava",id:"canwalkinlava",level:3},{value:"Inherited from",id:"inherited-from-17",level:4},{value:"entity",id:"entity",level:3},{value:"Inherited from",id:"inherited-from-18",level:4},{value:"isAmphibious",id:"isamphibious",level:3},{value:"Inherited from",id:"inherited-from-19",level:4},{value:"typeId",id:"typeid",level:3},{value:"Inherited from",id:"inherited-from-20",level:4},{value:"componentId",id:"componentid",level:3},{value:"Methods",id:"methods",level:2},{value:"isValid",id:"isvalid",level:3},{value:"Returns",id:"returns",level:4},{value:"Inherited from",id:"inherited-from-21",level:4}],g={toc:s},y="wrapper";function d(e){let{components:n,...a}=e;return(0,r.yg)(y,(0,t.A)({},g,a,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Allows this entity to generate paths in the air (for\nexample, like the Minecraft Bees do.) Keeps them from\nfalling out of the skies and doing predictive movement."),(0,r.yg)("h2",{id:"hierarchy"},"Hierarchy"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},(0,r.yg)("inlineCode",{parentName:"a"},"EntityNavigationComponent"))),(0,r.yg)("p",{parentName:"li"},"\u21b3 ",(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"EntityNavigationHoverComponent"))))),(0,r.yg)("h2",{id:"constructors"},"Constructors"),(0,r.yg)("h3",{id:"constructor"},"constructor"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Private")," ",(0,r.yg)("strong",{parentName:"p"},"new EntityNavigationHoverComponent"),"()"),(0,r.yg)("h4",{id:"overrides"},"Overrides"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#constructor"},"constructor")),(0,r.yg)("h2",{id:"properties"},"Properties"),(0,r.yg)("h3",{id:"avoiddamageblocks"},"avoidDamageBlocks"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"avoidDamageBlocks"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder to avoid blocks that cause damage when\nfinding a path."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#avoiddamageblocks"},"avoidDamageBlocks")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"avoidportals"},"avoidPortals"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"avoidPortals"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder to avoid portals (like nether portals)\nwhen finding a path."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-1"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#avoidportals"},"avoidPortals")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"avoidsun"},"avoidSun"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"avoidSun"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Whether or not the pathfinder should avoid tiles that are\nexposed to the sun when creating paths."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-2"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#avoidsun"},"avoidSun")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"avoidwater"},"avoidWater"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"avoidWater"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder to avoid water when creating a path."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-3"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#avoidwater"},"avoidWater")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"canbreach"},"canBreach"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"canBreach"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder whether or not it can jump out of water\n(like a dolphin)."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-4"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#canbreach"},"canBreach")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"canbreakdoors"},"canBreakDoors"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"canBreakDoors"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder that it can path through a closed door\nand break it."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-5"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#canbreakdoors"},"canBreakDoors")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"canfloat"},"canFloat"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"canFloat"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder whether or not it can float."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-6"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#canfloat"},"canFloat")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"canjump"},"canJump"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"canJump"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder whether or not it can jump up blocks."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-7"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#canjump"},"canJump")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"canopendoors"},"canOpenDoors"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"canOpenDoors"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder that it can path through a closed door\nassuming the AI will open the door."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-8"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#canopendoors"},"canOpenDoors")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"canopenirondoors"},"canOpenIronDoors"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"canOpenIronDoors"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder that it can path through a closed iron\ndoor assuming the AI will open the door."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-9"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#canopenirondoors"},"canOpenIronDoors")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"canpassdoors"},"canPassDoors"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"canPassDoors"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Whether a path can be created through a door."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-10"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#canpassdoors"},"canPassDoors")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"canpathfromair"},"canPathFromAir"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"canPathFromAir"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder that it can start pathing when in the\nair."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-11"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#canpathfromair"},"canPathFromAir")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"canpathoverlava"},"canPathOverLava"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"canPathOverLava"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder whether or not it can travel on the\nsurface of the lava."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-12"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#canpathoverlava"},"canPathOverLava")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"canpathoverwater"},"canPathOverWater"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"canPathOverWater"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder whether or not it can travel on the\nsurface of the water."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-13"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#canpathoverwater"},"canPathOverWater")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"cansink"},"canSink"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"canSink"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder whether or not it will be pulled down\nby gravity while in water."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-14"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#cansink"},"canSink")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"canswim"},"canSwim"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"canSwim"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder whether or not it can path anywhere\nthrough water and plays swimming animation along that path."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-15"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#canswim"},"canSwim")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"canwalk"},"canWalk"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"canWalk"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder whether or not it can walk on the\nground outside water."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-16"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#canwalk"},"canWalk")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"canwalkinlava"},"canWalkInLava"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"canWalkInLava"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder whether or not it can travel in lava\nlike walking on ground."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-17"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#canwalkinlava"},"canWalkInLava")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"entity"},"entity"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"entity"),": ",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/Entity"},(0,r.yg)("inlineCode",{parentName:"a"},"Entity"))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"The entity that owns this component. The entity will be\nundefined if it has been removed."),(0,r.yg)("h4",{id:"inherited-from-18"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#entity"},"entity")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"isamphibious"},"isAmphibious"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"isAmphibious"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Tells the pathfinder whether or not it can walk on the\nground or go underwater."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Throws"))),(0,r.yg)("p",null,"This property can throw when used."),(0,r.yg)("h4",{id:"inherited-from-19"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#isamphibious"},"isAmphibious")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"typeid"},"typeId"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"typeId"),": ",(0,r.yg)("inlineCode",{parentName:"p"},"string")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Identifier of the component."),(0,r.yg)("h4",{id:"inherited-from-20"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#typeid"},"typeId")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"componentid"},"componentId"),(0,r.yg)("p",null,"\u25aa ",(0,r.yg)("inlineCode",{parentName:"p"},"Static")," ",(0,r.yg)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.yg)("strong",{parentName:"p"},"componentId"),": ",(0,r.yg)("inlineCode",{parentName:"p"},'"minecraft:navigation.hover"')),(0,r.yg)("h2",{id:"methods"},"Methods"),(0,r.yg)("h3",{id:"isvalid"},"isValid"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"isValid"),"(): ",(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Returns whether the component is valid. A component is\nconsidered valid if its owner is valid, in addition to any\naddition to any additional validation required by the\ncomponent."),(0,r.yg)("h4",{id:"returns"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"boolean")),(0,r.yg)("p",null,"Whether the component is valid."),(0,r.yg)("h4",{id:"inherited-from-21"},"Inherited from"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent"},"EntityNavigationComponent"),".",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/stable/server/classes/EntityNavigationComponent#isvalid"},"isValid")))}d.isMDXComponent=!0}}]);