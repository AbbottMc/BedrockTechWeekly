"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[81660],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>m});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(n),g=r,m=c["".concat(l,".").concat(g)]||c[g]||y[g]||i;return n?a.createElement(m,o(o({ref:t},p),{},{components:n})):a.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:r,o[1]=s;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},17152:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>y,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var a=n(58168),r=(n(96540),n(15680));const i={id:"UserDefinedTransactionHandle",title:"Class: UserDefinedTransactionHandle<T>",sidebar_label:"UserDefinedTransactionHandle",sidebar_position:0,custom_edit_url:null},o=void 0,s={unversionedId:"sapi/preview/server-editor/classes/UserDefinedTransactionHandle",id:"sapi/preview/server-editor/classes/UserDefinedTransactionHandle",title:"Class: UserDefinedTransactionHandle<T>",description:"A strongly typed transaction handle to enforce type safety",source:"@site/docs/sapi/preview/server-editor/classes/UserDefinedTransactionHandle.md",sourceDirName:"sapi/preview/server-editor/classes",slug:"/sapi/preview/server-editor/classes/UserDefinedTransactionHandle",permalink:"/en/docs/sapi/preview/server-editor/classes/UserDefinedTransactionHandle",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"UserDefinedTransactionHandle",title:"Class: UserDefinedTransactionHandle<T>",sidebar_label:"UserDefinedTransactionHandle",sidebar_position:0,custom_edit_url:null},sidebar:"sapiPreviewSidebar",previous:{title:"TransactionManager",permalink:"/en/docs/sapi/preview/server-editor/classes/TransactionManager"},next:{title:"UserDefinedTransactionHandlerId",permalink:"/en/docs/sapi/preview/server-editor/classes/UserDefinedTransactionHandlerId"}},l={},d=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Methods",id:"methods",level:2},{value:"addUserDefinedOperation",id:"adduserdefinedoperation",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4}],p={toc:d},c="wrapper";function y(e){let{components:t,...n}=e;return(0,r.yg)(c,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"A strongly typed transaction handle to enforce type safety\nwhen adding user defined transactions.",(0,r.yg)("br",null)," This transaction\nhandle becomes the context for adding the transaction to the\ntransaction manager.",(0,r.yg)("br",null)," You can obtain one of these handles\nby calling ",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server-editor/modules#registeruserdefinedtransactionhandler"},"registerUserDefinedTransactionHandler")),(0,r.yg)("h2",{id:"type-parameters"},"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"T"))))),(0,r.yg)("h2",{id:"constructors"},"Constructors"),(0,r.yg)("h3",{id:"constructor"},"constructor"),(0,r.yg)("p",null,"\u2022 ",(0,r.yg)("strong",{parentName:"p"},"new UserDefinedTransactionHandle"),"<",(0,r.yg)("inlineCode",{parentName:"p"},"T"),">","(",(0,r.yg)("inlineCode",{parentName:"p"},"nativeHandle"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"transactionManager"),")"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Constructs a new instance of the\n",(0,r.yg)("inlineCode",{parentName:"p"},"UserDefinedTransactionHandle")," class"),(0,r.yg)("h4",{id:"type-parameters-1"},"Type parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"T"))))),(0,r.yg)("h4",{id:"parameters"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"nativeHandle")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("a",{parentName:"td",href:"/en/docs/sapi/preview/server-editor/classes/UserDefinedTransactionHandlerId"},(0,r.yg)("inlineCode",{parentName:"a"},"UserDefinedTransactionHandlerId")))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"transactionManager")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("a",{parentName:"td",href:"/en/docs/sapi/preview/server-editor/classes/TransactionManager"},(0,r.yg)("inlineCode",{parentName:"a"},"TransactionManager")))))),(0,r.yg)("h2",{id:"methods"},"Methods"),(0,r.yg)("h3",{id:"adduserdefinedoperation"},"addUserDefinedOperation"),(0,r.yg)("p",null,"\u25b8 ",(0,r.yg)("strong",{parentName:"p"},"addUserDefinedOperation"),"(",(0,r.yg)("inlineCode",{parentName:"p"},"payload"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"transactionName"),"): ",(0,r.yg)("inlineCode",{parentName:"p"},"void")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("inlineCode",{parentName:"strong"},"Remarks"))),(0,r.yg)("p",null,"Add a user defined transaction operation to the transaction\nmanager with a payload of the specified type. This allows\nthe extension to open a transaction, and insert custom data\nobjects into the transaction log which are stored until an\nundo or redo event occurs. The payload data added here is\nstored and then passed to the undo/redo handlers (registered\nwith ",(0,r.yg)("a",{parentName:"p",href:"/en/docs/sapi/preview/server-editor/modules#registeruserdefinedtransactionhandler"},"registerUserDefinedTransactionHandler"),") when an\nundo/redo event is requested. NOTE:",(0,r.yg)("br",null)," Transactions can\ncontain multiple operations - you can open a transaction and\nadd any (reasonable) number of operations to it (of the same\nor differing types) before committing to the transaction\nlog. NOTE/WARNING:",(0,r.yg)("br",null)," The payload data is serialized to\nJSON before being inserted into the transaction log and the\nunderlying implementation uses the JSON.stringify() function\nto serialize the data. Any non-primitive data, such as\nclasses or minecraft native objects will not serialize to\nJSON properly, so you should avoid using them as payload\ndata."),(0,r.yg)("h4",{id:"parameters-1"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"payload")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"T")),(0,r.yg)("td",{parentName:"tr",align:"left"},"The data object to be inserted into the transaction log.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"transactionName")),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:"left"},"A string name that will be associated with this operation")))),(0,r.yg)("h4",{id:"returns"},"Returns"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"void")))}y.isMDXComponent=!0}}]);