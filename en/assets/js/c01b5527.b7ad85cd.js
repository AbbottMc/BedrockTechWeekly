"use strict";(self.webpackChunkbedrock_tech=self.webpackChunkbedrock_tech||[]).push([[60758],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=s(r),d=a,f=p["".concat(c,".").concat(d)]||p[d]||u[d]||o;return r?n.createElement(f,l(l({ref:t},m),{},{components:r})):n.createElement(f,l({ref:t},m))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},53794:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const o={},l=void 0,i={unversionedId:"changelog_source/stable/1.20/70-71/tech_sapi_stable",id:"changelog_source/stable/1.20/70-71/tech_sapi_stable",title:"tech_sapi_stable",description:"-   Added ScriptGameRules and gameRules for accessing and modifying game rules",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/changelog_source/stable/1.20/70-71/tech_sapi_stable.md",sourceDirName:"changelog_source/stable/1.20/70-71",slug:"/changelog_source/stable/1.20/70-71/tech_sapi_stable",permalink:"/en/docs/changelog_source/stable/1.20/70-71/tech_sapi_stable",draft:!1,editUrl:"https://github.com/AbbottMc/BedrockTechWeekly/tree/master/docs/changelog_source/stable/1.20/70-71/tech_sapi_stable.md",tags:[],version:"current",frontMatter:{}},c={},s=[],m={toc:s};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Added ",(0,a.kt)("em",{parentName:"li"},"ScriptGameRules")," and ",(0,a.kt)("em",{parentName:"li"},"gameRules")," for accessing and modifying game rules"),(0,a.kt)("li",{parentName:"ul"},"Fixed the timing of ",(0,a.kt)("em",{parentName:"li"},"PlayerInteractWithEntityAfterEvent")," and ",(0,a.kt)("em",{parentName:"li"},"PlayerInteractWithBlockAfterEvent")),(0,a.kt)("li",{parentName:"ul"},"Added ",(0,a.kt)("em",{parentName:"li"},"setGameMode")," and ",(0,a.kt)("em",{parentName:"li"},"Player.getGameMode")," to ",(0,a.kt)("em",{parentName:"li"},"beta")," for changing the player's GameMode"),(0,a.kt)("li",{parentName:"ul"},"Added events ",(0,a.kt)("em",{parentName:"li"},"PlayerGameModeChangeAfterEvent"),", ",(0,a.kt)("em",{parentName:"li"},"PlayerGameModeChangeBeforeEvent")," with signals ",(0,a.kt)("em",{parentName:"li"},"afterEvents.playerGameModeChange")," and ",(0,a.kt)("em",{parentName:"li"},"world.beforeEvents.playerGameModeChange")," to ",(0,a.kt)("em",{parentName:"li"},"beta")),(0,a.kt)("li",{parentName:"ul"},"Added ",(0,a.kt)("em",{parentName:"li"},"GameRuleChangeAfterEvent"),", ",(0,a.kt)("em",{parentName:"li"},"GameRule")," and ",(0,a.kt)("em",{parentName:"li"},"afterEvents.gameRuleChange")," for responding to GameRules changes"),(0,a.kt)("li",{parentName:"ul"},"Fixed ",(0,a.kt)("em",{parentName:"li"},"getBlockFromRay")," returning false positive collisions with water when already submerged")))}p.isMDXComponent=!0}}]);