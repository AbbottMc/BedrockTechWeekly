/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation

 The sidebars can be generated from the filesystem, or explicitly defined here.

 Create as many sidebars as you want.
 */

const moduleNames = {
  'common': ['classes', 'interfaces'],
  'server': ['classes', 'interfaces', 'enums'],
  'server-ui': ['classes', 'enums'],
  'server-admin': ['classes'],
  'server-net': ['classes', 'enums'],
  'server-gametest': ['classes'],
  'server-editor': ['classes', 'interfaces', 'enums']
};
const genSapiModuleSidebar = function (path, moduleName, moduleParseResultItemNameArr) {
  const ret = {
    type: 'category',
    label: '@minecraft/' + moduleName,
    items: []
  };
  const itemLabelList = {
    'classes': '类',
    'interfaces': '接口',
    'enums': '枚举'
  };
  moduleParseResultItemNameArr.forEach((itemName) => {
    ret.items.push({
      type: 'category',
      label: itemLabelList[itemName],
      items: [
        {
          type: 'autogenerated',
          dirName: `sapi/${path}/${moduleName}/${itemName}`,
        }
      ]
    });
  });
  return ret;
}
const sapiModuleSidebarGenerator = function (isStable) {
  const path = isStable ? 'stable' : 'preview';
  const ret = [];
  for (const moduleNamesKey in moduleNames) {
    ret.push(genSapiModuleSidebar(path, moduleNamesKey, moduleNames[moduleNamesKey]));
  }
  return ret;
};

const changelogSidebarData = {
  preview: {
    ['1.19']: {
      ['80']: ['22', '23', '24']
    },
    ['1.20']: {
      ['0']: ['20', '21', '22', '23', '24', '25'],
      ['10']: ['20', '21', '23', '24', '25'],
      ['20']: ['20', '21', '22', '23'],
      ['30']: ['20', '21', '22', '24', '25'],
      ['40']: ['20', '21', '22', '23', '24'],
      ['50']: ['20', '21', '22', '23', '24'],
      ['60']: ['20', '21', '22', '23', '24', '25', '26'],
      ['70']: ['20', '21', '22', '24', '25'],
      ['80']: ['20', '21', '22', '23', '24'],
    },
    ['1.21']: {
      ['0']: ['20', '21', '22', '23'],
    }
  },
  stable: {
    ['1.19']: ['73', '80', '81', '83'],
    ['1.20']: ['0', '1', '10', '12', '13', '14', '15', '30', '31', '32', '40', '41', '50', '51', '60', '62', '70-71',
      '72', '73', '80'],
  }
};

const generateChangelogSidebar = function (isStable) {
  const path = isStable ? 'stable' : 'preview';
  const ret = [];
  Object.entries(changelogSidebarData[path]).reverse().forEach(([majorVersion, minorVersionListObj]) => {
    ret.push({
      type: 'category',
      label: majorVersion,
      items: !isStable ? Object.entries(minorVersionListObj).reverse().map(([minorVersion, patchVersionList]) => {
        return {
          type: 'category',
          label: `${majorVersion}.${minorVersion}`,
          items: patchVersionList.reverse().map((patchVersion) => {
            return {
              type: 'doc',
              label: `${majorVersion}.${minorVersion}.${patchVersion}`,
              id: `official_changelog/${path}/${majorVersion}/${minorVersion}/${patchVersion}`,
            }
          })
        }
      }) : minorVersionListObj.reverse().map((minorVersion) => {
        return {
          type: 'doc',
          label: `${majorVersion}.${minorVersion}`,
          id: `official_changelog/${path}/${majorVersion}/${minorVersion}`,
        }
      })
    });
  });
  return {
    type: 'category',
    label: `${isStable ? '稳定版' : '预览版'}更新`,
    items: ret
  };
};
/** @type {import('@docusaurus/plugin-content-docs').SidebarsConfig} */
const sidebars = {
  // By default, Docusaurus generates a sidebar from the docs folder structure
  // tutorialSidebar: [{
  //   type: 'autogenerated',
  //   dirName: 'official_changelog'
  // }],
  changelogSidebar: [
    {
      type: 'doc',
      label: '官方更新日志', // 侧边栏标签
      id: 'official_changelog/README'
    },
    generateChangelogSidebar(false),
    generateChangelogSidebar(true)
  ],
  sapiPreviewSidebar: [
    {
      type: 'doc',
      label: '脚本API文档', // 侧边栏标签
      id: 'sapi/preview/README'
    },
    ...sapiModuleSidebarGenerator(false)
  ],
  sapiStableSidebar: [
    {
      type: 'doc',
      label: '脚本API文档', // 侧边栏标签
      id: 'sapi/stable/README'
    },
    ...sapiModuleSidebarGenerator(true)
  ],
  sapiPreview: [],
  // But you can create a sidebar manually
  /*
  tutorialSidebar: [
    'intro',
    'hello',
    {
      type: 'category',
      label: 'Tutorial',
      items: ['tutorial-basics/create-a-document'],
    },
  ],
   */
};

module.exports = sidebars;
